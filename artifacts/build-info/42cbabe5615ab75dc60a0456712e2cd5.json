{"id":"42cbabe5615ab75dc60a0456712e2cd5","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable2Step.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() external {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/Aave/DataTypes.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    uint40 lastUpdateTimestamp;\n    //tokens addresses\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint8 id;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: Reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60-63: reserved\n    //bit 64-79: reserve factor\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    uint256 data;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n}"},"contracts/Aave/ILendingPool.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\nimport {DataTypes} from './DataTypes.sol';\n\ninterface ILendingPool {\n  /**\n   * @dev Emitted on deposit()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the deposit\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n   * @param amount The amount deposited\n   * @param referral The referral code used\n   **/\n  event Deposit(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlyng asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to Address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed\n   * @param referral The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 borrowRateMode,\n    uint256 borrowRate,\n    uint16 indexed referral\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address indexed initiator,\n    address indexed asset,\n    uint256 amount,\n    uint256 premium,\n    uint16 referralCode\n  );\n\n  /**\n   * @dev Emitted when the pause is triggered.\n   */\n  event Paused();\n\n  /**\n   * @dev Emitted when the pause is lifted.\n   */\n  event Unpaused();\n\n  /**\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n   * LendingPoolCollateral manager using a DELEGATECALL\n   * This allows to have the events in the generated ABI for LendingPool.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n   * gets added to the LendingPool ABI\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The new liquidity rate\n   * @param stableBorrowRate The new stable borrow rate\n   * @param variableBorrowRate The new variable borrow rate\n   * @param liquidityIndex The new liquidity index\n   * @param variableBorrowIndex The new variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to deposit\n   * @param amount The amount to be deposited\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to Address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 rateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n   * @param asset The address of the underlying asset borrowed\n   * @param rateMode The rate mode that the user wants to swap to\n   **/\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\n\n  /**\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n   *        borrowed at a stable rate and depositors are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\n   * @param asset The address of the underlying asset deposited\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n   * For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts amounts being flash-borrowed\n   * @param modes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata modes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralETH the total collateral in ETH of the user\n   * @return totalDebtETH the total debt in ETH of the user\n   * @return availableBorrowsETH the borrowing power left of the user\n   * @return currentLiquidationThreshold the liquidation threshold of the user\n   * @return ltv the loan to value of the user\n   * @return healthFactor the current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralETH,\n      uint256 totalDebtETH,\n      uint256 availableBorrowsETH,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  function initReserve(\n    address reserve,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\n    external;\n\n  function setConfiguration(address reserve, uint256 configuration) external;\n\n  /**\n   * @dev Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @dev Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @dev Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @dev Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromAfter,\n    uint256 balanceToBefore\n  ) external;\n\n  function getReservesList() external view returns (address[] memory);\n\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\n\n  function setPause(bool val) external;\n\n  function paused() external view returns (bool);\n}"},"contracts/Aave/ILendingPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title LendingPoolAddressesProvider contract\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\n * - Owned by the Aave Governance\n * @author Aave\n **/\ninterface ILendingPoolAddressesProvider {\n  event MarketIdSet(string newMarketId);\n  event LendingPoolUpdated(address indexed newAddress);\n  event ConfigurationAdminUpdated(address indexed newAddress);\n  event EmergencyAdminUpdated(address indexed newAddress);\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\n  event PriceOracleUpdated(address indexed newAddress);\n  event LendingRateOracleUpdated(address indexed newAddress);\n  event ProxyCreated(bytes32 id, address indexed newAddress);\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\n\n  function getMarketId() external view returns (string memory);\n\n  function setMarketId(string calldata marketId) external;\n\n  function setAddress(bytes32 id, address newAddress) external;\n\n  function setAddressAsProxy(bytes32 id, address impl) external;\n\n  function getAddress(bytes32 id) external view returns (address);\n\n  function getLendingPool() external view returns (address);\n\n  function setLendingPoolImpl(address pool) external;\n\n  function getLendingPoolConfigurator() external view returns (address);\n\n  function setLendingPoolConfiguratorImpl(address configurator) external;\n\n  function getLendingPoolCollateralManager() external view returns (address);\n\n  function setLendingPoolCollateralManager(address manager) external;\n\n  function getPoolAdmin() external view returns (address);\n\n  function setPoolAdmin(address admin) external;\n\n  function getEmergencyAdmin() external view returns (address);\n\n  function setEmergencyAdmin(address admin) external;\n\n  function getPriceOracle() external view returns (address);\n\n  function setPriceOracle(address priceOracle) external;\n\n  function getLendingRateOracle() external view returns (address);\n\n  function setLendingRateOracle(address lendingRateOracle) external;\n}"},"contracts/Aave/IScaledBalanceToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\ninterface IScaledBalanceToken {\n  /**\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\n   * @param user The user whose balance is calculated\n   * @return The scaled balance of the user\n   **/\n  function scaledBalanceOf(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the scaled balance of the user and the scaled total supply.\n   * @param user The address of the user\n   * @return The scaled balance of the user\n   * @return The scaled balance and the scaled total supply\n   **/\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n   * @return The scaled total supply\n   **/\n  function scaledTotalSupply() external view returns (uint256);\n}"},"contracts/Aave/IStableDebtToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IStableDebtToken\n * @notice Defines the interface for the stable debt token\n * @dev It does not inherit from IERC20 to save in code size\n * @author Aave\n **/\n\ninterface IStableDebtToken {\n  /**\n   * @dev Emitted when new stable debt is minted\n   * @param user The address of the user who triggered the minting\n   * @param onBehalfOf The recipient of stable debt tokens\n   * @param amount The amount minted\n   * @param currentBalance The current balance of the user\n   * @param balanceIncrease The increase in balance since the last action of the user\n   * @param newRate The rate of the debt after the minting\n   * @param avgStableRate The new average stable rate after the minting\n   * @param newTotalSupply The new total supply of the stable debt token after the action\n   **/\n  event Mint(\n    address indexed user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint256 currentBalance,\n    uint256 balanceIncrease,\n    uint256 newRate,\n    uint256 avgStableRate,\n    uint256 newTotalSupply\n  );\n\n  /**\n   * @dev Emitted when new stable debt is burned\n   * @param user The address of the user\n   * @param amount The amount being burned\n   * @param currentBalance The current balance of the user\n   * @param balanceIncrease The the increase in balance since the last action of the user\n   * @param avgStableRate The new average stable rate after the burning\n   * @param newTotalSupply The new total supply of the stable debt token after the action\n   **/\n  event Burn(\n    address indexed user,\n    uint256 amount,\n    uint256 currentBalance,\n    uint256 balanceIncrease,\n    uint256 avgStableRate,\n    uint256 newTotalSupply\n  );\n\n  /**\n   * @dev Mints debt token to the `onBehalfOf` address.\n   * - The resulting rate is the weighted average between the rate of the new debt\n   * and the rate of the previous debt\n   * @param user The address receiving the borrowed underlying, being the delegatee in case\n   * of credit delegate, or same as `onBehalfOf` otherwise\n   * @param onBehalfOf The address receiving the debt tokens\n   * @param amount The amount of debt tokens to mint\n   * @param rate The rate of the debt being minted\n   **/\n  function mint(\n    address user,\n    address onBehalfOf,\n    uint256 amount,\n    uint256 rate\n  ) external returns (bool);\n\n  /**\n   * @dev Burns debt of `user`\n   * - The resulting rate is the weighted average between the rate of the new debt\n   * and the rate of the previous debt\n   * @param user The address of the user getting his debt burned\n   * @param amount The amount of debt tokens getting burned\n   **/\n  function burn(address user, uint256 amount) external;\n\n  /**\n   * @dev Returns the average rate of all the stable rate loans.\n   * @return The average stable rate\n   **/\n  function getAverageStableRate() external view returns (uint256);\n\n  /**\n   * @dev Returns the stable rate of the user debt\n   * @return The stable rate of the user\n   **/\n  function getUserStableRate(address user) external view returns (uint256);\n\n  /**\n   * @dev Returns the timestamp of the last update of the user\n   * @return The timestamp\n   **/\n  function getUserLastUpdated(address user) external view returns (uint40);\n\n  /**\n   * @dev Returns the principal, the total supply and the average stable rate\n   **/\n  function getSupplyData()\n    external\n    view\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      uint40\n    );\n\n  /**\n   * @dev Returns the timestamp of the last update of the total supply\n   * @return The timestamp\n   **/\n  function getTotalSupplyLastUpdated() external view returns (uint40);\n\n  /**\n   * @dev Returns the total supply and the average stable rate\n   **/\n  function getTotalSupplyAndAvgRate() external view returns (uint256, uint256);\n\n  /**\n   * @dev Returns the principal debt balance of the user\n   * @return The debt balance of the user since the last burn/mint action\n   **/\n  function principalBalanceOf(address user) external view returns (uint256);\n}"},"contracts/Aave/IVariableDebtToken.sol":{"content":"// SPDX-License-Identifier: agpl-3.0\npragma solidity ^0.8.0;\n\nimport {IScaledBalanceToken} from './IScaledBalanceToken.sol';\n\n/**\n * @title IVariableDebtToken\n * @author Aave\n * @notice Defines the basic interface for a variable debt token.\n **/\ninterface IVariableDebtToken is IScaledBalanceToken {\n  /**\n   * @dev Emitted after the mint action\n   * @param from The address performing the mint\n   * @param onBehalfOf The address of the user on which behalf minting has been performed\n   * @param value The amount to be minted\n   * @param index The last index of the reserve\n   **/\n  event Mint(address indexed from, address indexed onBehalfOf, uint256 value, uint256 index);\n\n  /**\n   * @dev Mints debt token to the `onBehalfOf` address\n   * @param user The address receiving the borrowed underlying, being the delegatee in case\n   * of credit delegate, or same as `onBehalfOf` otherwise\n   * @param onBehalfOf The address receiving the debt tokens\n   * @param amount The amount of debt being minted\n   * @param index The variable debt index of the reserve\n   * @return `true` if the the previous balance of the user is 0\n   **/\n  function mint(\n    address user,\n    address onBehalfOf,\n    uint256 amount,\n    uint256 index\n  ) external returns (bool);\n\n  /**\n   * @dev Emitted when variable debt is burnt\n   * @param user The user which debt has been burned\n   * @param amount The amount of debt being burned\n   * @param index The index of the user\n   **/\n  event Burn(address indexed user, uint256 amount, uint256 index);\n\n  /**\n   * @dev Burns user variable debt\n   * @param user The user which debt is burnt\n   * @param index The variable debt index of the reserve\n   **/\n  function burn(\n    address user,\n    uint256 amount,\n    uint256 index\n  ) external;\n}"},"contracts/L1/data/VaultData.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract VaultData {\n\n    enum OperateType{\n        NONE,\n        DEPOSIT, // 充值\n        DEPOSITETH, // 充值ETH\n        WITHDRAW, // 提现\n        WITHDRAWINTEREST // 提利息\n    }\n    \n    bytes32 public constant OWENER_ROLE = keccak256(\"OWENER_ROLE\");\n    bytes32 public constant NODE_ROLE = keccak256(\"NODE_ROLE\");\n    bytes32 public constant FEE_ROLE = keccak256(\"FEE_ROLE\");\n\n    uint16 public dstChainId;\n    address public interest;\n    address public aave;\n    bytes public adapterParams;\n   \n    struct Account {\n      address user;\n      bytes32 capitalMerkleRoot;\n      mapping(address => uint256) capitalBalance;\n      uint256 capitalNonce;\n      bytes32 tradingMerkleRoot;\n      mapping(address => uint256) tradingBalance;\n      uint256 tradingNonce;\n      uint nativeFee;\n    }\n\n   mapping(address => Account) public accounts;\n   \n   mapping(address => bool) public isSupDe;\n   \n   mapping(address => uint256)private latestShare;\n   \n   bool public isOpen;\n\n   struct InData{\n        address user; \n        bytes32 capitalMerkleRoot; \n        address [] coinList; \n        uint256 [] withdrawnValues;\n        uint256 nativeFee;\n        uint8 checkOutType; // 1 提币 2 利息\n        bytes32 messageHash; \n        bytes signature;\n    }\n\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) public _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    address[] coinList;\n\n    mapping(address => bool) public isTrueForCoin;\n    \n    address public usdt;\n}\n"},"contracts/L1/interface/IVault.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IVault {\n    function deposit(address type_, uint256 amount_)payable external;\n\n    function depositETH(uint256 amount_) payable external;\n    \n    function withdraw(uint256 [] memory amount_,address [] memory coin_) external;\n\n    event eventWithdraw(address[]type_, uint256 [] amount_,address sender_);\n\n    event eventDepositETH(uint256 amount_,address sender_);\n\n    event eventDeposit(address type_,uint256 amount_,address sender_);\n\n    event eventCheckOutInterest (address user_,address coin_,uint256 interest_);\n\n    event eventReceive(address user ,address[] coinAdd_, uint256[] capitalValues_, uint8 checkOutType);\n\n    event eventWithdrawInterest(address user, address coinType, uint256 interestBalance);\n\n    event eventSetWhilLlist(address user_,bool re_ );\n}\n"},"contracts/L1/Vault.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./interface/IVault.sol\";\nimport \"./data/VaultData.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"../LayerZero/NonblockingLzApp.sol\";\nimport \"../Aave/ILendingPool.sol\";\nimport \"../Aave/DataTypes.sol\";\nimport \"../Aave/IStableDebtToken.sol\";\nimport \"../Aave/IVariableDebtToken.sol\";\n\ncontract Vault is IVault,VaultData,NonblockingLzApp{\n\n    mapping(address => uint256 ) public interestAmount;\n    mapping(address => bool) public deCoinList;\n    mapping(address => uint256 ) public totalFee;\n    mapping(address => bool) public whlieList;\n\n    constructor(address lendingPool_, address lzEndpoint_, uint16 dstChainId_,address usdt_)NonblockingLzApp(lzEndpoint_) {\n       aave = lendingPool_;\n       dstChainId =dstChainId_;\n       isOpen = true;\n       usdt =usdt_ ;\n    }\n    \n    function deposit(address type_, uint256 amount_) payable override external{\n        bool isSupDe_;\n        uint256 _amount;\n        require(isOpen == true,\"Closing\");\n        require(deCoinList[type_] == true, \"Recharge in this currency is not supported\");\n\n        require(IERC20(type_).balanceOf(msg.sender) >= amount_, \"Balance insufficient\");\n        require(IERC20(type_).allowance(msg.sender,address(this)) >= amount_,\"No authorization\");\n\n        uint256 balance =  IERC20(type_).balanceOf(msg.sender);\n        IERC20(type_).transferFrom(msg.sender,address(this),amount_);\n        require(IERC20(type_).balanceOf(msg.sender) == balance-amount_, \"Balance insufficient\");\n        \n        (uint256 va,) = estimateFee(msg.sender);\n        require(va <= msg.value,\"not enough native for fees\");\n\n        if(isSupDe[type_] == true){\n            isSupDe_=true;\n            uint256 _oldTotalValue = getTotalValue(usdt);\n            _depositToAAVE(type_,amount_);\n\n            if( amount_ +_oldTotalValue - getTotalValue(usdt) == 1 ) {\n               _amount = getTotalValue(usdt)+1;\n            }    \n        }\n        _amount = getTotalValue(usdt);\n\n        _sentToL1(dstChainId,abi.encode(msg.sender,type_,amount_,isSupDe_, OperateType.DEPOSIT,_amount),msg.value);\n\n        emit eventDeposit(type_,amount_,msg.sender);\n    }\n\n    function depositETH(uint256 amount_) override external payable {\n        require(isOpen == true,\"closing\");\n        (uint256 va,) = estimateFee(msg.sender);\n        require(amount_+va <= msg.value,\"amount no match\");\n        require(va <= msg.value,\"not enough native for fees\");\n        \n        _sentToL1(dstChainId,abi.encode(msg.sender,address(0),amount_,false,OperateType.DEPOSITETH,getTotalValue(usdt)),va);\n        emit eventDepositETH(amount_,msg.sender);\n    }\n\n    function setSupDe(address add_,bool re) external onlyOwner {\n        isSupDe[add_] = re;\n    }\n    \n    function withdraw(uint256[] memory amount_,address[] memory coinType_) override external{\n        require(isOpen == true,\"closing\");\n        Account storage _ac  = accounts[msg.sender];\n        require(amount_.length == coinType_.length,\"Array mismatch\");\n\n        for(uint256 i = 0; i<amount_.length; i++ ){\n            uint256 balance = _ac.capitalBalance[coinType_[i]];\n            require(balance >= amount_[i],\"Balance insufficient\");\n            _ac.capitalBalance[coinType_[i]] -= amount_[i];\n            \n            if(coinType_[i] == address(0)){\n                payable(msg.sender).transfer(amount_[i]);\n            }else{\n                bool  transfer= IERC20(coinType_[i]).transfer(msg.sender, amount_[i]);\n                require(transfer == true,\"Withdraw failed\");\n            }\n        }\n        emit eventWithdraw(coinType_,amount_,msg.sender);\n    }\n\n    function verifyEcrecover(bytes32  messageHash, bytes memory signature) public pure returns(address recoveredAddress) {\n        bytes32 hash = hashMessage(messageHash);\n        (uint8 v, bytes32 r, bytes32 s) = recover(signature);\n        return  ecrecover(hash, v, r, s);\n    }\n\n    function recover(bytes memory signature) internal pure returns (uint8, bytes32, bytes32) {\n        // Check the signature length\n        if (signature.length != 65) {\n            revert(\"ECDSA: invalid signature length\");\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        return (v, r, s);\n    }\n\n    function getNativeFee(address user_)view public returns(uint){\n        Account  storage account = accounts[user_]; \n        return (account.nativeFee);\n    }\n\n    function  getInterest(address user_) external view returns(uint256) {\n        return  interestAmount[user_];\n    }\n\n    function setWhilLlist(address  add,uint256 type_) external onlyOwner{\n        if(type_==1) {\n             _setupRole(NODE_ROLE,add);\n        }else{\n            _setupRole(FEE_ROLE,add);\n        }\n    }\n\n    //利息大结算之后,直接把最新的利息分配到L1,然后维护L1和L2账本\n    function withdrawInterest(uint256 amount_,address coinType_) public {\n        require(isOpen == true,\"closing\");\n        require(interestAmount[msg.sender] >= amount_,\"Not sufficient funds\");\n        interestAmount[msg.sender] -= amount_;\n        IERC20(coinType_).transfer(msg.sender ,amount_);\n        emit eventWithdrawInterest(msg.sender, coinType_, amount_);\n    }\n\n    function getBalance(address address_) public view returns (address,bytes32,address[] memory, uint256 [] memory,uint256) {\n        Account storage account = accounts[address_]; \n        uint256 count = 0;\n\n        for (uint256 i = 0; i < coinList.length; i++) {\n            if (account.capitalBalance[coinList[i]] != 0) {\n                count++;\n            }\n        }\n\n        address[] memory coin = new address[](count);\n        uint256[] memory amount = new uint256[](count); \n\n        uint256 index = 0;\n        for (uint256 i = 0; i < coinList.length; i++) {\n            if (account.capitalBalance[coinList[i]] != 0) {\n                coin[index] = coinList[i];\n                amount[index] = account.capitalBalance[coinList[i]];\n                index++;\n            }\n        }\n        return (account.user,account.capitalMerkleRoot,coin,amount,account.capitalNonce);\n    }\n\n    function setAdapterParams(uint16 version,uint  gasForDestinationLzReceive) onlyOwner public {\n        adapterParams = abi.encodePacked(version, gasForDestinationLzReceive);\n    }\n\n    // Function to get the USDT balance of the user\n    function getBalanceFromAAVE(address type_,address fromAdd_) public view returns (uint256) {\n        // // Get the user data of the current address\n        (uint256 currentBalance,, uint256 currentBorrowBalance,,,,, ) = getUserReserveData(type_, fromAdd_);\n        uint256 usdtBalance = currentBalance - currentBorrowBalance;\n        return usdtBalance;\n    }\n\n    function getUserReserveData(address asset, address user)    \n        public\n        view\n        returns (\n        uint256 currentATokenBalance,\n        uint256 currentStableDebt,\n        uint256 currentVariableDebt,\n        uint256 principalStableDebt,\n        uint256 scaledVariableDebt,\n        uint256 stableBorrowRate,\n        uint256 liquidityRate,\n        uint40 stableRateLastUpdated\n        )\n    {\n        DataTypes.ReserveData memory reserve =\n        ILendingPool(aave).getReserveData(asset);\n        currentATokenBalance = IERC20Metadata(reserve.aTokenAddress).balanceOf(user);\n        currentVariableDebt = IERC20Metadata(reserve.variableDebtTokenAddress).balanceOf(user);\n        currentStableDebt = IERC20Metadata(reserve.stableDebtTokenAddress).balanceOf(user);\n        principalStableDebt = IStableDebtToken(reserve.stableDebtTokenAddress).principalBalanceOf(user);\n        scaledVariableDebt = IVariableDebtToken(reserve.variableDebtTokenAddress).scaledBalanceOf(user);\n        liquidityRate = reserve.currentLiquidityRate;\n        stableBorrowRate = IStableDebtToken(reserve.stableDebtTokenAddress).getUserStableRate(user);\n        stableRateLastUpdated = IStableDebtToken(reserve.stableDebtTokenAddress).getUserLastUpdated(\n        user\n        );\n    }\n    \n    function getATokenWithToken(address add_)public view  returns(address){\n        // Get the aUSDT token instance from the lending pool\n        return ILendingPool(aave).getReserveData(add_).aTokenAddress;\n    }\n\n    function getOracle(uint16 remoteChainId) external view returns (address _oracle) {\n        bytes memory bytesOracle = lzEndpoint.getConfig(lzEndpoint.getSendVersion(address(this)), remoteChainId, address(this), 6);\n        assembly {\n            _oracle := mload(add(bytesOracle, 32))\n        }\n    }\n    \n    function getSize(address user_) public view returns( bytes memory encoded ){\n        encoded =  abi.encode(user_,0, 0,10000,0,10,getTotalValue(usdt),1000000);\n    }\n    \n    function estimateFee(address user_)public view returns (uint nativeFee, uint zroFee) {\n        (uint native, uint zro) =lzEndpoint.estimateFees(dstChainId, address(this), getSize(user_), false, adapterParams);\n        return (native,zro);\n    }\n \n    function setIsOpen(bool re_)onlyOwner public{\n        isOpen = re_;\n    }\n\n    function _sentToL1(uint16 _dstChainId,bytes memory _data,uint256 value)private {\n         _lzSend(_dstChainId, _data, payable(msg.sender), address(0x0), adapterParams,value);\n    }\n\n    function _depositToAAVE(address type_,uint256 amount_) private{\n        IERC20(type_).approve(aave,amount_);\n        require(IERC20(type_).allowance(address(this),aave) >= amount_,\"No authorization\");\n        ILendingPool(aave).deposit(type_, amount_,address(this),0);\n    }\n\n    function _withdrawFromAAVE(address type_,uint256 amount_,address receiver_) private returns(uint256){\n        return ILendingPool(aave).withdraw(type_, amount_,receiver_);\n    }\n\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n           \n        }\n    }\n\n    function setDeCoinList(address [] memory coin_,bool re_) external onlyOwner  {\n        for(uint256 i= 0; i<coin_.length; i++){\n            deCoinList[coin_[i]] = re_;\n        }\n    }\n\n    function hasRole(bytes32 role, address account) public view  returns (bool) {\n        return _roles[role].members[account];\n    }\n    \n    function _nonblockingLzReceive(uint16, bytes memory, uint64 nonce, bytes memory encoded_) internal override {\n        uint256 usdtFee; \n        (InData memory data, uint256 interestBalance,bool type_ ,address[] memory  addFee_,uint256[] memory totalFee_) = abi.decode(encoded_,(InData, uint256,bool,address[],uint256[]));\n        bytes memory encodedData = abi.encodePacked(\n            data.user,\n            data.capitalMerkleRoot,\n            abi.encodePacked(data.coinList),\n            abi.encodePacked(data.withdrawnValues),\n            data.nativeFee,\n            data.checkOutType\n        );\n\n        if(type_){\n            require(hasRole(NODE_ROLE, verifyEcrecover(data.messageHash, data.signature)) == true,\"The signer is not a node\");\n            bytes32 newMessageHash = keccak256(encodedData);\n            require(newMessageHash  == data.messageHash ,\"Incorrect data\"); \n        }\n\n        Account storage myAccount = accounts[data.user];\n        myAccount.user = data.user;\n        myAccount.capitalMerkleRoot =  data.capitalMerkleRoot;\n        myAccount.nativeFee = data.nativeFee;\n      \n          //手续费\n        for(uint256 i=0; i< addFee_.length; i++){\n            totalFee[addFee_[i]] = totalFee_[i];\n            if(isSupDe[addFee_[i]]){\n                if(totalFee_[i] > 0){\n                  usdtFee =  totalFee_[i];\n                }\n            }\n        }\n\n        bool flag = false;\n        for(uint256 i =0 ; i < data.coinList.length; i++){\n            isCoinList(data.coinList[i]);\n            myAccount.capitalBalance[data.coinList[i]] += data.withdrawnValues[i];\n            // 是USDT  aave提取的值 = 利息+本金\n            if(isSupDe[data.coinList[i]]){\n                flag = true;\n                if(interestBalance + data.withdrawnValues[i] > 0){\n                    interestAmount[data.user] += interestBalance;\n                    _withdrawFromAAVE(data.coinList[i], interestBalance + data.withdrawnValues[i]+usdtFee, address(this));\n                }\n            }\n        }\n\n        if(!flag && interestBalance > 0){\n            interestAmount[data.user] += interestBalance;\n            _withdrawFromAAVE(usdt, interestBalance + usdtFee, address(this));\n        }\n\n        emit eventReceive(data.user,data.coinList,data.withdrawnValues,data.checkOutType);   \n\n    }\n\n    function setOracle(uint16 dstChainId, address oracle) external onlyOwner {\n        uint TYPE_ORACLE = 6;\n        // set the Oracle\n        lzEndpoint.setConfig(lzEndpoint.getSendVersion(address(this)), dstChainId, TYPE_ORACLE, abi.encode(oracle));\n    }\n    \n    function hashMessage(bytes32  message) public pure returns (bytes32 messageHash) {\n        messageHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", message));\n        return messageHash;\n    }\n\n    function isCoinList(address goodsAddress) private{\n        if(isTrueForCoin[goodsAddress] == false){\n            isTrueForCoin[goodsAddress] = true;\n            coinList.push(goodsAddress);\n        }\n    }\n\n    function withdrawFee(address add_, uint256 amount_) external onlyOwner{\n        require(totalFee[add_] >= amount_,\"Not sufficient funds\");\n        require(hasRole(FEE_ROLE,msg.sender)==true,\"Permission Denied\");\n        totalFee[add_]  -= amount_;\n        IERC20(add_).transfer(msg.sender ,amount_);\n    }\n\n    function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\n        uint256 count = 0;\n\n        for(uint256 i =0; i<coinList.length; i++){\n            if(totalFee[coinList[i]] > 0){\n                 count++;\n            }\n        }\n\n        address[] memory coin = new address[](count);\n        uint256[] memory amount = new uint256[](count); \n\n        for(uint256 i =0; i<coinList.length; i++){\n            if(totalFee[coinList[i]] > 0){\n                 coin[i] = coinList[i];\n                 amount[i] = totalFee[coinList[i]];\n            }\n        }\n      \n    }\n\n    function getTotalValue(address asset)    \n        public\n        view\n        returns (\n            uint256 currentATokenBalance\n        )\n    {\n        DataTypes.ReserveData memory reserve =\n        ILendingPool(aave).getReserveData(asset);\n        currentATokenBalance = IERC20Metadata(reserve.aTokenAddress).balanceOf(address(this));\n    }\n\n}\n"},"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\nimport \"./ILayerZeroUserApplicationConfig.sol\";\n\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\n    // @param _dstChainId - the destination chain identifier\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\n    // @param _payload - a custom bytes payload to send to the destination contract\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\n\n    // @notice used by the messaging library to publish verified payload\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source contract (as bytes) at the source chain\n    // @param _dstAddress - the address on destination chain\n    // @param _nonce - the unbound message ordering nonce\n    // @param _gasLimit - the gas limit for external contract execution\n    // @param _payload - verified payload to send to the destination contract\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\n\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\n\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\n    // @param _srcAddress - the source chain contract address\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\n\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\n    // @param _dstChainId - the destination chain identifier\n    // @param _userApplication - the user app address on this EVM chain\n    // @param _payload - the custom message to send over LayerZero\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\n\n    // @notice get this Endpoint's immutable source identifier\n    function getChainId() external view returns (uint16);\n\n    // @notice the interface to retry failed message on this Endpoint destination\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    // @param _payload - the payload to be retried\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\n\n    // @notice query if any STORED payload (message blocking) at the endpoint.\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\n\n    // @notice query if the _libraryAddress is valid for sending msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the _libraryAddress is valid for receiving msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the non-reentrancy guard for send() is on\n    // @return true if the guard is on. false otherwise\n    function isSendingPayload() external view returns (bool);\n\n    // @notice query if the non-reentrancy guard for receive() is on\n    // @return true if the guard is on. false otherwise\n    function isReceivingPayload() external view returns (bool);\n\n    // @notice get the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _userApplication - the contract address of the user application\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\n\n    // @notice get the send() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getSendVersion(address _userApplication) external view returns (uint16);\n\n    // @notice get the lzReceive() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\n}\n"},"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroReceiver {\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\n    // @param _srcChainId - the source endpoint identifier\n    // @param _srcAddress - the source sending contract address from the source chain\n    // @param _nonce - the ordered message nonce\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\n}\n"},"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroUserApplicationConfig {\n    // @notice set the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    // @param _config - configuration in the bytes. can encode arbitrary content.\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\n\n    // @notice set the send() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setSendVersion(uint16 _version) external;\n\n    // @notice set the lzReceive() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setReceiveVersion(uint16 _version) external;\n\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\n    // @param _srcChainId - the chainId of the source chain\n    // @param _srcAddress - the contract address of the source contract at the source chain\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\n}\n"},"contracts/LayerZero/LzApp.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport \"./interfaces/ILayerZeroReceiver.sol\";\nimport \"./interfaces/ILayerZeroUserApplicationConfig.sol\";\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\nimport \"./util/BytesLib.sol\";\n\n/*\n * a generic LzReceiver implementation\n */\nabstract contract LzApp is Ownable2Step, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\n    using BytesLib for bytes;\n\n    ILayerZeroEndpoint public immutable lzEndpoint;\n    mapping(uint16 => bytes) public trustedRemoteLookup;\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\n    address public precrime;\n\n    event SetPrecrime(address precrime);\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\n\n    constructor(address _endpoint) {\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\n    }\n\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual override {\n        // lzReceive must be called by the endpoint for security\n        require(_msgSender() == address(lzEndpoint), \"LzApp: invalid endpoint caller\");\n\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\n        require(_srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote), \"LzApp: invalid source sending contract\");\n\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\n\n    function _lzSend(uint16 _dstChainId, bytes memory _payload, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams, uint _nativeFee) internal virtual {\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\n        require(trustedRemote.length != 0, \"LzApp: destination chain is not a trusted source\");\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\n    }\n\n    function _checkGasLimit(uint16 _dstChainId, uint16 _type, bytes memory _adapterParams, uint _extraGas) internal view virtual {\n        uint providedGasLimit = _getGasLimit(_adapterParams);\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type] + _extraGas;\n        require(minGasLimit > 0, \"LzApp: minGasLimit not set\");\n        require(providedGasLimit >= minGasLimit, \"LzApp: gas limit is too low\");\n    }\n\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\n        require(_adapterParams.length >= 34, \"LzApp: invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    //---------------------------UserApplication config----------------------------------------\n    function getConfig(uint16 _version, uint16 _chainId, address, uint _configType) external view returns (bytes memory) {\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\n    }\n\n    // generic config for LayerZero user Application\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external   {\n        lzEndpoint.retryPayload(_srcChainId,_srcAddress, _payload);\n    }\n\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external   {\n        lzEndpoint.hasStoredPayload(_srcChainId,_srcAddress);\n    }\n    \n     function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external override onlyOwner {\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\n    }\n\n    function setSendVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setSendVersion(_version);\n    }\n\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setReceiveVersion(_version);\n    }\n\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\n    }\n\n    // _path = abi.encodePacked(remoteAddress, localAddress)\n    // this function set the trusted path for the cross-chain communication\n    function setTrustedRemote(uint16 _srcChainId, bytes calldata _path) external onlyOwner {\n        trustedRemoteLookup[_srcChainId] = _path;\n        emit SetTrustedRemote(_srcChainId, _path);\n    }\n\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\n    }\n\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\n        require(path.length != 0, \"LzApp: no trusted path record\");\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\n    }\n\n    function setPrecrime(address _precrime) external onlyOwner {\n        precrime = _precrime;\n        emit SetPrecrime(_precrime);\n    }\n\n    function setMinDstGas(uint16 _dstChainId, uint16 _packetType, uint _minGas) external onlyOwner {\n        require(_minGas > 0, \"LzApp: invalid minGas\");\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\n    }\n\n    //--------------------------- VIEW FUNCTION ----------------------------------------\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\n        return keccak256(trustedSource) == keccak256(_srcAddress);\n    }\n}\n"},"contracts/LayerZero/NonblockingLzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./LzApp.sol\";\nimport \"./util/ExcessivelySafeCall.sol\";\n\n/*\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\n */\nabstract contract NonblockingLzApp is LzApp {\n    using ExcessivelySafeCall for address;\n\n    constructor(address _endpoint) LzApp(_endpoint) {}\n\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\n\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\n\n    // overriding the virtual function in LzReceiver\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual override {\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(gasleft(), 150, abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload));\n        // try-catch all errors/exceptions\n        if (!success) {\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\n        }\n    }\n\n    function _storeFailedMessage(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload, bytes memory _reason) internal virtual {\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\n    }\n\n    function nonblockingLzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual {\n        // only internal transaction\n        require(_msgSender() == address(this), \"NonblockingLzApp: caller must be LzApp\");\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    //@notice override this function\n    function _nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\n\n    function retryMessage(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public payable virtual {\n        // assert there is message to retry\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\n        require(payloadHash != bytes32(0), \"NonblockingLzApp: no stored message\");\n        require(keccak256(_payload) == payloadHash, \"NonblockingLzApp: invalid payload\");\n        // clear the stored message\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\n        // execute the message. revert if it fails again\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\n    }\n}\n"},"contracts/LayerZero/util/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\n\nlibrary BytesLib {\n    function concat(\n        bytes memory _preBytes,\n        bytes memory _postBytes\n    )\n    internal\n    pure\n    returns (bytes memory)\n    {\n        bytes memory tempBytes;\n\n        assembly {\n        // Get a location of some free memory and store it in tempBytes as\n        // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n        // Store the length of the first bytes array at the beginning of\n        // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n        // Maintain a memory counter for the current write location in the\n        // temp bytes array by adding the 32 bytes for the array length to\n        // the starting location.\n            let mc := add(tempBytes, 0x20)\n        // Stop copying when the memory counter reaches the length of the\n        // first bytes array.\n            let end := add(mc, length)\n\n            for {\n            // Initialize a copy counter to the start of the _preBytes data,\n            // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n            // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n            // Write the _preBytes data into the tempBytes memory 32 bytes\n            // at a time.\n                mstore(mc, mload(cc))\n            }\n\n        // Add the length of _postBytes to the current length of tempBytes\n        // and store it as the new length in the first 32 bytes of the\n        // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n        // Move the memory counter back from a multiple of 0x20 to the\n        // actual end of the _preBytes data.\n            mc := end\n        // Stop copying when the memory counter reaches the new combined\n        // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n        // Update the free-memory pointer by padding our last write location\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n        // next 32 byte block, then round down to the nearest multiple of\n        // 32. If the sum of the length of the two arrays is zero then add\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(0x40, and(\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n            not(31) // Round down to the nearest 32 bytes.\n            ))\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n        // Read the first 32 bytes of _preBytes storage, which is the length\n        // of the array. (We don't need to use the offset into the slot\n        // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n        // Arrays of 31 bytes or less have an even value in their slot,\n        // while longer arrays have an odd value. The actual length is\n        // the slot divided by two for odd values, and the lowest order\n        // byte divided by two for even values.\n        // If the slot is even, bitwise and the slot with 255 and divide by\n        // two to get the length. If the slot is odd, bitwise and the slot\n        // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n        // slength can contain both the length and contents of the array\n        // if length < 32 bytes so let's prepare for that\n        // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n            // Since the new array still fits in the slot, we just need to\n            // update the contents of the slot.\n            // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                _preBytes.slot,\n                // all the modifications to the slot are inside this\n                // next block\n                add(\n                // we can just add to the slot contents because the\n                // bytes we want to change are the LSBs\n                fslot,\n                add(\n                mul(\n                div(\n                // load the bytes from memory\n                mload(add(_postBytes, 0x20)),\n                // zero all bytes to the right\n                exp(0x100, sub(32, mlength))\n                ),\n                // and now shift left the number of bytes to\n                // leave space for the length in the slot\n                exp(0x100, sub(32, newlength))\n                ),\n                // increase length by the double of the memory\n                // bytes length\n                mul(mlength, 2)\n                )\n                )\n                )\n            }\n            case 1 {\n            // The stored value fits in the slot, but the combined value\n            // will exceed it.\n            // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n            // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n            // The contents of the _postBytes array start 32 bytes into\n            // the structure. Our first read should obtain the `submod`\n            // bytes that can fit into the unused space in the last word\n            // of the stored array. To get this, we read 32 bytes starting\n            // from `submod`, so the data we read overlaps with the array\n            // contents by `submod` bytes. Masking the lowest-order\n            // `submod` bytes allows us to add that value directly to the\n            // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(\n                sc,\n                add(\n                and(\n                fslot,\n                0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n                ),\n                and(mload(mc), mask)\n                )\n                )\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n            // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n            // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n            // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n            // Copy over the first `submod` bytes of the new data as in\n            // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    )\n    internal\n    pure\n    returns (bytes memory)\n    {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n            // The first word of the slice result is potentially a partial\n            // word read from the original array. To read it, we calculate\n            // the length of that partial word and start copying that many\n            // bytes into the array. The first word we copy will start with\n            // data we don't care about, but the last `lengthmod` bytes will\n            // land at the beginning of the contents of the new array. When\n            // we're done copying, we overwrite the full first word with\n            // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n            // The multiplication in the next line is necessary\n            // because when slicing multiples of 32 bytes (lengthmod == 0)\n            // the following copy loop was copying the origin's length\n            // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                // The multiplication in the next line has the same exact purpose\n                // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n            //update free-memory pointer\n            //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n            //zero out the 32 bytes slice we are about to return\n            //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1 , \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n        // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n            // cb is a circuit breaker in the for loop since there's\n            //  no said feature for inline assembly loops\n            // cb = 1 - don't breaker\n            // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                // the next line is the loop condition:\n                // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                    // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n            // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(\n        bytes storage _preBytes,\n        bytes memory _postBytes\n    )\n    internal\n    view\n    returns (bool)\n    {\n        bool success = true;\n\n        assembly {\n        // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n        // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n        // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                    // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                        // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                    // cb is a circuit breaker in the for loop since there's\n                    //  no said feature for inline assembly loops\n                    // cb = 1 - don't breaker\n                    // cb = 0 - break\n                        let cb := 1\n\n                    // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                    // the next line is the loop condition:\n                    // while(uint256(mc < end) + cb == 2)\n                        for {} eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                            // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n            // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"},"contracts/LayerZero/util/ExcessivelySafeCall.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint256 constant LOW_28_MASK =\n    0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint256 _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint256 _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n            _gas, // gas\n            _target, // recipient\n            0, // ether value\n            add(_calldata, 0x20), // inloc\n            mload(_calldata), // inlen\n            0, // outloc\n            0 // outlen\n            )\n        // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n        // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n        // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint256 _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint256 _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n            _gas, // gas\n            _target, // recipient\n            add(_calldata, 0x20), // inloc\n            mload(_calldata), // inlen\n            0, // outloc\n            0 // outlen\n            )\n        // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n        // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n        // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(bytes4 _newSelector, bytes memory _buf)\n    internal\n    pure\n    {\n        require(_buf.length >= 4);\n        uint256 _mask = LOW_28_MASK;\n        assembly {\n        // load the first word of\n            let _word := mload(add(_buf, 0x20))\n        // mask out the top 4 bytes\n        // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1},"evmVersion":"istanbul","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/L1/Vault.sol:362:9:\n    |\n362 |         address[] memory coin = new address[](count);\n    |         ^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/L1/Vault.sol:353:42:\n    |\n353 |     function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\n    |                                          ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":14169,"file":"contracts/L1/Vault.sol","message":"The shadowed declaration is here:","start":14148}],"severity":"warning","sourceLocation":{"end":14398,"file":"contracts/L1/Vault.sol","start":14377},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/L1/Vault.sol:363:9:\n    |\n363 |         uint256[] memory amount = new uint256[](count); \n    |         ^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/L1/Vault.sol:353:64:\n    |\n353 |     function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":14193,"file":"contracts/L1/Vault.sol","message":"The shadowed declaration is here:","start":14170}],"severity":"warning","sourceLocation":{"end":14454,"file":"contracts/L1/Vault.sol","start":14431},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/L1/Vault.sol:272:58:\n    |\n272 |     function _nonblockingLzReceive(uint16, bytes memory, uint64 nonce, bytes memory encoded_) internal override {\n    |                                                          ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":10851,"file":"contracts/L1/Vault.sol","start":10839},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/L1/Vault.sol:353:42:\n    |\n353 |     function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\n    |                                          ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":14169,"file":"contracts/L1/Vault.sol","start":14148},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/L1/Vault.sol:353:64:\n    |\n353 |     function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":14193,"file":"contracts/L1/Vault.sol","start":14170},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/LayerZero/LzApp.sol:74:5:\n   |\n74 |     function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external   {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":3972,"file":"contracts/LayerZero/LzApp.sol","start":3818},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/L1/Vault.sol:353:5:\n    |\n353 |     function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":14703,"file":"contracts/L1/Vault.sol","start":14111},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[320],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":321,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":320,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,320],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/access/Ownable2Step.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","exportedSymbols":{"Context":[320],"Ownable":[112],"Ownable2Step":[195]},"id":196,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"./Ownable.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":196,"sourceUnit":113,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Ownable","nameLocations":["633:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"633:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"633:7:1"}],"canonicalName":"Ownable2Step","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"157:441:1","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":195,"linearizedBaseContracts":[195,112,320],"name":"Ownable2Step","nameLocation":"617:12:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":120,"mutability":"mutable","name":"_pendingOwner","nameLocation":"663:13:1","nodeType":"VariableDeclaration","scope":195,"src":"647:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":126,"name":"OwnershipTransferStarted","nameLocation":"689:24:1","nodeType":"EventDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"730:13:1","nodeType":"VariableDeclaration","scope":126,"src":"714:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"761:8:1","nodeType":"VariableDeclaration","scope":126,"src":"745:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"745:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:57:1"},"src":"683:88:1"},{"body":{"id":134,"nodeType":"Block","src":"909:37:1","statements":[{"expression":{"id":132,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"926:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":131,"id":133,"nodeType":"Return","src":"919:20:1"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"777:65:1","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":135,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"856:12:1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"868:2:1"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":135,"src":"900:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"899:9:1"},"scope":195,"src":"847:99:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[91],"body":{"id":154,"nodeType":"Block","src":"1218:99:1","statements":[{"expression":{"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":144,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1228:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":145,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1244:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1228:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":147,"nodeType":"ExpressionStatement","src":"1228:24:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":149,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1292:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1292:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":151,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"1301:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":148,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1267:24:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1267:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":153,"nodeType":"EmitStatement","src":"1262:48:1"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"952:182:1","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":155,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["1208:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1208:9:1"},"nodeType":"ModifierInvocation","src":"1208:9:1"}],"name":"transferOwnership","nameLocation":"1148:17:1","nodeType":"FunctionDefinition","overrides":{"id":140,"nodeType":"OverrideSpecifier","overrides":[],"src":"1199:8:1"},"parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"newOwner","nameLocation":"1174:8:1","nodeType":"VariableDeclaration","scope":155,"src":"1166:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1165:18:1"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"1218:0:1"},"scope":195,"src":"1139:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[111],"body":{"id":171,"nodeType":"Block","src":"1573:81:1","statements":[{"expression":{"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1583:20:1","subExpression":{"id":162,"name":"_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1590:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"1583:20:1"},{"expression":{"arguments":[{"id":168,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1638:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":165,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1613:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2Step_$195_$","typeString":"type(contract super Ownable2Step)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1619:18:1","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":111,"src":"1613:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"1613:34:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1323:173:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":172,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1510:18:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"1564:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"newOwner","nameLocation":"1537:8:1","nodeType":"VariableDeclaration","scope":172,"src":"1529:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1528:18:1"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1573:0:1"},"scope":195,"src":"1501:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":193,"nodeType":"Block","src":"1770:170:1","statements":[{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"sender","nameLocation":"1788:6:1","nodeType":"VariableDeclaration","scope":193,"src":"1780:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1797:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1780:29:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":182,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"1827:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":184,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1845:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1827:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1853:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""},"value":"Ownable2Step: caller is not the new owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc","typeString":"literal_string \"Ownable2Step: caller is not the new owner\""}],"id":181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1819:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"1819:78:1"},{"expression":{"arguments":[{"id":190,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1926:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":189,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[172],"referencedDeclaration":172,"src":"1907:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":192,"nodeType":"ExpressionStatement","src":"1907:26:1"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"1660:69:1","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":194,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1743:15:1","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"1758:2:1"},"returnParameters":{"id":175,"nodeType":"ParameterList","parameters":[],"src":"1770:0:1"},"scope":195,"src":"1734:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":196,"src":"599:1343:1","usedErrors":[]}],"src":"107:1836:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[273]},"id":274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":197,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":273,"linearizedBaseContracts":[273],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":207,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":207,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":203,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":207,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":207,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":216,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":216,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":216,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":216,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":222,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":273,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":230,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":230,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":273,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":240,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":240,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":240,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":273,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":250,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":250,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":250,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":250,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":273,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":260,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":260,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":257,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":273,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"from","nameLocation":"2685:4:2","nodeType":"VariableDeclaration","scope":272,"src":"2677:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"to","nameLocation":"2707:2:2","nodeType":"VariableDeclaration","scope":272,"src":"2699:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"amount","nameLocation":"2727:6:2","nodeType":"VariableDeclaration","scope":272,"src":"2719:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"2758:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":269,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:2"},"scope":273,"src":"2646:118:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":274,"src":"202:2564:2","usedErrors":[]}],"src":"106:2661:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[273],"IERC20Metadata":[298]},"id":299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":299,"sourceUnit":274,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":278,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":273,"src":"305:6:3"},"id":279,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":298,"linearizedBaseContracts":[298,273],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":285,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":282,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":298,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":291,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":288,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":298,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":294,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":298,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":299,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[320]},"id":321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":300,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"111:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":320,"linearizedBaseContracts":[320],"name":"Context","nameLocation":"626:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":309,"nodeType":"Block","src":"702:34:4","statements":[{"expression":{"expression":{"id":306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:4","memberName":"sender","nodeType":"MemberAccess","src":"719:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":305,"id":308,"nodeType":"Return","src":"712:17:4"}]},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:4","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[],"src":"659:2:4"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"693:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:4"},"scope":320,"src":"640:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":318,"nodeType":"Block","src":"809:32:4","statements":[{"expression":{"expression":{"id":315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:4","memberName":"data","nodeType":"MemberAccess","src":"826:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":314,"id":317,"nodeType":"Return","src":"819:15:4"}]},"id":319,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:4","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"759:2:4"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"793:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":312,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:4"},"scope":320,"src":"742:99:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":321,"src":"608:235:4","usedErrors":[]}],"src":"86:758:4"},"id":4},"contracts/Aave/DataTypes.sol":{"ast":{"absolutePath":"contracts/Aave/DataTypes.sol","exportedSymbols":{"DataTypes":[359]},"id":360,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":322,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"DataTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":359,"linearizedBaseContracts":[359],"name":"DataTypes","nameLocation":"70:9:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveData","id":348,"members":[{"constant":false,"id":325,"mutability":"mutable","name":"configuration","nameLocation":"275:13:5","nodeType":"VariableDeclaration","scope":348,"src":"251:37:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$351_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":324,"nodeType":"UserDefinedTypeName","pathNode":{"id":323,"name":"ReserveConfigurationMap","nameLocations":["251:23:5"],"nodeType":"IdentifierPath","referencedDeclaration":351,"src":"251:23:5"},"referencedDeclaration":351,"src":"251:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$351_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"liquidityIndex","nameLocation":"346:14:5","nodeType":"VariableDeclaration","scope":348,"src":"338:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":326,"name":"uint128","nodeType":"ElementaryTypeName","src":"338:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"420:19:5","nodeType":"VariableDeclaration","scope":348,"src":"412:27:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":328,"name":"uint128","nodeType":"ElementaryTypeName","src":"412:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"currentLiquidityRate","nameLocation":"501:20:5","nodeType":"VariableDeclaration","scope":348,"src":"493:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":330,"name":"uint128","nodeType":"ElementaryTypeName","src":"493:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"currentVariableBorrowRate","nameLocation":"592:25:5","nodeType":"VariableDeclaration","scope":348,"src":"584:33:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":332,"name":"uint128","nodeType":"ElementaryTypeName","src":"584:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"currentStableBorrowRate","nameLocation":"686:23:5","nodeType":"VariableDeclaration","scope":348,"src":"678:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":334,"name":"uint128","nodeType":"ElementaryTypeName","src":"678:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"722:19:5","nodeType":"VariableDeclaration","scope":348,"src":"715:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":336,"name":"uint40","nodeType":"ElementaryTypeName","src":"715:6:5","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"aTokenAddress","nameLocation":"778:13:5","nodeType":"VariableDeclaration","scope":348,"src":"770:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"770:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"805:22:5","nodeType":"VariableDeclaration","scope":348,"src":"797:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"797:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"841:24:5","nodeType":"VariableDeclaration","scope":348,"src":"833:32:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"923:27:5","nodeType":"VariableDeclaration","scope":348,"src":"915:35:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"915:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"id","nameLocation":"1050:2:5","nodeType":"VariableDeclaration","scope":348,"src":"1044:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":346,"name":"uint8","nodeType":"ElementaryTypeName","src":"1044:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ReserveData","nameLocation":"194:11:5","nodeType":"StructDefinition","scope":359,"src":"187:870:5","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":351,"members":[{"constant":false,"id":350,"mutability":"mutable","name":"data","nameLocation":"1413:4:5","nodeType":"VariableDeclaration","scope":351,"src":"1405:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nameLocation":"1068:23:5","nodeType":"StructDefinition","scope":359,"src":"1061:361:5","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":354,"members":[{"constant":false,"id":353,"mutability":"mutable","name":"data","nameLocation":"1468:4:5","nodeType":"VariableDeclaration","scope":354,"src":"1460:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1460:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nameLocation":"1433:20:5","nodeType":"StructDefinition","scope":359,"src":"1426:51:5","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":358,"members":[{"id":355,"name":"NONE","nameLocation":"1504:4:5","nodeType":"EnumValue","src":"1504:4:5"},{"id":356,"name":"STABLE","nameLocation":"1510:6:5","nodeType":"EnumValue","src":"1510:6:5"},{"id":357,"name":"VARIABLE","nameLocation":"1518:8:5","nodeType":"EnumValue","src":"1518:8:5"}],"name":"InterestRateMode","nameLocation":"1486:16:5","nodeType":"EnumDefinition","src":"1481:46:5"}],"scope":360,"src":"62:1467:5","usedErrors":[]}],"src":"37:1492:5"},"id":5},"contracts/Aave/ILendingPool.sol":{"ast":{"absolutePath":"contracts/Aave/ILendingPool.sol","exportedSymbols":{"DataTypes":[359],"ILendingPool":[738],"ILendingPoolAddressesProvider":[889]},"id":739,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":361,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:6"},{"id":362,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"61:33:6"},{"absolutePath":"contracts/Aave/ILendingPoolAddressesProvider.sol","file":"./ILendingPoolAddressesProvider.sol","id":364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":739,"sourceUnit":890,"src":"96:82:6","symbolAliases":[{"foreign":{"id":363,"name":"ILendingPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"104:29:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Aave/DataTypes.sol","file":"./DataTypes.sol","id":366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":739,"sourceUnit":360,"src":"179:42:6","symbolAliases":[{"foreign":{"id":365,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"187:9:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILendingPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":738,"linearizedBaseContracts":[738],"name":"ILendingPool","nameLocation":"233:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"250:325:6","text":" @dev Emitted on deposit()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the deposit\n @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\n @param amount The amount deposited\n @param referral The referral code used*"},"eventSelector":"de6857219544bb5b7746f48ed30be6386fefc61b2f864cacf559893bf50fd951","id":379,"name":"Deposit","nameLocation":"584:7:6","nodeType":"EventDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"613:7:6","nodeType":"VariableDeclaration","scope":379,"src":"597:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"634:4:6","nodeType":"VariableDeclaration","scope":379,"src":"626:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"660:10:6","nodeType":"VariableDeclaration","scope":379,"src":"644:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"684:6:6","nodeType":"VariableDeclaration","scope":379,"src":"676:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":377,"indexed":true,"mutability":"mutable","name":"referral","nameLocation":"711:8:6","nodeType":"VariableDeclaration","scope":379,"src":"696:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":376,"name":"uint16","nodeType":"ElementaryTypeName","src":"696:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"591:132:6"},"src":"578:146:6"},{"anonymous":false,"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"728:288:6","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlyng asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to Address that will receive the underlying\n @param amount The amount to be withdrawn*"},"eventSelector":"3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7","id":390,"name":"Withdraw","nameLocation":"1025:8:6","nodeType":"EventDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1050:7:6","nodeType":"VariableDeclaration","scope":390,"src":"1034:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1034:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1075:4:6","nodeType":"VariableDeclaration","scope":390,"src":"1059:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1097:2:6","nodeType":"VariableDeclaration","scope":390,"src":"1081:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1109:6:6","nodeType":"VariableDeclaration","scope":390,"src":"1101:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1033:83:6"},"src":"1019:98:6"},{"anonymous":false,"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"1121:605:6","text":" @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed\n @param referral The referral code used*"},"eventSelector":"c6a898309e823ee50bac64e45ca8adba6690e99e7841c45d754e2a38e9019d9b","id":407,"name":"Borrow","nameLocation":"1735:6:6","nodeType":"EventDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1763:7:6","nodeType":"VariableDeclaration","scope":407,"src":"1747:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1784:4:6","nodeType":"VariableDeclaration","scope":407,"src":"1776:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1776:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1810:10:6","nodeType":"VariableDeclaration","scope":407,"src":"1794:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":399,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1834:6:6","nodeType":"VariableDeclaration","scope":407,"src":"1826:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":false,"mutability":"mutable","name":"borrowRateMode","nameLocation":"1854:14:6","nodeType":"VariableDeclaration","scope":407,"src":"1846:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":403,"indexed":false,"mutability":"mutable","name":"borrowRate","nameLocation":"1882:10:6","nodeType":"VariableDeclaration","scope":407,"src":"1874:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":405,"indexed":true,"mutability":"mutable","name":"referral","nameLocation":"1913:8:6","nodeType":"VariableDeclaration","scope":407,"src":"1898:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":404,"name":"uint16","nodeType":"ElementaryTypeName","src":"1898:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1741:184:6"},"src":"1729:197:6"},{"anonymous":false,"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"1930:311:6","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid*"},"eventSelector":"4cdde6e09bb755c9a5589ebaec640bbfedff1362d4b255ebf8339782b9942faa","id":418,"name":"Repay","nameLocation":"2250:5:6","nodeType":"EventDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2277:7:6","nodeType":"VariableDeclaration","scope":418,"src":"2261:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"2261:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2306:4:6","nodeType":"VariableDeclaration","scope":418,"src":"2290:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"indexed":true,"mutability":"mutable","name":"repayer","nameLocation":"2332:7:6","nodeType":"VariableDeclaration","scope":418,"src":"2316:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":416,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2353:6:6","nodeType":"VariableDeclaration","scope":418,"src":"2345:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2255:108:6"},"src":"2244:120:6"},{"anonymous":false,"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"2368:253:6","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param rateMode The rate mode that the user wants to swap to*"},"eventSelector":"ea368a40e9570069bb8e6511d668293ad2e1f03b0d982431fd223de9f3b70ca6","id":427,"name":"Swap","nameLocation":"2630:4:6","nodeType":"EventDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2651:7:6","nodeType":"VariableDeclaration","scope":427,"src":"2635:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"2635:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2676:4:6","nodeType":"VariableDeclaration","scope":427,"src":"2660:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"2660:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"indexed":false,"mutability":"mutable","name":"rateMode","nameLocation":"2690:8:6","nodeType":"VariableDeclaration","scope":427,"src":"2682:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2634:65:6"},"src":"2624:76:6"},{"anonymous":false,"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"2704:208:6","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"eventSelector":"00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2","id":434,"name":"ReserveUsedAsCollateralEnabled","nameLocation":"2921:30:6","nodeType":"EventDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2968:7:6","nodeType":"VariableDeclaration","scope":434,"src":"2952:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2993:4:6","nodeType":"VariableDeclaration","scope":434,"src":"2977:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"2977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:47:6"},"src":"2915:84:6"},{"anonymous":false,"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3003:208:6","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"eventSelector":"44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd","id":441,"name":"ReserveUsedAsCollateralDisabled","nameLocation":"3220:31:6","nodeType":"EventDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3268:7:6","nodeType":"VariableDeclaration","scope":441,"src":"3252:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3293:4:6","nodeType":"VariableDeclaration","scope":441,"src":"3277:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3277:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3251:47:6"},"src":"3214:85:6"},{"anonymous":false,"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"3303:213:6","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"},"eventSelector":"9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300","id":448,"name":"RebalanceStableBorrowRate","nameLocation":"3525:25:6","nodeType":"EventDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3567:7:6","nodeType":"VariableDeclaration","scope":448,"src":"3551:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3592:4:6","nodeType":"VariableDeclaration","scope":448,"src":"3576:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"3576:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:47:6"},"src":"3519:79:6"},{"anonymous":false,"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"3602:370:6","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"},"eventSelector":"631042c832b07452973831137f2d73e395028b44b250dedc5abb0ee766e168ac","id":463,"name":"FlashLoan","nameLocation":"3981:9:6","nodeType":"EventDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"4012:6:6","nodeType":"VariableDeclaration","scope":463,"src":"3996:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":453,"indexed":true,"mutability":"mutable","name":"initiator","nameLocation":"4040:9:6","nodeType":"VariableDeclaration","scope":463,"src":"4024:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"4071:5:6","nodeType":"VariableDeclaration","scope":463,"src":"4055:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4055:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4090:6:6","nodeType":"VariableDeclaration","scope":463,"src":"4082:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4082:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":459,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"4110:7:6","nodeType":"VariableDeclaration","scope":463,"src":"4102:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":461,"indexed":false,"mutability":"mutable","name":"referralCode","nameLocation":"4130:12:6","nodeType":"VariableDeclaration","scope":463,"src":"4123:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":460,"name":"uint16","nodeType":"ElementaryTypeName","src":"4123:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3990:156:6"},"src":"3975:172:6"},{"anonymous":false,"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"4151:56:6","text":" @dev Emitted when the pause is triggered."},"eventSelector":"9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752","id":466,"name":"Paused","nameLocation":"4216:6:6","nodeType":"EventDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"4222:2:6"},"src":"4210:15:6"},{"anonymous":false,"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"4229:53:6","text":" @dev Emitted when the pause is lifted."},"eventSelector":"a45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d16933","id":469,"name":"Unpaused","nameLocation":"4291:8:6","nodeType":"EventDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"4299:2:6"},"src":"4285:17:6"},{"anonymous":false,"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4306:928:6","text":" @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\n LendingPoolCollateral manager using a DELEGATECALL\n This allows to have the events in the generated ABI for LendingPool.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\n @param liquidator The address of the liquidator\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"eventSelector":"e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286","id":486,"name":"LiquidationCall","nameLocation":"5243:15:6","nodeType":"EventDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"indexed":true,"mutability":"mutable","name":"collateralAsset","nameLocation":"5280:15:6","nodeType":"VariableDeclaration","scope":486,"src":"5264:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"5264:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"indexed":true,"mutability":"mutable","name":"debtAsset","nameLocation":"5317:9:6","nodeType":"VariableDeclaration","scope":486,"src":"5301:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"5301:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5348:4:6","nodeType":"VariableDeclaration","scope":486,"src":"5332:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"5332:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"indexed":false,"mutability":"mutable","name":"debtToCover","nameLocation":"5366:11:6","nodeType":"VariableDeclaration","scope":486,"src":"5358:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5358:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":480,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nameLocation":"5391:26:6","nodeType":"VariableDeclaration","scope":486,"src":"5383:34:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"5383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":482,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"5431:10:6","nodeType":"VariableDeclaration","scope":486,"src":"5423:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"5423:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":484,"indexed":false,"mutability":"mutable","name":"receiveAToken","nameLocation":"5452:13:6","nodeType":"VariableDeclaration","scope":486,"src":"5447:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"5447:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5258:211:6"},"src":"5237:233:6"},{"anonymous":false,"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"5474:722:6","text":" @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\n in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\n the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\n gets added to the LendingPool ABI\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The new liquidity rate\n @param stableBorrowRate The new stable borrow rate\n @param variableBorrowRate The new variable borrow rate\n @param liquidityIndex The new liquidity index\n @param variableBorrowIndex The new variable borrow index*"},"eventSelector":"804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a","id":501,"name":"ReserveDataUpdated","nameLocation":"6205:18:6","nodeType":"EventDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"6245:7:6","nodeType":"VariableDeclaration","scope":501,"src":"6229:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"6229:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"indexed":false,"mutability":"mutable","name":"liquidityRate","nameLocation":"6266:13:6","nodeType":"VariableDeclaration","scope":501,"src":"6258:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"6258:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":493,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"6293:16:6","nodeType":"VariableDeclaration","scope":501,"src":"6285:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":495,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nameLocation":"6323:18:6","nodeType":"VariableDeclaration","scope":501,"src":"6315:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6315:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":497,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nameLocation":"6355:14:6","nodeType":"VariableDeclaration","scope":501,"src":"6347:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"6347:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":499,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"6383:19:6","nodeType":"VariableDeclaration","scope":501,"src":"6375:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:183:6"},"src":"6199:208:6"},{"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"6411:712:6","text":" @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User deposits 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to deposit\n @param amount The amount to be deposited\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"e8eda9df","id":513,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"7135:7:6","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"asset","nameLocation":"7156:5:6","nodeType":"VariableDeclaration","scope":513,"src":"7148:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"7148:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"amount","nameLocation":"7175:6:6","nodeType":"VariableDeclaration","scope":513,"src":"7167:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"7167:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"onBehalfOf","nameLocation":"7195:10:6","nodeType":"VariableDeclaration","scope":513,"src":"7187:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"7187:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"referralCode","nameLocation":"7218:12:6","nodeType":"VariableDeclaration","scope":513,"src":"7211:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":509,"name":"uint16","nodeType":"ElementaryTypeName","src":"7211:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"7142:92:6"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[],"src":"7243:0:6"},"scope":738,"src":"7126:118:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"7248:665:6","text":" @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to Address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"},"functionSelector":"69328dec","id":525,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"7925:8:6","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"asset","nameLocation":"7947:5:6","nodeType":"VariableDeclaration","scope":525,"src":"7939:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"7939:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"amount","nameLocation":"7966:6:6","nodeType":"VariableDeclaration","scope":525,"src":"7958:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"7958:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"to","nameLocation":"7986:2:6","nodeType":"VariableDeclaration","scope":525,"src":"7978:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"7978:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7933:59:6"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"8011:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"8011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8010:9:6"},"scope":738,"src":"7916:104:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"8024:1189:6","text":" @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already deposited enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"},"functionSelector":"a415bcad","id":539,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"9225:6:6","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"asset","nameLocation":"9245:5:6","nodeType":"VariableDeclaration","scope":539,"src":"9237:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"9237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"amount","nameLocation":"9264:6:6","nodeType":"VariableDeclaration","scope":539,"src":"9256:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"9256:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"interestRateMode","nameLocation":"9284:16:6","nodeType":"VariableDeclaration","scope":539,"src":"9276:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"9276:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"referralCode","nameLocation":"9313:12:6","nodeType":"VariableDeclaration","scope":539,"src":"9306:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":533,"name":"uint16","nodeType":"ElementaryTypeName","src":"9306:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"onBehalfOf","nameLocation":"9339:10:6","nodeType":"VariableDeclaration","scope":539,"src":"9331:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"9331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9231:122:6"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"9362:0:6"},"scope":738,"src":"9216:147:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"9367:862:6","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"},"functionSelector":"573ade81","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"10241:5:6","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"asset","nameLocation":"10260:5:6","nodeType":"VariableDeclaration","scope":553,"src":"10252:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"10252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"amount","nameLocation":"10279:6:6","nodeType":"VariableDeclaration","scope":553,"src":"10271:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"10271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"rateMode","nameLocation":"10299:8:6","nodeType":"VariableDeclaration","scope":553,"src":"10291:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"10291:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"onBehalfOf","nameLocation":"10321:10:6","nodeType":"VariableDeclaration","scope":553,"src":"10313:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"10313:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10246:89:6"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"10354:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"10354:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10353:9:6"},"scope":738,"src":"10232:131:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"10367:231:6","text":" @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\n @param asset The address of the underlying asset borrowed\n @param rateMode The rate mode that the user wants to swap to*"},"functionSelector":"94ba89a2","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nameLocation":"10610:18:6","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"asset","nameLocation":"10637:5:6","nodeType":"VariableDeclaration","scope":561,"src":"10629:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10629:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"rateMode","nameLocation":"10652:8:6","nodeType":"VariableDeclaration","scope":561,"src":"10644:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"10644:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10628:33:6"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"10670:0:6"},"scope":738,"src":"10601:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"10675:553:6","text":" @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\n        borrowed at a stable rate and depositors are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"},"functionSelector":"cd112382","id":569,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nameLocation":"11240:25:6","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"asset","nameLocation":"11274:5:6","nodeType":"VariableDeclaration","scope":569,"src":"11266:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"11266:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"user","nameLocation":"11289:4:6","nodeType":"VariableDeclaration","scope":569,"src":"11281:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"11281:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11265:29:6"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"11303:0:6"},"scope":738,"src":"11231:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"11308:266:6","text":" @dev Allows depositors to enable/disable a specific deposited asset as collateral\n @param asset The address of the underlying asset deposited\n @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise*"},"functionSelector":"5a3b74b9","id":577,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nameLocation":"11586:29:6","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"asset","nameLocation":"11624:5:6","nodeType":"VariableDeclaration","scope":577,"src":"11616:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"11616:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"useAsCollateral","nameLocation":"11636:15:6","nodeType":"VariableDeclaration","scope":577,"src":"11631:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"11631:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11615:37:6"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"11661:0:6"},"scope":738,"src":"11577:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"11666:860:6","text":" @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"functionSelector":"00a718a9","id":591,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nameLocation":"12538:15:6","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"collateralAsset","nameLocation":"12567:15:6","nodeType":"VariableDeclaration","scope":591,"src":"12559:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"12559:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"debtAsset","nameLocation":"12596:9:6","nodeType":"VariableDeclaration","scope":591,"src":"12588:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"12588:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"user","nameLocation":"12619:4:6","nodeType":"VariableDeclaration","scope":591,"src":"12611:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"12611:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"debtToCover","nameLocation":"12637:11:6","nodeType":"VariableDeclaration","scope":591,"src":"12629:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"receiveAToken","nameLocation":"12659:13:6","nodeType":"VariableDeclaration","scope":591,"src":"12654:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":587,"name":"bool","nodeType":"ElementaryTypeName","src":"12654:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12553:123:6"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"12685:0:6"},"scope":738,"src":"12529:157:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"12690:1376:6","text":" @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\n For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts amounts being flash-borrowed\n @param modes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"ab9c4b5d","id":612,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"14078:9:6","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"receiverAddress","nameLocation":"14101:15:6","nodeType":"VariableDeclaration","scope":612,"src":"14093:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"14093:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"assets","nameLocation":"14141:6:6","nodeType":"VariableDeclaration","scope":612,"src":"14122:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"14122:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":596,"nodeType":"ArrayTypeName","src":"14122:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"amounts","nameLocation":"14172:7:6","nodeType":"VariableDeclaration","scope":612,"src":"14153:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"14153:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ArrayTypeName","src":"14153:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"modes","nameLocation":"14204:5:6","nodeType":"VariableDeclaration","scope":612,"src":"14185:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"14185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":602,"nodeType":"ArrayTypeName","src":"14185:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"onBehalfOf","nameLocation":"14223:10:6","nodeType":"VariableDeclaration","scope":612,"src":"14215:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"14215:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"params","nameLocation":"14254:6:6","nodeType":"VariableDeclaration","scope":612,"src":"14239:21:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":606,"name":"bytes","nodeType":"ElementaryTypeName","src":"14239:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"referralCode","nameLocation":"14273:12:6","nodeType":"VariableDeclaration","scope":612,"src":"14266:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":608,"name":"uint16","nodeType":"ElementaryTypeName","src":"14266:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"14087:202:6"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"14298:0:6"},"scope":738,"src":"14069:230:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"14303:507:6","text":" @dev Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralETH the total collateral in ETH of the user\n @return totalDebtETH the total debt in ETH of the user\n @return availableBorrowsETH the borrowing power left of the user\n @return currentLiquidationThreshold the liquidation threshold of the user\n @return ltv the loan to value of the user\n @return healthFactor the current health factor of the user*"},"functionSelector":"bf92857c","id":630,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nameLocation":"14822:18:6","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"user","nameLocation":"14849:4:6","nodeType":"VariableDeclaration","scope":630,"src":"14841:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14840:14:6"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"totalCollateralETH","nameLocation":"14905:18:6","nodeType":"VariableDeclaration","scope":630,"src":"14897:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"14897:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"totalDebtETH","nameLocation":"14939:12:6","nodeType":"VariableDeclaration","scope":630,"src":"14931:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"14931:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"availableBorrowsETH","nameLocation":"14967:19:6","nodeType":"VariableDeclaration","scope":630,"src":"14959:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"14959:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"currentLiquidationThreshold","nameLocation":"15002:27:6","nodeType":"VariableDeclaration","scope":630,"src":"14994:35:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"14994:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"ltv","nameLocation":"15045:3:6","nodeType":"VariableDeclaration","scope":630,"src":"15037:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"15037:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"healthFactor","nameLocation":"15064:12:6","nodeType":"VariableDeclaration","scope":630,"src":"15056:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"15056:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14889:193:6"},"scope":738,"src":"14813:270:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a708e92","id":643,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nameLocation":"15096:11:6","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"reserve","nameLocation":"15121:7:6","nodeType":"VariableDeclaration","scope":643,"src":"15113:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"15113:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"aTokenAddress","nameLocation":"15142:13:6","nodeType":"VariableDeclaration","scope":643,"src":"15134:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"15134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"15169:17:6","nodeType":"VariableDeclaration","scope":643,"src":"15161:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"15161:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"15200:19:6","nodeType":"VariableDeclaration","scope":643,"src":"15192:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"15192:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"15233:27:6","nodeType":"VariableDeclaration","scope":643,"src":"15225:35:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"15225:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15107:157:6"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"15273:0:6"},"scope":738,"src":"15087:187:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1d2118f9","id":650,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nameLocation":"15287:37:6","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"reserve","nameLocation":"15333:7:6","nodeType":"VariableDeclaration","scope":650,"src":"15325:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"15325:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"rateStrategyAddress","nameLocation":"15350:19:6","nodeType":"VariableDeclaration","scope":650,"src":"15342:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"15342:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15324:46:6"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"15383:0:6"},"scope":738,"src":"15278:106:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b8d29276","id":657,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"15397:16:6","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"reserve","nameLocation":"15422:7:6","nodeType":"VariableDeclaration","scope":657,"src":"15414:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"15414:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"configuration","nameLocation":"15439:13:6","nodeType":"VariableDeclaration","scope":657,"src":"15431:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"15431:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15413:40:6"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"15462:0:6"},"scope":738,"src":"15388:75:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"15467:176:6","text":" @dev Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"},"functionSelector":"c44b11f7","id":666,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"15655:16:6","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"asset","nameLocation":"15680:5:6","nodeType":"VariableDeclaration","scope":666,"src":"15672:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"15672:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15671:15:6"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":666,"src":"15722:40:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$351_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"DataTypes.ReserveConfigurationMap","nameLocations":["15722:9:6","15732:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":351,"src":"15722:33:6"},"referencedDeclaration":351,"src":"15722:33:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$351_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"15721:42:6"},"scope":738,"src":"15646:118:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"15768:159:6","text":" @dev Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"},"functionSelector":"4417a583","id":675,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nameLocation":"15939:20:6","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"user","nameLocation":"15968:4:6","nodeType":"VariableDeclaration","scope":675,"src":"15960:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"15960:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15959:14:6"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"16009:37:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$354_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":672,"nodeType":"UserDefinedTypeName","pathNode":{"id":671,"name":"DataTypes.UserConfigurationMap","nameLocations":["16009:9:6","16019:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"16009:30:6"},"referencedDeclaration":354,"src":"16009:30:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$354_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"16008:39:6"},"scope":738,"src":"15930:118:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"16052:196:6","text":" @dev Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"d15e0053","id":683,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nameLocation":"16260:26:6","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"asset","nameLocation":"16295:5:6","nodeType":"VariableDeclaration","scope":683,"src":"16287:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"16287:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16286:15:6"},"returnParameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"16325:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"16325:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16324:9:6"},"scope":738,"src":"16251:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"16338:193:6","text":" @dev Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"386497fd","id":691,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nameLocation":"16543:32:6","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"asset","nameLocation":"16584:5:6","nodeType":"VariableDeclaration","scope":691,"src":"16576:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"16576:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16575:15:6"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":691,"src":"16614:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"16614:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16613:9:6"},"scope":738,"src":"16534:89:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"16627:178:6","text":" @dev Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state of the reserve*"},"functionSelector":"35ea6a75","id":700,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nameLocation":"16817:14:6","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"asset","nameLocation":"16840:5:6","nodeType":"VariableDeclaration","scope":700,"src":"16832:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"16832:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16831:15:6"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":700,"src":"16870:28:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":697,"nodeType":"UserDefinedTypeName","pathNode":{"id":696,"name":"DataTypes.ReserveData","nameLocations":["16870:9:6","16880:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":348,"src":"16870:21:6"},"referencedDeclaration":348,"src":"16870:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"16869:30:6"},"scope":738,"src":"16808:92:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d5ed3933","id":715,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nameLocation":"16913:16:6","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"asset","nameLocation":"16943:5:6","nodeType":"VariableDeclaration","scope":715,"src":"16935:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"16935:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"from","nameLocation":"16962:4:6","nodeType":"VariableDeclaration","scope":715,"src":"16954:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"16954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"to","nameLocation":"16980:2:6","nodeType":"VariableDeclaration","scope":715,"src":"16972:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"16972:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"amount","nameLocation":"16996:6:6","nodeType":"VariableDeclaration","scope":715,"src":"16988:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"16988:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"balanceFromAfter","nameLocation":"17016:16:6","nodeType":"VariableDeclaration","scope":715,"src":"17008:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"17008:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"balanceToBefore","nameLocation":"17046:15:6","nodeType":"VariableDeclaration","scope":715,"src":"17038:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"17038:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16929:136:6"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"17074:0:6"},"scope":738,"src":"16904:171:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d1946dbc","id":721,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nameLocation":"17088:15:6","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"17103:2:6"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"17129:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"17129:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":718,"nodeType":"ArrayTypeName","src":"17129:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"17128:18:6"},"scope":738,"src":"17079:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe65acfe","id":727,"implemented":false,"kind":"function","modifiers":[],"name":"getAddressesProvider","nameLocation":"17160:20:6","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"17180:2:6"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":727,"src":"17206:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$889","typeString":"contract ILendingPoolAddressesProvider"},"typeName":{"id":724,"nodeType":"UserDefinedTypeName","pathNode":{"id":723,"name":"ILendingPoolAddressesProvider","nameLocations":["17206:29:6"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"17206:29:6"},"referencedDeclaration":889,"src":"17206:29:6","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPoolAddressesProvider_$889","typeString":"contract ILendingPoolAddressesProvider"}},"visibility":"internal"}],"src":"17205:31:6"},"scope":738,"src":"17151:86:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bedb86fb","id":732,"implemented":false,"kind":"function","modifiers":[],"name":"setPause","nameLocation":"17250:8:6","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"val","nameLocation":"17264:3:6","nodeType":"VariableDeclaration","scope":732,"src":"17259:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":728,"name":"bool","nodeType":"ElementaryTypeName","src":"17259:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17258:10:6"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"17277:0:6"},"scope":738,"src":"17241:37:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c975abb","id":737,"implemented":false,"kind":"function","modifiers":[],"name":"paused","nameLocation":"17291:6:6","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"17297:2:6"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":737,"src":"17323:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":734,"name":"bool","nodeType":"ElementaryTypeName","src":"17323:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17322:6:6"},"scope":738,"src":"17282:47:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":739,"src":"223:17108:6","usedErrors":[]}],"src":"37:17294:6"},"id":6},"contracts/Aave/ILendingPoolAddressesProvider.sol":{"ast":{"absolutePath":"contracts/Aave/ILendingPoolAddressesProvider.sol","exportedSymbols":{"ILendingPoolAddressesProvider":[889]},"id":890,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":740,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ILendingPoolAddressesProvider","contractDependencies":[],"contractKind":"interface","documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"62:311:7","text":" @title LendingPoolAddressesProvider contract\n @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\n - Acting also as factory of proxies and admin of those, so with right to change its implementations\n - Owned by the Aave Governance\n @author Aave*"},"fullyImplemented":false,"id":889,"linearizedBaseContracts":[889],"name":"ILendingPoolAddressesProvider","nameLocation":"384:29:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"5e667c32fd847cf8bce48ab3400175cbf107bdc82b2dea62e3364909dfaee799","id":745,"name":"MarketIdSet","nameLocation":"424:11:7","nodeType":"EventDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"indexed":false,"mutability":"mutable","name":"newMarketId","nameLocation":"443:11:7","nodeType":"VariableDeclaration","scope":745,"src":"436:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":742,"name":"string","nodeType":"ElementaryTypeName","src":"436:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"435:20:7"},"src":"418:38:7"},{"anonymous":false,"eventSelector":"c4e6c6cdf28d0edbd8bcf071d724d33cc2e7a30be7d06443925656e9cb492aa4","id":749,"name":"LendingPoolUpdated","nameLocation":"465:18:7","nodeType":"EventDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"500:10:7","nodeType":"VariableDeclaration","scope":749,"src":"484:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"483:28:7"},"src":"459:53:7"},{"anonymous":false,"eventSelector":"c20a317155a9e7d84e06b716b4b355d47742ab9f8c5d630e7f556553f582430d","id":753,"name":"ConfigurationAdminUpdated","nameLocation":"521:25:7","nodeType":"EventDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"563:10:7","nodeType":"VariableDeclaration","scope":753,"src":"547:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"547:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"546:28:7"},"src":"515:60:7"},{"anonymous":false,"eventSelector":"e19673fc861bfeb894cf2d6b7662505497ef31c0f489b742db24ee3310826916","id":757,"name":"EmergencyAdminUpdated","nameLocation":"584:21:7","nodeType":"EventDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"622:10:7","nodeType":"VariableDeclaration","scope":757,"src":"606:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"605:28:7"},"src":"578:56:7"},{"anonymous":false,"eventSelector":"dfabe479bad36782fb1e77fbfddd4e382671713527e4786cfc93a022ae763729","id":761,"name":"LendingPoolConfiguratorUpdated","nameLocation":"643:30:7","nodeType":"EventDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"690:10:7","nodeType":"VariableDeclaration","scope":761,"src":"674:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"673:28:7"},"src":"637:65:7"},{"anonymous":false,"eventSelector":"991888326f0eab3df6084aadb82bee6781b5c9aa75379e8bc50ae86934541638","id":765,"name":"LendingPoolCollateralManagerUpdated","nameLocation":"711:35:7","nodeType":"EventDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"763:10:7","nodeType":"VariableDeclaration","scope":765,"src":"747:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"746:28:7"},"src":"705:70:7"},{"anonymous":false,"eventSelector":"efe8ab924ca486283a79dc604baa67add51afb82af1db8ac386ebbba643cdffd","id":769,"name":"PriceOracleUpdated","nameLocation":"784:18:7","nodeType":"EventDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"819:10:7","nodeType":"VariableDeclaration","scope":769,"src":"803:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"802:28:7"},"src":"778:53:7"},{"anonymous":false,"eventSelector":"5c29179aba6942020a8a2d38f65de02fb6b7f784e7f049ed3a3cab97621859b5","id":773,"name":"LendingRateOracleUpdated","nameLocation":"840:24:7","nodeType":"EventDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"881:10:7","nodeType":"VariableDeclaration","scope":773,"src":"865:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:28:7"},"src":"834:59:7"},{"anonymous":false,"eventSelector":"1eb35cb4b5bbb23d152f3b4016a5a46c37a07ae930ed0956aba951e231142438","id":779,"name":"ProxyCreated","nameLocation":"902:12:7","nodeType":"EventDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"923:2:7","nodeType":"VariableDeclaration","scope":779,"src":"915:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"915:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":777,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"943:10:7","nodeType":"VariableDeclaration","scope":779,"src":"927:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"914:40:7"},"src":"896:59:7"},{"anonymous":false,"eventSelector":"f2689d5d5cd0c639e137642cae5d40afced201a1a0327e7ac9358461dc9fff31","id":787,"name":"AddressSet","nameLocation":"964:10:7","nodeType":"EventDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"983:2:7","nodeType":"VariableDeclaration","scope":787,"src":"975:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"975:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":783,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1003:10:7","nodeType":"VariableDeclaration","scope":787,"src":"987:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"indexed":false,"mutability":"mutable","name":"hasProxy","nameLocation":"1020:8:7","nodeType":"VariableDeclaration","scope":787,"src":"1015:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":784,"name":"bool","nodeType":"ElementaryTypeName","src":"1015:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"974:55:7"},"src":"958:72:7"},{"functionSelector":"568ef470","id":792,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nameLocation":"1043:11:7","nodeType":"FunctionDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[],"src":"1054:2:7"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"1080:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":789,"name":"string","nodeType":"ElementaryTypeName","src":"1080:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1079:15:7"},"scope":889,"src":"1034:61:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f67b1847","id":797,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nameLocation":"1108:11:7","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"marketId","nameLocation":"1136:8:7","nodeType":"VariableDeclaration","scope":797,"src":"1120:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":793,"name":"string","nodeType":"ElementaryTypeName","src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1119:26:7"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"1154:0:7"},"scope":889,"src":"1099:56:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca446dd9","id":804,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"1168:10:7","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"id","nameLocation":"1187:2:7","nodeType":"VariableDeclaration","scope":804,"src":"1179:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"newAddress","nameLocation":"1199:10:7","nodeType":"VariableDeclaration","scope":804,"src":"1191:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1178:32:7"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"1219:0:7"},"scope":889,"src":"1159:61:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5dcc528c","id":811,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nameLocation":"1233:17:7","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"id","nameLocation":"1259:2:7","nodeType":"VariableDeclaration","scope":811,"src":"1251:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1251:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"impl","nameLocation":"1271:4:7","nodeType":"VariableDeclaration","scope":811,"src":"1263:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1250:26:7"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"1285:0:7"},"scope":889,"src":"1224:62:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"21f8a721","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"1299:10:7","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"id","nameLocation":"1318:2:7","nodeType":"VariableDeclaration","scope":818,"src":"1310:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1310:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1309:12:7"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"1345:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1344:9:7"},"scope":889,"src":"1290:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0261bf8b","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPool","nameLocation":"1367:14:7","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"1381:2:7"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"1407:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1406:9:7"},"scope":889,"src":"1358:58:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5aef021f","id":828,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolImpl","nameLocation":"1429:18:7","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"pool","nameLocation":"1456:4:7","nodeType":"VariableDeclaration","scope":828,"src":"1448:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"1448:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1447:14:7"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"1470:0:7"},"scope":889,"src":"1420:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"85c858b1","id":833,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolConfigurator","nameLocation":"1484:26:7","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"1510:2:7"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"1536:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1535:9:7"},"scope":889,"src":"1475:70:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c12542df","id":838,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolConfiguratorImpl","nameLocation":"1558:30:7","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"configurator","nameLocation":"1597:12:7","nodeType":"VariableDeclaration","scope":838,"src":"1589:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1588:22:7"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"1619:0:7"},"scope":889,"src":"1549:71:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"712d9171","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingPoolCollateralManager","nameLocation":"1633:31:7","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"1664:2:7"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"1690:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1689:9:7"},"scope":889,"src":"1624:75:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"398e5553","id":848,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingPoolCollateralManager","nameLocation":"1712:31:7","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"manager","nameLocation":"1752:7:7","nodeType":"VariableDeclaration","scope":848,"src":"1744:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:17:7"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"1769:0:7"},"scope":889,"src":"1703:67:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aecda378","id":853,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolAdmin","nameLocation":"1783:12:7","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"1795:2:7"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"1821:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"1821:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1820:9:7"},"scope":889,"src":"1774:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"283d62ad","id":858,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolAdmin","nameLocation":"1843:12:7","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"admin","nameLocation":"1864:5:7","nodeType":"VariableDeclaration","scope":858,"src":"1856:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"1856:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1855:15:7"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"1879:0:7"},"scope":889,"src":"1834:46:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ddcaa9ea","id":863,"implemented":false,"kind":"function","modifiers":[],"name":"getEmergencyAdmin","nameLocation":"1893:17:7","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"1910:2:7"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":863,"src":"1936:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1936:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1935:9:7"},"scope":889,"src":"1884:61:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"35da3394","id":868,"implemented":false,"kind":"function","modifiers":[],"name":"setEmergencyAdmin","nameLocation":"1958:17:7","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"admin","nameLocation":"1984:5:7","nodeType":"VariableDeclaration","scope":868,"src":"1976:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"1976:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1975:15:7"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[],"src":"1999:0:7"},"scope":889,"src":"1949:51:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fca513a8","id":873,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nameLocation":"2013:14:7","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"2027:2:7"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"2053:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2052:9:7"},"scope":889,"src":"2004:58:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"530e784f","id":878,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracle","nameLocation":"2075:14:7","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"priceOracle","nameLocation":"2098:11:7","nodeType":"VariableDeclaration","scope":878,"src":"2090:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2090:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2089:21:7"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"2119:0:7"},"scope":889,"src":"2066:54:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3618abba","id":883,"implemented":false,"kind":"function","modifiers":[],"name":"getLendingRateOracle","nameLocation":"2133:20:7","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[],"src":"2153:2:7"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"2179:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2178:9:7"},"scope":889,"src":"2124:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"820d1274","id":888,"implemented":false,"kind":"function","modifiers":[],"name":"setLendingRateOracle","nameLocation":"2201:20:7","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"lendingRateOracle","nameLocation":"2230:17:7","nodeType":"VariableDeclaration","scope":888,"src":"2222:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"2222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2221:27:7"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"2257:0:7"},"scope":889,"src":"2192:66:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":890,"src":"374:1886:7","usedErrors":[]}],"src":"37:2223:7"},"id":7},"contracts/Aave/IScaledBalanceToken.sol":{"ast":{"absolutePath":"contracts/Aave/IScaledBalanceToken.sol","exportedSymbols":{"IScaledBalanceToken":[916]},"id":917,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":891,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IScaledBalanceToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":916,"linearizedBaseContracts":[916],"name":"IScaledBalanceToken","nameLocation":"72:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"96:296:8","text":" @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\n updated stored balance divided by the reserve's liquidity index at the moment of the update\n @param user The user whose balance is calculated\n @return The scaled balance of the user*"},"functionSelector":"1da24f3e","id":899,"implemented":false,"kind":"function","modifiers":[],"name":"scaledBalanceOf","nameLocation":"404:15:8","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"user","nameLocation":"428:4:8","nodeType":"VariableDeclaration","scope":899,"src":"420:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"420:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"419:14:8"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"457:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"456:9:8"},"scope":916,"src":"395:71:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"470:233:8","text":" @dev Returns the scaled balance of the user and the scaled total supply.\n @param user The address of the user\n @return The scaled balance of the user\n @return The scaled balance and the scaled total supply*"},"functionSelector":"0afbcdc9","id":909,"implemented":false,"kind":"function","modifiers":[],"name":"getScaledUserBalanceAndSupply","nameLocation":"715:29:8","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"user","nameLocation":"753:4:8","nodeType":"VariableDeclaration","scope":909,"src":"745:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"745:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"744:14:8"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"782:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"782:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"791:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"781:18:8"},"scope":916,"src":"706:94:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"804:144:8","text":" @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\n @return The scaled total supply*"},"functionSelector":"b1bf962d","id":915,"implemented":false,"kind":"function","modifiers":[],"name":"scaledTotalSupply","nameLocation":"960:17:8","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"977:2:8"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"1003:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1002:9:8"},"scope":916,"src":"951:61:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":917,"src":"62:952:8","usedErrors":[]}],"src":"37:977:8"},"id":8},"contracts/Aave/IStableDebtToken.sol":{"ast":{"absolutePath":"contracts/Aave/IStableDebtToken.sol","exportedSymbols":{"IStableDebtToken":[1032]},"id":1033,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":918,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IStableDebtToken","contractDependencies":[],"contractKind":"interface","documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"62:171:9","text":" @title IStableDebtToken\n @notice Defines the interface for the stable debt token\n @dev It does not inherit from IERC20 to save in code size\n @author Aave*"},"fullyImplemented":false,"id":1032,"linearizedBaseContracts":[1032],"name":"IStableDebtToken","nameLocation":"245:16:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"266:588:9","text":" @dev Emitted when new stable debt is minted\n @param user The address of the user who triggered the minting\n @param onBehalfOf The recipient of stable debt tokens\n @param amount The amount minted\n @param currentBalance The current balance of the user\n @param balanceIncrease The increase in balance since the last action of the user\n @param newRate The rate of the debt after the minting\n @param avgStableRate The new average stable rate after the minting\n @param newTotalSupply The new total supply of the stable debt token after the action*"},"eventSelector":"c16f4e4ca34d790de4c656c72fd015c667d688f20be64eea360618545c4c530f","id":938,"name":"Mint","nameLocation":"863:4:9","nodeType":"EventDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"889:4:9","nodeType":"VariableDeclaration","scope":938,"src":"873:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"915:10:9","nodeType":"VariableDeclaration","scope":938,"src":"899:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"939:6:9","nodeType":"VariableDeclaration","scope":938,"src":"931:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"indexed":false,"mutability":"mutable","name":"currentBalance","nameLocation":"959:14:9","nodeType":"VariableDeclaration","scope":938,"src":"951:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":930,"indexed":false,"mutability":"mutable","name":"balanceIncrease","nameLocation":"987:15:9","nodeType":"VariableDeclaration","scope":938,"src":"979:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":932,"indexed":false,"mutability":"mutable","name":"newRate","nameLocation":"1016:7:9","nodeType":"VariableDeclaration","scope":938,"src":"1008:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":934,"indexed":false,"mutability":"mutable","name":"avgStableRate","nameLocation":"1037:13:9","nodeType":"VariableDeclaration","scope":938,"src":"1029:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":936,"indexed":false,"mutability":"mutable","name":"newTotalSupply","nameLocation":"1064:14:9","nodeType":"VariableDeclaration","scope":938,"src":"1056:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"867:215:9"},"src":"857:226:9"},{"anonymous":false,"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"1087:454:9","text":" @dev Emitted when new stable debt is burned\n @param user The address of the user\n @param amount The amount being burned\n @param currentBalance The current balance of the user\n @param balanceIncrease The the increase in balance since the last action of the user\n @param avgStableRate The new average stable rate after the burning\n @param newTotalSupply The new total supply of the stable debt token after the action*"},"eventSelector":"44bd20a79e993bdcc7cbedf54a3b4d19fb78490124b6b90d04fe3242eea579e8","id":953,"name":"Burn","nameLocation":"1550:4:9","nodeType":"EventDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1576:4:9","nodeType":"VariableDeclaration","scope":953,"src":"1560:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1594:6:9","nodeType":"VariableDeclaration","scope":953,"src":"1586:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"1586:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":945,"indexed":false,"mutability":"mutable","name":"currentBalance","nameLocation":"1614:14:9","nodeType":"VariableDeclaration","scope":953,"src":"1606:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":947,"indexed":false,"mutability":"mutable","name":"balanceIncrease","nameLocation":"1642:15:9","nodeType":"VariableDeclaration","scope":953,"src":"1634:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1634:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":949,"indexed":false,"mutability":"mutable","name":"avgStableRate","nameLocation":"1671:13:9","nodeType":"VariableDeclaration","scope":953,"src":"1663:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":951,"indexed":false,"mutability":"mutable","name":"newTotalSupply","nameLocation":"1698:14:9","nodeType":"VariableDeclaration","scope":953,"src":"1690:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1554:162:9"},"src":"1544:173:9"},{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"1721:504:9","text":" @dev Mints debt token to the `onBehalfOf` address.\n - The resulting rate is the weighted average between the rate of the new debt\n and the rate of the previous debt\n @param user The address receiving the borrowed underlying, being the delegatee in case\n of credit delegate, or same as `onBehalfOf` otherwise\n @param onBehalfOf The address receiving the debt tokens\n @param amount The amount of debt tokens to mint\n @param rate The rate of the debt being minted*"},"functionSelector":"b3f1c93d","id":967,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2237:4:9","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"user","nameLocation":"2255:4:9","nodeType":"VariableDeclaration","scope":967,"src":"2247:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"onBehalfOf","nameLocation":"2273:10:9","nodeType":"VariableDeclaration","scope":967,"src":"2265:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"2265:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"amount","nameLocation":"2297:6:9","nodeType":"VariableDeclaration","scope":967,"src":"2289:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2289:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"rate","nameLocation":"2317:4:9","nodeType":"VariableDeclaration","scope":967,"src":"2309:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2309:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2241:84:9"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"2344:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"2344:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2343:6:9"},"scope":1032,"src":"2228:122:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"2354:288:9","text":" @dev Burns debt of `user`\n - The resulting rate is the weighted average between the rate of the new debt\n and the rate of the previous debt\n @param user The address of the user getting his debt burned\n @param amount The amount of debt tokens getting burned*"},"functionSelector":"9dc29fac","id":975,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2654:4:9","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"user","nameLocation":"2667:4:9","nodeType":"VariableDeclaration","scope":975,"src":"2659:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2659:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"amount","nameLocation":"2681:6:9","nodeType":"VariableDeclaration","scope":975,"src":"2673:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2673:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2658:30:9"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"2697:0:9"},"scope":1032,"src":"2645:53:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"2702:112:9","text":" @dev Returns the average rate of all the stable rate loans.\n @return The average stable rate*"},"functionSelector":"90f6fcf2","id":981,"implemented":false,"kind":"function","modifiers":[],"name":"getAverageStableRate","nameLocation":"2826:20:9","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"2846:2:9"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"2872:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2872:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2871:9:9"},"scope":1032,"src":"2817:64:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"2885:102:9","text":" @dev Returns the stable rate of the user debt\n @return The stable rate of the user*"},"functionSelector":"e78c9b3b","id":989,"implemented":false,"kind":"function","modifiers":[],"name":"getUserStableRate","nameLocation":"2999:17:9","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"user","nameLocation":"3025:4:9","nodeType":"VariableDeclaration","scope":989,"src":"3017:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"3017:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3016:14:9"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"3054:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:9:9"},"scope":1032,"src":"2990:73:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"3067:100:9","text":" @dev Returns the timestamp of the last update of the user\n @return The timestamp*"},"functionSelector":"79ce6b8c","id":997,"implemented":false,"kind":"function","modifiers":[],"name":"getUserLastUpdated","nameLocation":"3179:18:9","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"user","nameLocation":"3206:4:9","nodeType":"VariableDeclaration","scope":997,"src":"3198:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"3198:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3197:14:9"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":997,"src":"3235:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":994,"name":"uint40","nodeType":"ElementaryTypeName","src":"3235:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3234:8:9"},"scope":1032,"src":"3170:73:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"3247:88:9","text":" @dev Returns the principal, the total supply and the average stable rate*"},"functionSelector":"79774338","id":1009,"implemented":false,"kind":"function","modifiers":[],"name":"getSupplyData","nameLocation":"3347:13:9","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"3360:2:9"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"3405:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"3420:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3420:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"3435:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"3450:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1006,"name":"uint40","nodeType":"ElementaryTypeName","src":"3450:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3397:65:9"},"scope":1032,"src":"3338:125:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"3467:108:9","text":" @dev Returns the timestamp of the last update of the total supply\n @return The timestamp*"},"functionSelector":"e7484890","id":1015,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalSupplyLastUpdated","nameLocation":"3587:25:9","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"3612:2:9"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"3638:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1012,"name":"uint40","nodeType":"ElementaryTypeName","src":"3638:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3637:8:9"},"scope":1032,"src":"3578:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"3650:73:9","text":" @dev Returns the total supply and the average stable rate*"},"functionSelector":"f731e9be","id":1023,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalSupplyAndAvgRate","nameLocation":"3735:24:9","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"3759:2:9"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"3785:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"3794:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3794:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3784:18:9"},"scope":1032,"src":"3726:77:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"3807:141:9","text":" @dev Returns the principal debt balance of the user\n @return The debt balance of the user since the last burn/mint action*"},"functionSelector":"c634dfaa","id":1031,"implemented":false,"kind":"function","modifiers":[],"name":"principalBalanceOf","nameLocation":"3960:18:9","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"user","nameLocation":"3987:4:9","nodeType":"VariableDeclaration","scope":1031,"src":"3979:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"3979:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3978:14:9"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"4016:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4015:9:9"},"scope":1032,"src":"3951:74:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1033,"src":"235:3792:9","usedErrors":[]}],"src":"37:3990:9"},"id":9},"contracts/Aave/IVariableDebtToken.sol":{"ast":{"absolutePath":"contracts/Aave/IVariableDebtToken.sol","exportedSymbols":{"IScaledBalanceToken":[916],"IVariableDebtToken":[1084]},"id":1085,"license":"agpl-3.0","nodeType":"SourceUnit","nodes":[{"id":1034,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:10"},{"absolutePath":"contracts/Aave/IScaledBalanceToken.sol","file":"./IScaledBalanceToken.sol","id":1036,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1085,"sourceUnit":917,"src":"62:62:10","symbolAliases":[{"foreign":{"id":1035,"name":"IScaledBalanceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"70:19:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1038,"name":"IScaledBalanceToken","nameLocations":["278:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":916,"src":"278:19:10"},"id":1039,"nodeType":"InheritanceSpecifier","src":"278:19:10"}],"canonicalName":"IVariableDebtToken","contractDependencies":[],"contractKind":"interface","documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"126:119:10","text":" @title IVariableDebtToken\n @author Aave\n @notice Defines the basic interface for a variable debt token.*"},"fullyImplemented":false,"id":1084,"linearizedBaseContracts":[1084,916],"name":"IVariableDebtToken","nameLocation":"256:18:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"302:279:10","text":" @dev Emitted after the mint action\n @param from The address performing the mint\n @param onBehalfOf The address of the user on which behalf minting has been performed\n @param value The amount to be minted\n @param index The last index of the reserve*"},"eventSelector":"2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee","id":1050,"name":"Mint","nameLocation":"590:4:10","nodeType":"EventDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"611:4:10","nodeType":"VariableDeclaration","scope":1050,"src":"595:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"633:10:10","nodeType":"VariableDeclaration","scope":1050,"src":"617:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"617:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"653:5:10","nodeType":"VariableDeclaration","scope":1050,"src":"645:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1048,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"668:5:10","nodeType":"VariableDeclaration","scope":1050,"src":"660:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"660:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"594:80:10"},"src":"584:91:10"},{"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"679:450:10","text":" @dev Mints debt token to the `onBehalfOf` address\n @param user The address receiving the borrowed underlying, being the delegatee in case\n of credit delegate, or same as `onBehalfOf` otherwise\n @param onBehalfOf The address receiving the debt tokens\n @param amount The amount of debt being minted\n @param index The variable debt index of the reserve\n @return `true` if the the previous balance of the user is 0*"},"functionSelector":"b3f1c93d","id":1064,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1141:4:10","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"user","nameLocation":"1159:4:10","nodeType":"VariableDeclaration","scope":1064,"src":"1151:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"1151:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1177:10:10","nodeType":"VariableDeclaration","scope":1064,"src":"1169:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"amount","nameLocation":"1201:6:10","nodeType":"VariableDeclaration","scope":1064,"src":"1193:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"index","nameLocation":"1221:5:10","nodeType":"VariableDeclaration","scope":1064,"src":"1213:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1145:85:10"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"1249:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1061,"name":"bool","nodeType":"ElementaryTypeName","src":"1249:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1248:6:10"},"scope":1084,"src":"1132:123:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"1259:200:10","text":" @dev Emitted when variable debt is burnt\n @param user The user which debt has been burned\n @param amount The amount of debt being burned\n @param index The index of the user*"},"eventSelector":"49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a","id":1073,"name":"Burn","nameLocation":"1468:4:10","nodeType":"EventDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1489:4:10","nodeType":"VariableDeclaration","scope":1073,"src":"1473:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"1473:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1503:6:10","nodeType":"VariableDeclaration","scope":1073,"src":"1495:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1071,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"1519:5:10","nodeType":"VariableDeclaration","scope":1073,"src":"1511:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1511:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1472:53:10"},"src":"1462:64:10"},{"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"1530:148:10","text":" @dev Burns user variable debt\n @param user The user which debt is burnt\n @param index The variable debt index of the reserve*"},"functionSelector":"f5298aca","id":1083,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1690:4:10","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"user","nameLocation":"1708:4:10","nodeType":"VariableDeclaration","scope":1083,"src":"1700:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"amount","nameLocation":"1726:6:10","nodeType":"VariableDeclaration","scope":1083,"src":"1718:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"index","nameLocation":"1746:5:10","nodeType":"VariableDeclaration","scope":1083,"src":"1738:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1738:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1694:61:10"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[],"src":"1764:0:10"},"scope":1084,"src":"1681:84:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1085,"src":"246:1521:10","usedErrors":[]}],"src":"37:1730:10"},"id":10},"contracts/L1/Vault.sol":{"ast":{"absolutePath":"contracts/L1/Vault.sol","exportedSymbols":{"BytesLib":[4336],"Context":[320],"DataTypes":[359],"ExcessivelySafeCall":[4433],"IERC20":[273],"IERC20Metadata":[298],"ILayerZeroEndpoint":[3958],"ILayerZeroReceiver":[3972],"ILayerZeroUserApplicationConfig":[4003],"ILendingPool":[738],"ILendingPoolAddressesProvider":[889],"IScaledBalanceToken":[916],"IStableDebtToken":[1032],"IVariableDebtToken":[1084],"IVault":[3049],"LzApp":[3572],"NonblockingLzApp":[3813],"Ownable":[112],"Ownable2Step":[195],"Vault":[2856],"VaultData":[2967]},"id":2857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1086,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:11"},{"absolutePath":"contracts/L1/interface/IVault.sol","file":"./interface/IVault.sol","id":1087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":3050,"src":"55:32:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/L1/data/VaultData.sol","file":"./data/VaultData.sol","id":1088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":2968,"src":"88:30:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":274,"src":"119:56:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":1090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":299,"src":"176:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LayerZero/NonblockingLzApp.sol","file":"../LayerZero/NonblockingLzApp.sol","id":1091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":3814,"src":"252:43:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Aave/ILendingPool.sol","file":"../Aave/ILendingPool.sol","id":1092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":739,"src":"296:34:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Aave/DataTypes.sol","file":"../Aave/DataTypes.sol","id":1093,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":360,"src":"331:31:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Aave/IStableDebtToken.sol","file":"../Aave/IStableDebtToken.sol","id":1094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":1033,"src":"363:38:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Aave/IVariableDebtToken.sol","file":"../Aave/IVariableDebtToken.sol","id":1095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":1085,"src":"402:40:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1096,"name":"IVault","nameLocations":["462:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3049,"src":"462:6:11"},"id":1097,"nodeType":"InheritanceSpecifier","src":"462:6:11"},{"baseName":{"id":1098,"name":"VaultData","nameLocations":["469:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2967,"src":"469:9:11"},"id":1099,"nodeType":"InheritanceSpecifier","src":"469:9:11"},{"baseName":{"id":1100,"name":"NonblockingLzApp","nameLocations":["479:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3813,"src":"479:16:11"},"id":1101,"nodeType":"InheritanceSpecifier","src":"479:16:11"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2856,"linearizedBaseContracts":[2856,3813,3572,4003,3972,195,112,320,2967,3049],"name":"Vault","nameLocation":"453:5:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c779c1c3","id":1105,"mutability":"mutable","name":"interestAmount","nameLocation":"538:14:11","nodeType":"VariableDeclaration","scope":2856,"src":"502:50:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1104,"keyType":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"502:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"29e26b10","id":1109,"mutability":"mutable","name":"deCoinList","nameLocation":"590:10:11","nodeType":"VariableDeclaration","scope":2856,"src":"558:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1108,"keyType":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"566:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"558:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1107,"name":"bool","nodeType":"ElementaryTypeName","src":"577:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"7a4fda3d","id":1113,"mutability":"mutable","name":"totalFee","nameLocation":"642:8:11","nodeType":"VariableDeclaration","scope":2856,"src":"606:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1112,"keyType":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"614:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"606:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"b7a745c6","id":1117,"mutability":"mutable","name":"whlieList","nameLocation":"688:9:11","nodeType":"VariableDeclaration","scope":2856,"src":"656:41:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1116,"keyType":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"656:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1115,"name":"bool","nodeType":"ElementaryTypeName","src":"675:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":1147,"nodeType":"Block","src":"822:110:11","statements":[{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1131,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"831:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1132,"name":"lendingPool_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"838:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"831:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1134,"nodeType":"ExpressionStatement","src":"831:19:11"},{"expression":{"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1135,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"859:10:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1136,"name":"dstChainId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"871:11:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"859:23:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1138,"nodeType":"ExpressionStatement","src":"859:23:11"},{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1139,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"891:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"900:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"891:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"ExpressionStatement","src":"891:13:11"},{"expression":{"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1143,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"913:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1144,"name":"usdt_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"919:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"913:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1146,"nodeType":"ExpressionStatement","src":"913:11:11"}]},"id":1148,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1128,"name":"lzEndpoint_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"809:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1129,"kind":"baseConstructorSpecifier","modifierName":{"id":1127,"name":"NonblockingLzApp","nameLocations":["792:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3813,"src":"792:16:11"},"nodeType":"ModifierInvocation","src":"792:29:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"lendingPool_","nameLocation":"724:12:11","nodeType":"VariableDeclaration","scope":1148,"src":"716:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"lzEndpoint_","nameLocation":"746:11:11","nodeType":"VariableDeclaration","scope":1148,"src":"738:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"dstChainId_","nameLocation":"766:11:11","nodeType":"VariableDeclaration","scope":1148,"src":"759:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1122,"name":"uint16","nodeType":"ElementaryTypeName","src":"759:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"usdt_","nameLocation":"786:5:11","nodeType":"VariableDeclaration","scope":1148,"src":"778:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"715:77:11"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"822:0:11"},"scope":2856,"src":"704:228:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2976],"body":{"id":1332,"nodeType":"Block","src":"1016:1252:11","statements":[{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"isSupDe_","nameLocation":"1031:8:11","nodeType":"VariableDeclaration","scope":1332,"src":"1026:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1156,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1158,"nodeType":"VariableDeclarationStatement","src":"1026:13:11"},{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"_amount","nameLocation":"1057:7:11","nodeType":"VariableDeclaration","scope":1332,"src":"1049:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1161,"nodeType":"VariableDeclarationStatement","src":"1049:15:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"1082:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1092:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1082:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c6f73696e67","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1097:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8dfc848030fefb271d113eec61f68c652b0dff1d9b95a4ce008309efe2f09f1","typeString":"literal_string \"Closing\""},"value":"Closing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8dfc848030fefb271d113eec61f68c652b0dff1d9b95a4ce008309efe2f09f1","typeString":"literal_string \"Closing\""}],"id":1162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1074:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"1074:33:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1170,"name":"deCoinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"1125:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1172,"indexExpression":{"id":1171,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1136:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1125:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1146:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1125:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563686172676520696e20746869732063757272656e6379206973206e6f7420737570706f72746564","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1152:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3aaf93234d216cebcce57886fad754bf0073b69b286cb61509139d78484b29de","typeString":"literal_string \"Recharge in this currency is not supported\""},"value":"Recharge in this currency is not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3aaf93234d216cebcce57886fad754bf0073b69b286cb61509139d78484b29de","typeString":"literal_string \"Recharge in this currency is not supported\""}],"id":1169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1117:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"ExpressionStatement","src":"1117:80:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1240:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1244:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1240:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1180,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1223:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1179,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1216:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1230:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1216:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1186,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1255:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1216:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520696e73756666696369656e74","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1264:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72","typeString":"literal_string \"Balance insufficient\""},"value":"Balance insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72","typeString":"literal_string \"Balance insufficient\""}],"id":1178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1208:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1208:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"1208:79:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1329:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1333:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1329:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1200,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1348:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1340:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"1340:7:11","typeDescriptions":{}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1340:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1193,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1312:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1192,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1305:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1319:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":250,"src":"1305:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1203,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1358:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1305:60:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617574686f72697a6174696f6e","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306","typeString":"literal_string \"No authorization\""},"value":"No authorization"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306","typeString":"literal_string \"No authorization\""}],"id":1191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1297:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1297:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1207,"nodeType":"ExpressionStatement","src":"1297:88:11"},{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"balance","nameLocation":"1404:7:11","nodeType":"VariableDeclaration","scope":1332,"src":"1396:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1217,"initialValue":{"arguments":[{"expression":{"id":1214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1439:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1443:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1439:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1211,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1422:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1415:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1415:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1429:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1415:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1415:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1396:54:11"},{"expression":{"arguments":[{"expression":{"id":1222,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1487:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1491:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1487:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1226,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1506:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1498:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1498:7:11","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1228,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1219,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1467:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1218,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1460:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1474:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":272,"src":"1460:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"ExpressionStatement","src":"1460:60:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1562:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1566:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1562:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1233,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1545:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1232,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1538:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1538:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1552:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"1538:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1538:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1240,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1577:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1538:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520696e73756666696369656e74","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1594:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72","typeString":"literal_string \"Balance insufficient\""},"value":"Balance insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72","typeString":"literal_string \"Balance insufficient\""}],"id":1231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1530:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"1530:87:11"},{"assignments":[1247,null],"declarations":[{"constant":false,"id":1247,"mutability":"mutable","name":"va","nameLocation":"1645:2:11","nodeType":"VariableDeclaration","scope":1332,"src":"1637:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":1252,"initialValue":{"arguments":[{"expression":{"id":1249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1664:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1668:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1664:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1248,"name":"estimateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"1652:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1636:39:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1254,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"1693:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1699:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1703:5:11","memberName":"value","nodeType":"MemberAccess","src":"1699:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1693:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f7420656e6f756768206e617469766520666f722066656573","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1709:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de","typeString":"literal_string \"not enough native for fees\""},"value":"not enough native for fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de","typeString":"literal_string \"not enough native for fees\""}],"id":1253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1685:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1685:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"ExpressionStatement","src":"1685:53:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1261,"name":"isSupDe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"1752:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1263,"indexExpression":{"id":1262,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1760:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1752:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1770:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1752:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1301,"nodeType":"IfStatement","src":"1749:303:11","trueBody":{"id":1300,"nodeType":"Block","src":"1775:277:11","statements":[{"expression":{"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1266,"name":"isSupDe_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1789:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1798:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1789:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1269,"nodeType":"ExpressionStatement","src":"1789:13:11"},{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"_oldTotalValue","nameLocation":"1824:14:11","nodeType":"VariableDeclaration","scope":1300,"src":"1816:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1275,"initialValue":{"arguments":[{"id":1273,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"1855:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1272,"name":"getTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"1841:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1841:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1816:44:11"},{"expression":{"arguments":[{"id":1277,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"1889:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1278,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1895:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1276,"name":"_depositToAAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1874:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1874:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"ExpressionStatement","src":"1874:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1922:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1282,"name":"_oldTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1931:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1922:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1285,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"1962:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1284,"name":"getTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"1948:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1948:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1922:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1971:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1922:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1299,"nodeType":"IfStatement","src":"1918:120:11","trueBody":{"id":1298,"nodeType":"Block","src":"1975:63:11","statements":[{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1290,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1292,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2016:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1291,"name":"getTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2002:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2002:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2002:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1992:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"1992:31:11"}]}}]}},{"expression":{"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1302,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1304,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2085:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1303,"name":"getTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2071:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1307,"nodeType":"ExpressionStatement","src":"2061:29:11"},{"expression":{"arguments":[{"id":1309,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2111:10:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"expression":{"id":1312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2133:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2137:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2133:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2144:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2150:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1316,"name":"isSupDe_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2158:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1317,"name":"OperateType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"2168:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperateType_$2864_$","typeString":"type(enum VaultData.OperateType)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2180:7:11","memberName":"DEPOSIT","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"2168:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_OperateType_$2864","typeString":"enum VaultData.OperateType"}},{"id":1319,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2188:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_OperateType_$2864","typeString":"enum VaultData.OperateType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1310,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2122:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2126:6:11","memberName":"encode","nodeType":"MemberAccess","src":"2122:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1321,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2197:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2201:5:11","memberName":"value","nodeType":"MemberAccess","src":"2197:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"_sentToL1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2101:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"2101:106:11"},{"eventCall":{"arguments":[{"id":1326,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2236:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2242:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1328,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2250:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2254:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2250:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1325,"name":"eventDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"2223:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2223:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"EmitStatement","src":"2218:43:11"}]},"functionSelector":"47e7ef24","id":1333,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"951:7:11","nodeType":"FunctionDefinition","overrides":{"id":1154,"nodeType":"OverrideSpecifier","overrides":[],"src":"999:8:11"},"parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"type_","nameLocation":"967:5:11","nodeType":"VariableDeclaration","scope":1333,"src":"959:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"amount_","nameLocation":"982:7:11","nodeType":"VariableDeclaration","scope":1333,"src":"974:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:32:11"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"1016:0:11"},"scope":2856,"src":"942:1326:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[2981],"body":{"id":1398,"nodeType":"Block","src":"2337:406:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2355:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2365:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2355:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c6f73696e67","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2370:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc","typeString":"literal_string \"closing\""},"value":"closing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc","typeString":"literal_string \"closing\""}],"id":1339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2347:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2347:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"2347:33:11"},{"assignments":[1347,null],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"va","nameLocation":"2399:2:11","nodeType":"VariableDeclaration","scope":1398,"src":"2391:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2391:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":1352,"initialValue":{"arguments":[{"expression":{"id":1349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2418:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2422:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2418:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1348,"name":"estimateFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"2406:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address) view returns (uint256,uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2406:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2390:39:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2447:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1355,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"2455:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2447:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2461:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2465:5:11","memberName":"value","nodeType":"MemberAccess","src":"2461:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2447:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e74206e6f206d61746368","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2471:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b9c1d6526fc79efecb5cefdba06d4442123c71d0ed2cef80c90cd0c2c119053","typeString":"literal_string \"amount no match\""},"value":"amount no match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b9c1d6526fc79efecb5cefdba06d4442123c71d0ed2cef80c90cd0c2c119053","typeString":"literal_string \"amount no match\""}],"id":1353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2439:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1362,"nodeType":"ExpressionStatement","src":"2439:50:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"2507:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2513:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:5:11","memberName":"value","nodeType":"MemberAccess","src":"2513:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2507:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f7420656e6f756768206e617469766520666f722066656573","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2523:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de","typeString":"literal_string \"not enough native for fees\""},"value":"not enough native for fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de","typeString":"literal_string \"not enough native for fees\""}],"id":1363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2499:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2499:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"2499:53:11"},{"expression":{"arguments":[{"id":1372,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"2581:10:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"expression":{"id":1375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2603:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2607:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2603:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"2614:7:11","typeDescriptions":{}}},"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2614:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1381,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2625:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2633:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":1383,"name":"OperateType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"2639:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OperateType_$2864_$","typeString":"type(enum VaultData.OperateType)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2651:10:11","memberName":"DEPOSITETH","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"2639:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_OperateType_$2864","typeString":"enum VaultData.OperateType"}},{"arguments":[{"id":1386,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2676:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1385,"name":"getTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2662:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_OperateType_$2864","typeString":"enum VaultData.OperateType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1373,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2592:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2596:6:11","memberName":"encode","nodeType":"MemberAccess","src":"2592:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:90:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1389,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"2683:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1371,"name":"_sentToL1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2571:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2571:115:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"2571:115:11"},{"eventCall":{"arguments":[{"id":1393,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"2717:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2725:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2729:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2725:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1392,"name":"eventDepositETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"2701:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"EmitStatement","src":"2696:40:11"}]},"functionSelector":"5358fbda","id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"2283:10:11","nodeType":"FunctionDefinition","overrides":{"id":1337,"nodeType":"OverrideSpecifier","overrides":[],"src":"2311:8:11"},"parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"amount_","nameLocation":"2302:7:11","nodeType":"VariableDeclaration","scope":1399,"src":"2294:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2294:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2293:17:11"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"2337:0:11"},"scope":2856,"src":"2274:469:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1414,"nodeType":"Block","src":"2808:35:11","statements":[{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1408,"name":"isSupDe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2818:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1410,"indexExpression":{"id":1409,"name":"add_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2826:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2818:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1411,"name":"re","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"2834:2:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2818:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"ExpressionStatement","src":"2818:18:11"}]},"functionSelector":"a304dcf4","id":1415,"implemented":true,"kind":"function","modifiers":[{"id":1406,"kind":"modifierInvocation","modifierName":{"id":1405,"name":"onlyOwner","nameLocations":["2798:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2798:9:11"},"nodeType":"ModifierInvocation","src":"2798:9:11"}],"name":"setSupDe","nameLocation":"2758:8:11","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"add_","nameLocation":"2775:4:11","nodeType":"VariableDeclaration","scope":1415,"src":"2767:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"2767:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"re","nameLocation":"2785:2:11","nodeType":"VariableDeclaration","scope":1415,"src":"2780:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"2780:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2766:22:11"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"2808:0:11"},"scope":2856,"src":"2749:94:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2990],"body":{"id":1543,"nodeType":"Block","src":"2941:781:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1426,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"2959:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2969:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2959:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c6f73696e67","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2974:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc","typeString":"literal_string \"closing\""},"value":"closing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc","typeString":"literal_string \"closing\""}],"id":1425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2951:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"ExpressionStatement","src":"2951:33:11"},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"_ac","nameLocation":"3010:3:11","nodeType":"VariableDeclaration","scope":1543,"src":"2994:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"},"typeName":{"id":1433,"nodeType":"UserDefinedTypeName","pathNode":{"id":1432,"name":"Account","nameLocations":["2994:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2908,"src":"2994:7:11"},"referencedDeclaration":2908,"src":"2994:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"}},"visibility":"internal"}],"id":1439,"initialValue":{"baseExpression":{"id":1435,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"3017:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Account_$2908_storage_$","typeString":"mapping(address => struct VaultData.Account storage ref)"}},"id":1438,"indexExpression":{"expression":{"id":1436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3026:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3030:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3026:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3017:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage","typeString":"struct VaultData.Account storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2994:43:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3055:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3063:6:11","memberName":"length","nodeType":"MemberAccess","src":"3055:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1443,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3073:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:6:11","memberName":"length","nodeType":"MemberAccess","src":"3073:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3055:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172726179206d69736d61746368","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3090:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf","typeString":"literal_string \"Array mismatch\""},"value":"Array mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf","typeString":"literal_string \"Array mismatch\""}],"id":1440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3047:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"3047:60:11"},{"body":{"id":1534,"nodeType":"Block","src":"3160:498:11","statements":[{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"balance","nameLocation":"3182:7:11","nodeType":"VariableDeclaration","scope":1534,"src":"3174:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1468,"initialValue":{"baseExpression":{"expression":{"id":1462,"name":"_ac","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3192:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3196:14:11","memberName":"capitalBalance","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"3192:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1467,"indexExpression":{"baseExpression":{"id":1464,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3211:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1466,"indexExpression":{"id":1465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3221:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3211:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3192:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3174:50:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":1471,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3257:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1473,"indexExpression":{"id":1472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3265:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3257:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3246:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520696e73756666696369656e74","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3268:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72","typeString":"literal_string \"Balance insufficient\""},"value":"Balance insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72","typeString":"literal_string \"Balance insufficient\""}],"id":1469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3238:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"ExpressionStatement","src":"3238:53:11"},{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1478,"name":"_ac","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"3305:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3309:14:11","memberName":"capitalBalance","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"3305:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1484,"indexExpression":{"baseExpression":{"id":1480,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3324:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1482,"indexExpression":{"id":1481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3334:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3324:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3305:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":1485,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3341:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1487,"indexExpression":{"id":1486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3349:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3341:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3305:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"3305:46:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1490,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3381:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1492,"indexExpression":{"id":1491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3391:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3381:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3405:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3397:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"3397:7:11","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3381:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1532,"nodeType":"Block","src":"3485:163:11","statements":[{"assignments":[1511],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"transfer","nameLocation":"3509:8:11","nodeType":"VariableDeclaration","scope":1532,"src":"3503:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"3503:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1524,"initialValue":{"arguments":[{"expression":{"id":1518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3549:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3553:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3549:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1520,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3561:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1522,"indexExpression":{"id":1521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3569:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1513,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3526:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1515,"indexExpression":{"id":1514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3536:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3526:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1512,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3519:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3540:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"3519:29:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3519:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3503:69:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"3598:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3610:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3598:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177206661696c6564","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3615:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","typeString":"literal_string \"Withdraw failed\""},"value":"Withdraw failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","typeString":"literal_string \"Withdraw failed\""}],"id":1525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3590:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3590:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"ExpressionStatement","src":"3590:43:11"}]},"id":1533,"nodeType":"IfStatement","src":"3378:270:11","trueBody":{"id":1509,"nodeType":"Block","src":"3408:73:11","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1504,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3455:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1506,"indexExpression":{"id":1505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3463:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3455:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3434:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3438:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3434:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3426:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"3426:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3426:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3446:8:11","memberName":"transfer","nodeType":"MemberAccess","src":"3426:28:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3426:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"ExpressionStatement","src":"3426:40:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3137:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1454,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3139:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:6:11","memberName":"length","nodeType":"MemberAccess","src":"3139:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3137:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"initializationExpression":{"assignments":[1450],"declarations":[{"constant":false,"id":1450,"mutability":"mutable","name":"i","nameLocation":"3130:1:11","nodeType":"VariableDeclaration","scope":1535,"src":"3122:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3122:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"hexValue":"30","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3134:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3122:13:11"},"loopExpression":{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3155:3:11","subExpression":{"id":1457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ExpressionStatement","src":"3155:3:11"},"nodeType":"ForStatement","src":"3118:540:11"},{"eventCall":{"arguments":[{"id":1537,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3686:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1538,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3696:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3704:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3708:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3704:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1536,"name":"eventWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"3672:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address[] memory,uint256[] memory,address)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"EmitStatement","src":"3667:48:11"}]},"functionSelector":"16e57652","id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2862:8:11","nodeType":"FunctionDefinition","overrides":{"id":1423,"nodeType":"OverrideSpecifier","overrides":[],"src":"2924:8:11"},"parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"amount_","nameLocation":"2888:7:11","nodeType":"VariableDeclaration","scope":1544,"src":"2871:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1417,"nodeType":"ArrayTypeName","src":"2871:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"coinType_","nameLocation":"2913:9:11","nodeType":"VariableDeclaration","scope":1544,"src":"2896:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2896:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1420,"nodeType":"ArrayTypeName","src":"2896:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2870:53:11"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"2941:0:11"},"scope":2856,"src":"2853:869:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1576,"nodeType":"Block","src":"3845:160:11","statements":[{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"hash","nameLocation":"3863:4:11","nodeType":"VariableDeclaration","scope":1576,"src":"3855:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3855:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1558,"initialValue":{"arguments":[{"id":1556,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3882:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1555,"name":"hashMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"3870:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3870:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3855:39:11"},{"assignments":[1560,1562,1564],"declarations":[{"constant":false,"id":1560,"mutability":"mutable","name":"v","nameLocation":"3911:1:11","nodeType":"VariableDeclaration","scope":1576,"src":"3905:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1559,"name":"uint8","nodeType":"ElementaryTypeName","src":"3905:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"r","nameLocation":"3922:1:11","nodeType":"VariableDeclaration","scope":1576,"src":"3914:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3914:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"s","nameLocation":"3933:1:11","nodeType":"VariableDeclaration","scope":1576,"src":"3925:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3925:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1568,"initialValue":{"arguments":[{"id":1566,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"3946:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1565,"name":"recover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"function (bytes memory) pure returns (uint8,bytes32,bytes32)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(uint8,bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3904:52:11"},{"expression":{"arguments":[{"id":1570,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3984:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1571,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"3990:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1572,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"3993:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1573,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3996:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1569,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"3974:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1552,"id":1575,"nodeType":"Return","src":"3966:32:11"}]},"functionSelector":"b273f207","id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"verifyEcrecover","nameLocation":"3737:15:11","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"messageHash","nameLocation":"3762:11:11","nodeType":"VariableDeclaration","scope":1577,"src":"3753:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3753:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"signature","nameLocation":"3788:9:11","nodeType":"VariableDeclaration","scope":1577,"src":"3775:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1547,"name":"bytes","nodeType":"ElementaryTypeName","src":"3775:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3752:46:11"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"recoveredAddress","nameLocation":"3827:16:11","nodeType":"VariableDeclaration","scope":1577,"src":"3819:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"3819:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3818:26:11"},"scope":2856,"src":"3728:277:11","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1613,"nodeType":"Block","src":"4100:640:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1588,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"4152:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4162:6:11","memberName":"length","nodeType":"MemberAccess","src":"4152:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3635","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4172:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"4152:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1597,"nodeType":"IfStatement","src":"4148:94:11","trueBody":{"id":1596,"nodeType":"Block","src":"4176:66:11","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4197:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1592,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4190:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"4190:41:11"}]}},{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"r","nameLocation":"4316:1:11","nodeType":"VariableDeclaration","scope":1613,"src":"4308:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4308:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1600,"nodeType":"VariableDeclarationStatement","src":"4308:9:11"},{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"s","nameLocation":"4335:1:11","nodeType":"VariableDeclaration","scope":1613,"src":"4327:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4327:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1603,"nodeType":"VariableDeclarationStatement","src":"4327:9:11"},{"assignments":[1605],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"v","nameLocation":"4352:1:11","nodeType":"VariableDeclaration","scope":1613,"src":"4346:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1604,"name":"uint8","nodeType":"ElementaryTypeName","src":"4346:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1606,"nodeType":"VariableDeclarationStatement","src":"4346:7:11"},{"AST":{"nodeType":"YulBlock","src":"4552:155:11","statements":[{"nodeType":"YulAssignment","src":"4566:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"4581:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4577:3:11"},"nodeType":"YulFunctionCall","src":"4577:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4571:5:11"},"nodeType":"YulFunctionCall","src":"4571:27:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4566:1:11"}]},{"nodeType":"YulAssignment","src":"4611:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"4626:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4637:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:11"},"nodeType":"YulFunctionCall","src":"4622:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4616:5:11"},"nodeType":"YulFunctionCall","src":"4616:27:11"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"4611:1:11"}]},{"nodeType":"YulAssignment","src":"4656:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4666:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"4679:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4690:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4675:3:11"},"nodeType":"YulFunctionCall","src":"4675:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4669:5:11"},"nodeType":"YulFunctionCall","src":"4669:27:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"4661:4:11"},"nodeType":"YulFunctionCall","src":"4661:36:11"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"4656:1:11"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1599,"isOffset":false,"isSlot":false,"src":"4566:1:11","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"4611:1:11","valueSize":1},{"declaration":1579,"isOffset":false,"isSlot":false,"src":"4581:9:11","valueSize":1},{"declaration":1579,"isOffset":false,"isSlot":false,"src":"4626:9:11","valueSize":1},{"declaration":1579,"isOffset":false,"isSlot":false,"src":"4679:9:11","valueSize":1},{"declaration":1605,"isOffset":false,"isSlot":false,"src":"4656:1:11","valueSize":1}],"id":1607,"nodeType":"InlineAssembly","src":"4543:164:11"},{"expression":{"components":[{"id":1608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"4725:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"4728:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1610,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"4731:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4724:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$","typeString":"tuple(uint8,bytes32,bytes32)"}},"functionReturnParameters":1587,"id":1612,"nodeType":"Return","src":"4717:16:11"}]},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4020:7:11","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"signature","nameLocation":"4041:9:11","nodeType":"VariableDeclaration","scope":1614,"src":"4028:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1578,"name":"bytes","nodeType":"ElementaryTypeName","src":"4028:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4027:24:11"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"4075:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1581,"name":"uint8","nodeType":"ElementaryTypeName","src":"4075:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"4082:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4082:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"4091:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4091:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4074:25:11"},"scope":2856,"src":"4011:729:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"4807:96:11","statements":[{"assignments":[1623],"declarations":[{"constant":false,"id":1623,"mutability":"mutable","name":"account","nameLocation":"4834:7:11","nodeType":"VariableDeclaration","scope":1632,"src":"4817:24:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"},"typeName":{"id":1622,"nodeType":"UserDefinedTypeName","pathNode":{"id":1621,"name":"Account","nameLocations":["4817:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2908,"src":"4817:7:11"},"referencedDeclaration":2908,"src":"4817:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"}},"visibility":"internal"}],"id":1627,"initialValue":{"baseExpression":{"id":1624,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"4844:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Account_$2908_storage_$","typeString":"mapping(address => struct VaultData.Account storage ref)"}},"id":1626,"indexExpression":{"id":1625,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"4853:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4844:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage","typeString":"struct VaultData.Account storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4817:42:11"},{"expression":{"components":[{"expression":{"id":1628,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4878:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4886:9:11","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":2907,"src":"4878:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4877:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1620,"id":1631,"nodeType":"Return","src":"4870:26:11"}]},"functionSelector":"0707a0f0","id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"getNativeFee","nameLocation":"4755:12:11","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"user_","nameLocation":"4776:5:11","nodeType":"VariableDeclaration","scope":1633,"src":"4768:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"4768:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4767:15:11"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"4802:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint","nodeType":"ElementaryTypeName","src":"4802:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4801:6:11"},"scope":2856,"src":"4746:157:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1644,"nodeType":"Block","src":"4977:46:11","statements":[{"expression":{"baseExpression":{"id":1640,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4995:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1642,"indexExpression":{"id":1641,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"5010:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4995:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1639,"id":1643,"nodeType":"Return","src":"4987:29:11"}]},"functionSelector":"7aaa3470","id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"getInterest","nameLocation":"4919:11:11","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"user_","nameLocation":"4939:5:11","nodeType":"VariableDeclaration","scope":1645,"src":"4931:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"4931:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4930:15:11"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"4968:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4968:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4967:9:11"},"scope":2856,"src":"4909:114:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1670,"nodeType":"Block","src":"5097:133:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5110:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5117:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5110:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1668,"nodeType":"Block","src":"5175:49:11","statements":[{"expression":{"arguments":[{"id":1664,"name":"FEE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"5200:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1665,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5209:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1663,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5189:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5189:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"5189:24:11"}]},"id":1669,"nodeType":"IfStatement","src":"5107:117:11","trueBody":{"id":1662,"nodeType":"Block","src":"5120:51:11","statements":[{"expression":{"arguments":[{"id":1658,"name":"NODE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"5146:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1659,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5156:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1657,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5135:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5135:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"5135:25:11"}]}}]},"functionSelector":"e52249e3","id":1671,"implemented":true,"kind":"function","modifiers":[{"id":1652,"kind":"modifierInvocation","modifierName":{"id":1651,"name":"onlyOwner","nameLocations":["5088:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5088:9:11"},"nodeType":"ModifierInvocation","src":"5088:9:11"}],"name":"setWhilLlist","nameLocation":"5038:12:11","nodeType":"FunctionDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"add","nameLocation":"5060:3:11","nodeType":"VariableDeclaration","scope":1671,"src":"5051:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"5051:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"type_","nameLocation":"5072:5:11","nodeType":"VariableDeclaration","scope":1671,"src":"5064:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5064:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5050:28:11"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"5097:0:11"},"scope":2856,"src":"5029:201:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1718,"nodeType":"Block","src":"5394:301:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"5412:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5422:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5412:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636c6f73696e67","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5427:9:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc","typeString":"literal_string \"closing\""},"value":"closing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc","typeString":"literal_string \"closing\""}],"id":1678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5404:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"ExpressionStatement","src":"5404:33:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1686,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"5455:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1689,"indexExpression":{"expression":{"id":1687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5470:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5474:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5470:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5455:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1690,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5485:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5455:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742073756666696369656e742066756e6473","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5493:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db","typeString":"literal_string \"Not sufficient funds\""},"value":"Not sufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db","typeString":"literal_string \"Not sufficient funds\""}],"id":1685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5447:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"ExpressionStatement","src":"5447:69:11"},{"expression":{"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1695,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"5526:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1698,"indexExpression":{"expression":{"id":1696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5541:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5545:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5541:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5526:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1699,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5556:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5526:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1701,"nodeType":"ExpressionStatement","src":"5526:37:11"},{"expression":{"arguments":[{"expression":{"id":1706,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5600:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5604:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5600:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1703,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5580:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1702,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"5573:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5573:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5591:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"5573:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5573:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"ExpressionStatement","src":"5573:47:11"},{"eventCall":{"arguments":[{"expression":{"id":1712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5657:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5661:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5657:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1714,"name":"coinType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5669:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1715,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"5680:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"eventWithdrawInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"5635:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5635:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1717,"nodeType":"EmitStatement","src":"5630:58:11"}]},"functionSelector":"1210aac2","id":1719,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawInterest","nameLocation":"5335:16:11","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"amount_","nameLocation":"5360:7:11","nodeType":"VariableDeclaration","scope":1719,"src":"5352:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"5352:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"coinType_","nameLocation":"5376:9:11","nodeType":"VariableDeclaration","scope":1719,"src":"5368:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"5368:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5351:35:11"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"5394:0:11"},"scope":2856,"src":"5326:369:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1854,"nodeType":"Block","src":"5821:762:11","statements":[{"assignments":[1738],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"account","nameLocation":"5847:7:11","nodeType":"VariableDeclaration","scope":1854,"src":"5831:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"},"typeName":{"id":1737,"nodeType":"UserDefinedTypeName","pathNode":{"id":1736,"name":"Account","nameLocations":["5831:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2908,"src":"5831:7:11"},"referencedDeclaration":2908,"src":"5831:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"}},"visibility":"internal"}],"id":1742,"initialValue":{"baseExpression":{"id":1739,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"5857:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Account_$2908_storage_$","typeString":"mapping(address => struct VaultData.Account storage ref)"}},"id":1741,"indexExpression":{"id":1740,"name":"address_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5866:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5857:18:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage","typeString":"struct VaultData.Account storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5831:44:11"},{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"count","nameLocation":"5894:5:11","nodeType":"VariableDeclaration","scope":1854,"src":"5886:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"hexValue":"30","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5886:17:11"},{"body":{"id":1771,"nodeType":"Block","src":"5960:110:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"5978:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5986:14:11","memberName":"capitalBalance","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"5978:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1763,"indexExpression":{"baseExpression":{"id":1760,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6001:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1762,"indexExpression":{"id":1761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6010:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6001:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5978:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5978:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1770,"nodeType":"IfStatement","src":"5974:86:11","trueBody":{"id":1769,"nodeType":"Block","src":"6020:40:11","statements":[{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6038:7:11","subExpression":{"id":1766,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6038:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"6038:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5934:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1752,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"5938:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5947:6:11","memberName":"length","nodeType":"MemberAccess","src":"5938:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5934:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"initializationExpression":{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"i","nameLocation":"5927:1:11","nodeType":"VariableDeclaration","scope":1772,"src":"5919:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"5919:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1750,"initialValue":{"hexValue":"30","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5931:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5919:13:11"},"loopExpression":{"expression":{"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5955:3:11","subExpression":{"id":1755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5955:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1757,"nodeType":"ExpressionStatement","src":"5955:3:11"},"nodeType":"ForStatement","src":"5914:156:11"},{"assignments":[1777],"declarations":[{"constant":false,"id":1777,"mutability":"mutable","name":"coin","nameLocation":"6097:4:11","nodeType":"VariableDeclaration","scope":1854,"src":"6080:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"6080:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1776,"nodeType":"ArrayTypeName","src":"6080:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1783,"initialValue":{"arguments":[{"id":1781,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6118:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6104:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1779,"nodeType":"ArrayTypeName","src":"6108:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6104:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6080:44:11"},{"assignments":[1788],"declarations":[{"constant":false,"id":1788,"mutability":"mutable","name":"amount","nameLocation":"6151:6:11","nodeType":"VariableDeclaration","scope":1854,"src":"6134:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"6134:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1787,"nodeType":"ArrayTypeName","src":"6134:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[{"id":1792,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6174:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6160:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ArrayTypeName","src":"6164:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6134:46:11"},{"assignments":[1796],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"index","nameLocation":"6200:5:11","nodeType":"VariableDeclaration","scope":1854,"src":"6192:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"6192:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"hexValue":"30","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6192:17:11"},{"body":{"id":1842,"nodeType":"Block","src":"6265:222:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1810,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6283:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6291:14:11","memberName":"capitalBalance","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"6283:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1815,"indexExpression":{"baseExpression":{"id":1812,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6306:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1814,"indexExpression":{"id":1813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6315:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6306:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6283:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6322:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6283:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"6279:198:11","trueBody":{"id":1840,"nodeType":"Block","src":"6325:152:11","statements":[{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1818,"name":"coin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6343:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1820,"indexExpression":{"id":1819,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"6348:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6343:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1821,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6357:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1823,"indexExpression":{"id":1822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6366:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6357:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6343:25:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1825,"nodeType":"ExpressionStatement","src":"6343:25:11"},{"expression":{"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1826,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6386:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1828,"indexExpression":{"id":1827,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"6393:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6386:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1829,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6402:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6410:14:11","memberName":"capitalBalance","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"6402:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1834,"indexExpression":{"baseExpression":{"id":1831,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6425:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1833,"indexExpression":{"id":1832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6434:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6425:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6402:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6386:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"nodeType":"ExpressionStatement","src":"6386:51:11"},{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6455:7:11","subExpression":{"id":1837,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"6455:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1839,"nodeType":"ExpressionStatement","src":"6455:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6239:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1804,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"6243:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6252:6:11","memberName":"length","nodeType":"MemberAccess","src":"6243:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6239:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1843,"initializationExpression":{"assignments":[1800],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"i","nameLocation":"6232:1:11","nodeType":"VariableDeclaration","scope":1843,"src":"6224:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1802,"initialValue":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6236:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6224:13:11"},"loopExpression":{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6260:3:11","subExpression":{"id":1807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"6260:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"6260:3:11"},"nodeType":"ForStatement","src":"6219:268:11"},{"expression":{"components":[{"expression":{"id":1844,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6504:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6512:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2889,"src":"6504:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1846,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6517:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6525:17:11","memberName":"capitalMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"6517:25:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1848,"name":"coin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"6543:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1849,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"6548:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1850,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6555:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":1851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6563:12:11","memberName":"capitalNonce","nodeType":"MemberAccess","referencedDeclaration":2897,"src":"6555:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6503:73:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(address,bytes32,address[] memory,uint256[] memory,uint256)"}},"functionReturnParameters":1735,"id":1853,"nodeType":"Return","src":"6496:80:11"}]},"functionSelector":"f8b2cb4f","id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"getBalance","nameLocation":"5710:10:11","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"address_","nameLocation":"5729:8:11","nodeType":"VariableDeclaration","scope":1855,"src":"5721:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"5721:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5720:18:11"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"5760:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"5760:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"5768:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5768:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"5776:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"5776:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1728,"nodeType":"ArrayTypeName","src":"5776:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"5794:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1731,"nodeType":"ArrayTypeName","src":"5794:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"5812:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5812:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5759:61:11"},"scope":2856,"src":"5701:882:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1872,"nodeType":"Block","src":"6681:86:11","statements":[{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"6691:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1867,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6724:7:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1868,"name":"gasForDestinationLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"6733:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1865,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6707:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6711:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"6707:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6707:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6691:69:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1871,"nodeType":"ExpressionStatement","src":"6691:69:11"}]},"functionSelector":"6d1daa28","id":1873,"implemented":true,"kind":"function","modifiers":[{"id":1862,"kind":"modifierInvocation","modifierName":{"id":1861,"name":"onlyOwner","nameLocations":["6664:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6664:9:11"},"nodeType":"ModifierInvocation","src":"6664:9:11"}],"name":"setAdapterParams","nameLocation":"6598:16:11","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"version","nameLocation":"6622:7:11","nodeType":"VariableDeclaration","scope":1873,"src":"6615:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1856,"name":"uint16","nodeType":"ElementaryTypeName","src":"6615:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"gasForDestinationLzReceive","nameLocation":"6636:26:11","nodeType":"VariableDeclaration","scope":1873,"src":"6630:32:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint","nodeType":"ElementaryTypeName","src":"6630:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6614:49:11"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[],"src":"6681:0:11"},"scope":2856,"src":"6589:178:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1899,"nodeType":"Block","src":"6915:268:11","statements":[{"assignments":[1883,null,1885,null,null,null,null,null],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"currentBalance","nameLocation":"6989:14:11","nodeType":"VariableDeclaration","scope":1899,"src":"6981:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"6981:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,{"constant":false,"id":1885,"mutability":"mutable","name":"currentBorrowBalance","nameLocation":"7014:20:11","nodeType":"VariableDeclaration","scope":1899,"src":"7006:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"7006:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null,null],"id":1890,"initialValue":{"arguments":[{"id":1887,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"7063:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1888,"name":"fromAdd_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7070:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1886,"name":"getUserReserveData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7044:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint40_$","typeString":"function (address,address) view returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint40)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint40_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint40)"}},"nodeType":"VariableDeclarationStatement","src":"6980:99:11"},{"assignments":[1892],"declarations":[{"constant":false,"id":1892,"mutability":"mutable","name":"usdtBalance","nameLocation":"7097:11:11","nodeType":"VariableDeclaration","scope":1899,"src":"7089:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1896,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"7111:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1894,"name":"currentBorrowBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"7128:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7089:59:11"},{"expression":{"id":1897,"name":"usdtBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"7165:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1881,"id":1898,"nodeType":"Return","src":"7158:18:11"}]},"functionSelector":"806b834d","id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"getBalanceFromAAVE","nameLocation":"6834:18:11","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"type_","nameLocation":"6861:5:11","nodeType":"VariableDeclaration","scope":1900,"src":"6853:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"6853:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"fromAdd_","nameLocation":"6875:8:11","nodeType":"VariableDeclaration","scope":1900,"src":"6867:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"6867:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6852:32:11"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"6906:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6906:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6905:9:11"},"scope":2856,"src":"6825:358:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2010,"nodeType":"Block","src":"7595:868:11","statements":[{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"reserve","nameLocation":"7634:7:11","nodeType":"VariableDeclaration","scope":2010,"src":"7605:36:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":1926,"nodeType":"UserDefinedTypeName","pathNode":{"id":1925,"name":"DataTypes.ReserveData","nameLocations":["7605:9:11","7615:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":348,"src":"7605:21:11"},"referencedDeclaration":348,"src":"7605:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[{"id":1932,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"7686:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1929,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"7665:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1928,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7652:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$738_$","typeString":"type(contract ILendingPool)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$738","typeString":"contract ILendingPool"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7671:14:11","memberName":"getReserveData","nodeType":"MemberAccess","referencedDeclaration":700,"src":"7652:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$348_memory_ptr_$","typeString":"function (address) view external returns (struct DataTypes.ReserveData memory)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"nodeType":"VariableDeclarationStatement","src":"7605:87:11"},{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1935,"name":"currentATokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"7702:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1941,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"7773:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1937,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"7740:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7748:13:11","memberName":"aTokenAddress","nodeType":"MemberAccess","referencedDeclaration":339,"src":"7740:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1936,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7725:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$298_$","typeString":"type(contract IERC20Metadata)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$298","typeString":"contract IERC20Metadata"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7763:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"7725:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7702:76:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"7702:76:11"},{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"currentVariableDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"7788:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1951,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"7869:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1947,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"7825:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7833:24:11","memberName":"variableDebtTokenAddress","nodeType":"MemberAccess","referencedDeclaration":343,"src":"7825:32:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1946,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7810:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$298_$","typeString":"type(contract IERC20Metadata)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7810:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$298","typeString":"contract IERC20Metadata"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7859:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"7810:58:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7810:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7788:86:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"7788:86:11"},{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1955,"name":"currentStableDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"7884:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1961,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"7961:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1957,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"7919:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7927:22:11","memberName":"stableDebtTokenAddress","nodeType":"MemberAccess","referencedDeclaration":341,"src":"7919:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7904:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$298_$","typeString":"type(contract IERC20Metadata)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7904:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$298","typeString":"contract IERC20Metadata"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7951:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"7904:56:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7904:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7884:82:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1964,"nodeType":"ExpressionStatement","src":"7884:82:11"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"principalStableDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"7976:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1971,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8066:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1967,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8015:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8023:22:11","memberName":"stableDebtTokenAddress","nodeType":"MemberAccess","referencedDeclaration":341,"src":"8015:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1966,"name":"IStableDebtToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"7998:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStableDebtToken_$1032_$","typeString":"type(contract IStableDebtToken)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStableDebtToken_$1032","typeString":"contract IStableDebtToken"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8047:18:11","memberName":"principalBalanceOf","nodeType":"MemberAccess","referencedDeclaration":1031,"src":"7998:67:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7976:95:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"7976:95:11"},{"expression":{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1975,"name":"scaledVariableDebt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"8081:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1981,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8171:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1977,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8121:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8129:24:11","memberName":"variableDebtTokenAddress","nodeType":"MemberAccess","referencedDeclaration":343,"src":"8121:32:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1976,"name":"IVariableDebtToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"8102:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVariableDebtToken_$1084_$","typeString":"type(contract IVariableDebtToken)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8102:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVariableDebtToken_$1084","typeString":"contract IVariableDebtToken"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8155:15:11","memberName":"scaledBalanceOf","nodeType":"MemberAccess","referencedDeclaration":899,"src":"8102:68:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8102:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8081:95:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1984,"nodeType":"ExpressionStatement","src":"8081:95:11"},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1985,"name":"liquidityRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"8186:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1986,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8202:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8210:20:11","memberName":"currentLiquidityRate","nodeType":"MemberAccess","referencedDeclaration":331,"src":"8202:28:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8186:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"8186:44:11"},{"expression":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"stableBorrowRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"8240:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1996,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8326:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":1992,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8276:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":1993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:22:11","memberName":"stableDebtTokenAddress","nodeType":"MemberAccess","referencedDeclaration":341,"src":"8276:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1991,"name":"IStableDebtToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8259:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStableDebtToken_$1032_$","typeString":"type(contract IStableDebtToken)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8259:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStableDebtToken_$1032","typeString":"contract IStableDebtToken"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8308:17:11","memberName":"getUserStableRate","nodeType":"MemberAccess","referencedDeclaration":989,"src":"8259:66:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8259:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8240:91:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1999,"nodeType":"ExpressionStatement","src":"8240:91:11"},{"expression":{"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2000,"name":"stableRateLastUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"8341:21:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2006,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8442:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":2002,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"8382:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8390:22:11","memberName":"stableDebtTokenAddress","nodeType":"MemberAccess","referencedDeclaration":341,"src":"8382:30:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2001,"name":"IStableDebtToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8365:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStableDebtToken_$1032_$","typeString":"type(contract IStableDebtToken)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8365:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStableDebtToken_$1032","typeString":"contract IStableDebtToken"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8414:18:11","memberName":"getUserLastUpdated","nodeType":"MemberAccess","referencedDeclaration":997,"src":"8365:67:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint40_$","typeString":"function (address) view external returns (uint40)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8365:91:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"8341:115:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":2009,"nodeType":"ExpressionStatement","src":"8341:115:11"}]},"functionSelector":"28dd2d01","id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"getUserReserveData","nameLocation":"7198:18:11","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"asset","nameLocation":"7225:5:11","nodeType":"VariableDeclaration","scope":2011,"src":"7217:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"7217:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1904,"mutability":"mutable","name":"user","nameLocation":"7240:4:11","nodeType":"VariableDeclaration","scope":2011,"src":"7232:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"7232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7216:29:11"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"currentATokenBalance","nameLocation":"7312:20:11","nodeType":"VariableDeclaration","scope":2011,"src":"7304:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"7304:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"currentStableDebt","nameLocation":"7350:17:11","nodeType":"VariableDeclaration","scope":2011,"src":"7342:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"7342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"currentVariableDebt","nameLocation":"7385:19:11","nodeType":"VariableDeclaration","scope":2011,"src":"7377:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"7377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"principalStableDebt","nameLocation":"7422:19:11","nodeType":"VariableDeclaration","scope":2011,"src":"7414:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"7414:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"scaledVariableDebt","nameLocation":"7459:18:11","nodeType":"VariableDeclaration","scope":2011,"src":"7451:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"7451:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"7495:16:11","nodeType":"VariableDeclaration","scope":2011,"src":"7487:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"7487:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"liquidityRate","nameLocation":"7529:13:11","nodeType":"VariableDeclaration","scope":2011,"src":"7521:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"7521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"stableRateLastUpdated","nameLocation":"7559:21:11","nodeType":"VariableDeclaration","scope":2011,"src":"7552:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1920,"name":"uint40","nodeType":"ElementaryTypeName","src":"7552:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7294:296:11"},"scope":2856,"src":"7189:1274:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2026,"nodeType":"Block","src":"8543:139:11","statements":[{"expression":{"expression":{"arguments":[{"id":2022,"name":"add_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"8656:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2019,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"8635:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2018,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"8622:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$738_$","typeString":"type(contract ILendingPool)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8622:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$738","typeString":"contract ILendingPool"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8641:14:11","memberName":"getReserveData","nodeType":"MemberAccess","referencedDeclaration":700,"src":"8622:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$348_memory_ptr_$","typeString":"function (address) view external returns (struct DataTypes.ReserveData memory)"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8622:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8662:13:11","memberName":"aTokenAddress","nodeType":"MemberAccess","referencedDeclaration":339,"src":"8622:53:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2017,"id":2025,"nodeType":"Return","src":"8615:60:11"}]},"functionSelector":"021b9359","id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"getATokenWithToken","nameLocation":"8482:18:11","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"add_","nameLocation":"8509:4:11","nodeType":"VariableDeclaration","scope":2027,"src":"8501:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"8501:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8500:14:11"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"8535:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8534:9:11"},"scope":2856,"src":"8473:209:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2054,"nodeType":"Block","src":"8769:219:11","statements":[{"assignments":[2035],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"bytesOracle","nameLocation":"8792:11:11","nodeType":"VariableDeclaration","scope":2054,"src":"8779:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2034,"name":"bytes","nodeType":"ElementaryTypeName","src":"8779:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2052,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2042,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8861:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8853:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"8853:7:11","typeDescriptions":{}}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8853:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2038,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"8827:10:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8838:14:11","memberName":"getSendVersion","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"8827:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint16_$","typeString":"function (address) view external returns (uint16)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8827:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2045,"name":"remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8869:13:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":2048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8892:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:11","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8884:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"36","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8899:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"}],"expression":{"id":2036,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"8806:10:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8817:9:11","memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":3943,"src":"8806:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8806:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8779:122:11"},{"AST":{"nodeType":"YulBlock","src":"8920:62:11","statements":[{"nodeType":"YulAssignment","src":"8934:38:11","value":{"arguments":[{"arguments":[{"name":"bytesOracle","nodeType":"YulIdentifier","src":"8955:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"8968:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8951:3:11"},"nodeType":"YulFunctionCall","src":"8951:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8945:5:11"},"nodeType":"YulFunctionCall","src":"8945:27:11"},"variableNames":[{"name":"_oracle","nodeType":"YulIdentifier","src":"8934:7:11"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2032,"isOffset":false,"isSlot":false,"src":"8934:7:11","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"8955:11:11","valueSize":1}],"id":2053,"nodeType":"InlineAssembly","src":"8911:71:11"}]},"functionSelector":"e2f28824","id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"getOracle","nameLocation":"8697:9:11","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"remoteChainId","nameLocation":"8714:13:11","nodeType":"VariableDeclaration","scope":2055,"src":"8707:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2028,"name":"uint16","nodeType":"ElementaryTypeName","src":"8707:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8706:22:11"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"_oracle","nameLocation":"8760:7:11","nodeType":"VariableDeclaration","scope":2055,"src":"8752:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"8752:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8751:17:11"},"scope":2856,"src":"8688:300:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2078,"nodeType":"Block","src":"9073:89:11","statements":[{"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2062,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"9083:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2065,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"9105:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9111:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9114:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"3130303030","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9116:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9122:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"3130","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9124:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"arguments":[{"id":2072,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"9141:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2071,"name":"getTotalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"9127:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31303030303030","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9147:7:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"expression":{"id":2063,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9094:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9098:6:11","memberName":"encode","nodeType":"MemberAccess","src":"9094:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9094:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"9083:72:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2077,"nodeType":"ExpressionStatement","src":"9083:72:11"}]},"functionSelector":"504f1671","id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"getSize","nameLocation":"9007:7:11","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"user_","nameLocation":"9023:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"9015:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"9015:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9014:15:11"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"encoded","nameLocation":"9064:7:11","nodeType":"VariableDeclaration","scope":2079,"src":"9051:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2059,"name":"bytes","nodeType":"ElementaryTypeName","src":"9051:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9049:24:11"},"scope":2856,"src":"8998:164:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2110,"nodeType":"Block","src":"9257:159:11","statements":[{"assignments":[2089,2091],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"native","nameLocation":"9273:6:11","nodeType":"VariableDeclaration","scope":2110,"src":"9268:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint","nodeType":"ElementaryTypeName","src":"9268:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"zro","nameLocation":"9286:3:11","nodeType":"VariableDeclaration","scope":2110,"src":"9281:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint","nodeType":"ElementaryTypeName","src":"9281:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2105,"initialValue":{"arguments":[{"id":2094,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9316:10:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":2097,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9336:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9328:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"9328:7:11","typeDescriptions":{}}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9328:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2100,"name":"user_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"9351:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2099,"name":"getSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"9343:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) view returns (bytes memory)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9343:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9359:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2103,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"9366:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"expression":{"id":2092,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"9292:10:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9303:12:11","memberName":"estimateFees","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"9292:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint16,address,bytes memory,bool,bytes memory) view external returns (uint256,uint256)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9292:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9267:113:11"},{"expression":{"components":[{"id":2106,"name":"native","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"9398:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2107,"name":"zro","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"9405:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9397:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2087,"id":2109,"nodeType":"Return","src":"9390:19:11"}]},"functionSelector":"57463d35","id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"estimateFee","nameLocation":"9181:11:11","nodeType":"FunctionDefinition","parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"user_","nameLocation":"9201:5:11","nodeType":"VariableDeclaration","scope":2111,"src":"9193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9192:15:11"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"nativeFee","nameLocation":"9233:9:11","nodeType":"VariableDeclaration","scope":2111,"src":"9228:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint","nodeType":"ElementaryTypeName","src":"9228:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"zroFee","nameLocation":"9249:6:11","nodeType":"VariableDeclaration","scope":2111,"src":"9244:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint","nodeType":"ElementaryTypeName","src":"9244:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9227:29:11"},"scope":2856,"src":"9172:244:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2122,"nodeType":"Block","src":"9467:29:11","statements":[{"expression":{"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2118,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"9477:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2119,"name":"re_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"9486:3:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9477:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2121,"nodeType":"ExpressionStatement","src":"9477:12:11"}]},"functionSelector":"085a10cf","id":2123,"implemented":true,"kind":"function","modifiers":[{"id":2116,"kind":"modifierInvocation","modifierName":{"id":2115,"name":"onlyOwner","nameLocations":["9451:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"9451:9:11"},"nodeType":"ModifierInvocation","src":"9451:9:11"}],"name":"setIsOpen","nameLocation":"9432:9:11","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"re_","nameLocation":"9447:3:11","nodeType":"VariableDeclaration","scope":2123,"src":"9442:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2112,"name":"bool","nodeType":"ElementaryTypeName","src":"9442:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9441:10:11"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[],"src":"9467:0:11"},"scope":2856,"src":"9423:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2148,"nodeType":"Block","src":"9581:101:11","statements":[{"expression":{"arguments":[{"id":2133,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"9600:11:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2134,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"9613:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":2137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9628:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9632:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9628:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9620:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"9620:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9620:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"hexValue":"307830","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:3:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9641:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"9641:7:11","typeDescriptions":{}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2144,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"9655:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"9669:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"9592:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint16,bytes memory,address payable,address,bytes memory,uint256)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9592:83:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2147,"nodeType":"ExpressionStatement","src":"9592:83:11"}]},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"_sentToL1","nameLocation":"9511:9:11","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"_dstChainId","nameLocation":"9528:11:11","nodeType":"VariableDeclaration","scope":2149,"src":"9521:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2124,"name":"uint16","nodeType":"ElementaryTypeName","src":"9521:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"_data","nameLocation":"9553:5:11","nodeType":"VariableDeclaration","scope":2149,"src":"9540:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"9540:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"value","nameLocation":"9567:5:11","nodeType":"VariableDeclaration","scope":2149,"src":"9559:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"9559:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9520:53:11"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[],"src":"9581:0:11"},"scope":2856,"src":"9502:180:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2193,"nodeType":"Block","src":"9750:212:11","statements":[{"expression":{"arguments":[{"id":2160,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9782:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2161,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"9787:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2157,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"9767:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2156,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9760:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9760:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9774:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":260,"src":"9760:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9760:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"ExpressionStatement","src":"9760:35:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2171,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9845:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9837:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"9837:7:11","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9837:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2173,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9851:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2166,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"9820:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2165,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9813:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9827:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":250,"src":"9813:23:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2175,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"9860:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9813:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617574686f72697a6174696f6e","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9868:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306","typeString":"literal_string \"No authorization\""},"value":"No authorization"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306","typeString":"literal_string \"No authorization\""}],"id":2164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9805:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"9805:82:11"},{"expression":{"arguments":[{"id":2184,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"9924:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2185,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"9931:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2188,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9947:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9939:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"9939:7:11","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9939:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9953:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[{"id":2181,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"9910:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2180,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"9897:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$738_$","typeString":"type(contract ILendingPool)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9897:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$738","typeString":"contract ILendingPool"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9916:7:11","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":513,"src":"9897:26:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$","typeString":"function (address,uint256,address,uint16) external"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9897:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"9897:58:11"}]},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"_depositToAAVE","nameLocation":"9697:14:11","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"type_","nameLocation":"9720:5:11","nodeType":"VariableDeclaration","scope":2194,"src":"9712:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"9712:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"amount_","nameLocation":"9734:7:11","nodeType":"VariableDeclaration","scope":2194,"src":"9726:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"9726:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9711:31:11"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[],"src":"9750:0:11"},"scope":2856,"src":"9688:274:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2214,"nodeType":"Block","src":"10068:77:11","statements":[{"expression":{"arguments":[{"id":2209,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10113:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2210,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"10120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2211,"name":"receiver_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"10128:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2206,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"10098:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2205,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"10085:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$738_$","typeString":"type(contract ILendingPool)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$738","typeString":"contract ILendingPool"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10104:8:11","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":525,"src":"10085:27:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) external returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2204,"id":2213,"nodeType":"Return","src":"10078:60:11"}]},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"_withdrawFromAAVE","nameLocation":"9977:17:11","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"type_","nameLocation":"10003:5:11","nodeType":"VariableDeclaration","scope":2215,"src":"9995:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"9995:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"amount_","nameLocation":"10017:7:11","nodeType":"VariableDeclaration","scope":2215,"src":"10009:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10009:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"receiver_","nameLocation":"10033:9:11","nodeType":"VariableDeclaration","scope":2215,"src":"10025:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2199,"name":"address","nodeType":"ElementaryTypeName","src":"10025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9994:49:11"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"10060:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"10060:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10059:9:11"},"scope":2856,"src":"9968:177:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2227,"nodeType":"Block","src":"10219:42:11","statements":[{"expression":{"arguments":[{"id":2223,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"10240:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2224,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"10246:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2222,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"10229:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10229:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"10229:25:11"}]},"id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"10160:10:11","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"role","nameLocation":"10179:4:11","nodeType":"VariableDeclaration","scope":2228,"src":"10171:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10171:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"account","nameLocation":"10193:7:11","nodeType":"VariableDeclaration","scope":2228,"src":"10185:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"10185:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10170:31:11"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[],"src":"10219:0:11"},"scope":2856,"src":"10151:110:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"10335:118:11","statements":[{"condition":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10349:23:11","subExpression":{"arguments":[{"id":2236,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"10358:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10364:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2235,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"10350:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10350:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"nodeType":"IfStatement","src":"10345:102:11","trueBody":{"id":2249,"nodeType":"Block","src":"10374:73:11","statements":[{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":2240,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"10388:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$2949_storage_$","typeString":"mapping(bytes32 => struct VaultData.RoleData storage ref)"}},"id":2242,"indexExpression":{"id":2241,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"10395:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10388:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$2949_storage","typeString":"struct VaultData.RoleData storage ref"}},"id":2243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10401:7:11","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"10388:20:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2245,"indexExpression":{"id":2244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10409:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10388:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10420:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10388:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2248,"nodeType":"ExpressionStatement","src":"10388:36:11"}]}}]},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"10276:10:11","nodeType":"FunctionDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"role","nameLocation":"10295:4:11","nodeType":"VariableDeclaration","scope":2252,"src":"10287:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10287:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"account","nameLocation":"10309:7:11","nodeType":"VariableDeclaration","scope":2252,"src":"10301:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"10301:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10286:31:11"},"returnParameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"10335:0:11"},"scope":2856,"src":"10267:186:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"10536:105:11","statements":[{"body":{"id":2281,"nodeType":"Block","src":"10584:51:11","statements":[{"expression":{"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2273,"name":"deCoinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"10598:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2277,"indexExpression":{"baseExpression":{"id":2274,"name":"coin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"10609:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2276,"indexExpression":{"id":2275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"10615:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10609:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10598:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2278,"name":"re_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"10621:3:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10598:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2280,"nodeType":"ExpressionStatement","src":"10598:26:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"10564:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2267,"name":"coin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"10566:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10572:6:11","memberName":"length","nodeType":"MemberAccess","src":"10566:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10564:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"initializationExpression":{"assignments":[2263],"declarations":[{"constant":false,"id":2263,"mutability":"mutable","name":"i","nameLocation":"10558:1:11","nodeType":"VariableDeclaration","scope":2282,"src":"10550:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2265,"initialValue":{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10561:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10550:12:11"},"loopExpression":{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10580:3:11","subExpression":{"id":2270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"10580:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2272,"nodeType":"ExpressionStatement","src":"10580:3:11"},"nodeType":"ForStatement","src":"10546:89:11"}]},"functionSelector":"a4ca74db","id":2284,"implemented":true,"kind":"function","modifiers":[{"id":2260,"kind":"modifierInvocation","modifierName":{"id":2259,"name":"onlyOwner","nameLocations":["10525:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10525:9:11"},"nodeType":"ModifierInvocation","src":"10525:9:11"}],"name":"setDeCoinList","nameLocation":"10468:13:11","nodeType":"FunctionDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"coin_","nameLocation":"10500:5:11","nodeType":"VariableDeclaration","scope":2284,"src":"10482:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"10482:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2254,"nodeType":"ArrayTypeName","src":"10482:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"re_","nameLocation":"10511:3:11","nodeType":"VariableDeclaration","scope":2284,"src":"10506:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2256,"name":"bool","nodeType":"ElementaryTypeName","src":"10506:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10481:34:11"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[],"src":"10536:0:11"},"scope":2856,"src":"10459:182:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2300,"nodeType":"Block","src":"10723:53:11","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":2293,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"10740:6:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$2949_storage_$","typeString":"mapping(bytes32 => struct VaultData.RoleData storage ref)"}},"id":2295,"indexExpression":{"id":2294,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10747:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10740:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$2949_storage","typeString":"struct VaultData.RoleData storage ref"}},"id":2296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10753:7:11","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"10740:20:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2298,"indexExpression":{"id":2297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10761:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10740:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2292,"id":2299,"nodeType":"Return","src":"10733:36:11"}]},"functionSelector":"91d14854","id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"10656:7:11","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"role","nameLocation":"10672:4:11","nodeType":"VariableDeclaration","scope":2301,"src":"10664:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10664:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"account","nameLocation":"10686:7:11","nodeType":"VariableDeclaration","scope":2301,"src":"10678:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"10678:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10663:31:11"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"10717:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2290,"name":"bool","nodeType":"ElementaryTypeName","src":"10717:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10716:6:11"},"scope":2856,"src":"10647:129:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[3744],"body":{"id":2598,"nodeType":"Block","src":"10894:2208:11","statements":[{"assignments":[2314],"declarations":[{"constant":false,"id":2314,"mutability":"mutable","name":"usdtFee","nameLocation":"10912:7:11","nodeType":"VariableDeclaration","scope":2598,"src":"10904:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"10904:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2315,"nodeType":"VariableDeclarationStatement","src":"10904:15:11"},{"assignments":[2318,2320,2322,2325,2328],"declarations":[{"constant":false,"id":2318,"mutability":"mutable","name":"data","nameLocation":"10945:4:11","nodeType":"VariableDeclaration","scope":2598,"src":"10931:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"InData","nameLocations":["10931:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2942,"src":"10931:6:11"},"referencedDeclaration":2942,"src":"10931:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_storage_ptr","typeString":"struct VaultData.InData"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"interestBalance","nameLocation":"10959:15:11","nodeType":"VariableDeclaration","scope":2598,"src":"10951:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"10951:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"type_","nameLocation":"10980:5:11","nodeType":"VariableDeclaration","scope":2598,"src":"10975:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2321,"name":"bool","nodeType":"ElementaryTypeName","src":"10975:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"addFee_","nameLocation":"11005:7:11","nodeType":"VariableDeclaration","scope":2598,"src":"10987:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"10987:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2324,"nodeType":"ArrayTypeName","src":"10987:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"totalFee_","nameLocation":"11030:9:11","nodeType":"VariableDeclaration","scope":2598,"src":"11013:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"11013:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2327,"nodeType":"ArrayTypeName","src":"11013:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2345,"initialValue":{"arguments":[{"id":2331,"name":"encoded_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"11054:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2332,"name":"InData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"11064:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_InData_$2942_storage_ptr_$","typeString":"type(struct VaultData.InData storage pointer)"}},{"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11072:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"11072:7:11","typeDescriptions":{}}},{"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11080:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2335,"name":"bool","nodeType":"ElementaryTypeName","src":"11080:4:11","typeDescriptions":{}}},{"baseExpression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11085:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"11085:7:11","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"11085:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}},{"baseExpression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11095:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11095:7:11","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}}],"id":2343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11063:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_struct$_InData_$2942_storage_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bool_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$","typeString":"tuple(type(struct VaultData.InData storage pointer),type(uint256),type(bool),type(address[] memory),type(uint256[] memory))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_struct$_InData_$2942_storage_ptr_$_$_t_type$_t_uint256_$_$_t_type$_t_bool_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$","typeString":"tuple(type(struct VaultData.InData storage pointer),type(uint256),type(bool),type(address[] memory),type(uint256[] memory))"}],"expression":{"id":2329,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11043:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11047:6:11","memberName":"decode","nodeType":"MemberAccess","src":"11043:10:11","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11043:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_InData_$2942_memory_ptr_$_t_uint256_$_t_bool_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(struct VaultData.InData memory,uint256,bool,address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10930:176:11"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"encodedData","nameLocation":"11129:11:11","nodeType":"VariableDeclaration","scope":2598,"src":"11116:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2346,"name":"bytes","nodeType":"ElementaryTypeName","src":"11116:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2369,"initialValue":{"arguments":[{"expression":{"id":2350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11173:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11178:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"11173:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2352,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11196:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11201:17:11","memberName":"capitalMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":2927,"src":"11196:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":2356,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11249:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11254:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"11249:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":2354,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11232:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11236:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"11232:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11232:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":2361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11294:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11299:15:11","memberName":"withdrawnValues","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"11294:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":2359,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11277:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11281:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"11277:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11277:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2364,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11329:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11334:9:11","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":2935,"src":"11329:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2366,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11357:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11362:12:11","memberName":"checkOutType","nodeType":"MemberAccess","referencedDeclaration":2937,"src":"11357:17:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":2348,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11143:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11147:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"11143:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11143:241:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11116:268:11"},{"condition":{"id":2370,"name":"type_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"11398:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2401,"nodeType":"IfStatement","src":"11395:285:11","trueBody":{"id":2400,"nodeType":"Block","src":"11404:276:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2373,"name":"NODE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"11434:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":2375,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11461:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11466:11:11","memberName":"messageHash","nodeType":"MemberAccess","referencedDeclaration":2939,"src":"11461:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2377,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11479:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11484:9:11","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"11479:14:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2374,"name":"verifyEcrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"11445:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11445:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2372,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"11426:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11426:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11499:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11426:77:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546865207369676e6572206973206e6f742061206e6f6465","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11504:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d82add7da9835f45caeca9f9666cefc6420bd09cf07042e2ce1137ba818d93c","typeString":"literal_string \"The signer is not a node\""},"value":"The signer is not a node"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d82add7da9835f45caeca9f9666cefc6420bd09cf07042e2ce1137ba818d93c","typeString":"literal_string \"The signer is not a node\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11418:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11418:113:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"ExpressionStatement","src":"11418:113:11"},{"assignments":[2387],"declarations":[{"constant":false,"id":2387,"mutability":"mutable","name":"newMessageHash","nameLocation":"11553:14:11","nodeType":"VariableDeclaration","scope":2400,"src":"11545:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11545:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2391,"initialValue":{"arguments":[{"id":2389,"name":"encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"11580:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2388,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11570:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11570:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11545:47:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"newMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"11614:14:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2394,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11633:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11638:11:11","memberName":"messageHash","nodeType":"MemberAccess","referencedDeclaration":2939,"src":"11633:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11614:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742064617461","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11651:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae6b4065ed04618d5c5f96ed834dfa4d8fe0c4420df59d41e47522953dc8000b","typeString":"literal_string \"Incorrect data\""},"value":"Incorrect data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae6b4065ed04618d5c5f96ed834dfa4d8fe0c4420df59d41e47522953dc8000b","typeString":"literal_string \"Incorrect data\""}],"id":2392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11606:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11606:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2399,"nodeType":"ExpressionStatement","src":"11606:62:11"}]}},{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"myAccount","nameLocation":"11706:9:11","nodeType":"VariableDeclaration","scope":2598,"src":"11690:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"},"typeName":{"id":2403,"nodeType":"UserDefinedTypeName","pathNode":{"id":2402,"name":"Account","nameLocations":["11690:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2908,"src":"11690:7:11"},"referencedDeclaration":2908,"src":"11690:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"}},"visibility":"internal"}],"id":2409,"initialValue":{"baseExpression":{"id":2405,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"11718:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Account_$2908_storage_$","typeString":"mapping(address => struct VaultData.Account storage ref)"}},"id":2408,"indexExpression":{"expression":{"id":2406,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11727:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11732:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"11727:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11718:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage","typeString":"struct VaultData.Account storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11690:47:11"},{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2410,"name":"myAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"11747:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":2412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11757:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2889,"src":"11747:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2413,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11764:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11769:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"11764:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11747:26:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2416,"nodeType":"ExpressionStatement","src":"11747:26:11"},{"expression":{"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2417,"name":"myAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"11783:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":2419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11793:17:11","memberName":"capitalMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"11783:27:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2420,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11814:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11819:17:11","memberName":"capitalMerkleRoot","nodeType":"MemberAccess","referencedDeclaration":2927,"src":"11814:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11783:53:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2423,"nodeType":"ExpressionStatement","src":"11783:53:11"},{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2424,"name":"myAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"11846:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":2426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11856:9:11","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":2907,"src":"11846:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2427,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"11868:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11873:9:11","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":2935,"src":"11868:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11846:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ExpressionStatement","src":"11846:36:11"},{"body":{"id":2472,"nodeType":"Block","src":"11961:210:11","statements":[{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2442,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"11975:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2446,"indexExpression":{"baseExpression":{"id":2443,"name":"addFee_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"11984:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2445,"indexExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"11992:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11984:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11975:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2447,"name":"totalFee_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"11998:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2449,"indexExpression":{"id":2448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12008:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11998:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11975:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2451,"nodeType":"ExpressionStatement","src":"11975:35:11"},{"condition":{"baseExpression":{"id":2452,"name":"isSupDe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"12027:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2456,"indexExpression":{"baseExpression":{"id":2453,"name":"addFee_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"12035:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2455,"indexExpression":{"id":2454,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12043:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12035:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12027:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2471,"nodeType":"IfStatement","src":"12024:137:11","trueBody":{"id":2470,"nodeType":"Block","src":"12047:114:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2457,"name":"totalFee_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"12068:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2459,"indexExpression":{"id":2458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12078:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12068:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12083:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12068:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"12065:82:11","trueBody":{"id":2468,"nodeType":"Block","src":"12085:62:11","statements":[{"expression":{"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2462,"name":"usdtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"12105:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2463,"name":"totalFee_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"12116:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2465,"indexExpression":{"id":2464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"12126:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12116:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12105:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2467,"nodeType":"ExpressionStatement","src":"12105:23:11"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"11938:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2436,"name":"addFee_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"11941:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11949:6:11","memberName":"length","nodeType":"MemberAccess","src":"11941:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11938:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"initializationExpression":{"assignments":[2432],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"i","nameLocation":"11933:1:11","nodeType":"VariableDeclaration","scope":2473,"src":"11925:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"11925:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2434,"initialValue":{"hexValue":"30","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11935:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11925:11:11"},"loopExpression":{"expression":{"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11957:3:11","subExpression":{"id":2439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"11957:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2441,"nodeType":"ExpressionStatement","src":"11957:3:11"},"nodeType":"ForStatement","src":"11921:250:11"},{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"flag","nameLocation":"12186:4:11","nodeType":"VariableDeclaration","scope":2598,"src":"12181:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"12181:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2477,"initialValue":{"hexValue":"66616c7365","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12193:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"12181:17:11"},{"body":{"id":2559,"nodeType":"Block","src":"12257:553:11","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":2491,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12282:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12287:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"12282:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2494,"indexExpression":{"id":2493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12296:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12282:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2490,"name":"isCoinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"12271:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12271:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"12271:28:11"},{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2497,"name":"myAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"12313:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account storage pointer"}},"id":2503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12323:14:11","memberName":"capitalBalance","nodeType":"MemberAccess","referencedDeclaration":2895,"src":"12313:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2504,"indexExpression":{"baseExpression":{"expression":{"id":2499,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12338:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12343:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"12338:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2502,"indexExpression":{"id":2501,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12352:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12338:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12313:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"expression":{"id":2505,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12359:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12364:15:11","memberName":"withdrawnValues","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"12359:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2508,"indexExpression":{"id":2507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12380:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12359:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12313:69:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"nodeType":"ExpressionStatement","src":"12313:69:11"},{"condition":{"baseExpression":{"id":2511,"name":"isSupDe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"12456:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2516,"indexExpression":{"baseExpression":{"expression":{"id":2512,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12464:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12469:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"12464:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2515,"indexExpression":{"id":2514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12478:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12464:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12456:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2558,"nodeType":"IfStatement","src":"12453:347:11","trueBody":{"id":2557,"nodeType":"Block","src":"12482:318:11","statements":[{"expression":{"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2517,"name":"flag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"12500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12507:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12500:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2520,"nodeType":"ExpressionStatement","src":"12500:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"interestBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12532:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"expression":{"id":2522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12550:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12555:15:11","memberName":"withdrawnValues","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"12550:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2525,"indexExpression":{"id":2524,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12571:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12550:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12532:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12576:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12532:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2556,"nodeType":"IfStatement","src":"12529:257:11","trueBody":{"id":2555,"nodeType":"Block","src":"12578:208:11","statements":[{"expression":{"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2529,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"12600:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2532,"indexExpression":{"expression":{"id":2530,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12615:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12620:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"12615:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12600:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2533,"name":"interestBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12629:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12600:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2535,"nodeType":"ExpressionStatement","src":"12600:44:11"},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":2537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12684:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12689:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"12684:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2540,"indexExpression":{"id":2539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12698:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12684:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"interestBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12702:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"expression":{"id":2542,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12720:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12725:15:11","memberName":"withdrawnValues","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"12720:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2545,"indexExpression":{"id":2544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12741:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12720:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12702:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2547,"name":"usdtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"12744:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12702:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2551,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12761:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12753:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"12753:7:11","typeDescriptions":{}}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12753:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2536,"name":"_withdrawFromAAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"12666:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) returns (uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12666:101:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"nodeType":"ExpressionStatement","src":"12666:101:11"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12227:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":2483,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12231:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12236:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"12231:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12245:6:11","memberName":"length","nodeType":"MemberAccess","src":"12231:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12227:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"initializationExpression":{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"i","nameLocation":"12220:1:11","nodeType":"VariableDeclaration","scope":2560,"src":"12212:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"12212:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2481,"initialValue":{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12212:12:11"},"loopExpression":{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12253:3:11","subExpression":{"id":2487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"12253:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"12253:3:11"},"nodeType":"ForStatement","src":"12208:602:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12823:5:11","subExpression":{"id":2561,"name":"flag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"12824:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"interestBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12832:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12850:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12832:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12823:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"nodeType":"IfStatement","src":"12820:180:11","trueBody":{"id":2585,"nodeType":"Block","src":"12852:148:11","statements":[{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2567,"name":"interestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"12866:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2570,"indexExpression":{"expression":{"id":2568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"12881:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12886:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"12881:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12866:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2571,"name":"interestBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12895:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12866:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"12866:44:11"},{"expression":{"arguments":[{"id":2575,"name":"usdt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"12942:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"interestBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"12948:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2577,"name":"usdtFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"12966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12948:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2581,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12983:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12975:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"12975:7:11","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12975:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2574,"name":"_withdrawFromAAVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"12924:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) returns (uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12924:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"12924:65:11"}]}},{"eventCall":{"arguments":[{"expression":{"id":2588,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"13028:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13033:4:11","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":2925,"src":"13028:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"13038:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13043:8:11","memberName":"coinList","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"13038:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":2592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"13052:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13057:15:11","memberName":"withdrawnValues","nodeType":"MemberAccess","referencedDeclaration":2933,"src":"13052:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2594,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"13073:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_InData_$2942_memory_ptr","typeString":"struct VaultData.InData memory"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13078:12:11","memberName":"checkOutType","nodeType":"MemberAccess","referencedDeclaration":2937,"src":"13073:17:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2587,"name":"eventReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"13015:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (address,address[] memory,uint256[] memory,uint8)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13015:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2597,"nodeType":"EmitStatement","src":"13010:81:11"}]},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"10795:21:11","nodeType":"FunctionDefinition","overrides":{"id":2311,"nodeType":"OverrideSpecifier","overrides":[],"src":"10885:8:11"},"parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"10817:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2302,"name":"uint16","nodeType":"ElementaryTypeName","src":"10817:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"10825:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"10825:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"nonce","nameLocation":"10846:5:11","nodeType":"VariableDeclaration","scope":2599,"src":"10839:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2306,"name":"uint64","nodeType":"ElementaryTypeName","src":"10839:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"encoded_","nameLocation":"10866:8:11","nodeType":"VariableDeclaration","scope":2599,"src":"10853:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2308,"name":"bytes","nodeType":"ElementaryTypeName","src":"10853:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10816:59:11"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"10894:0:11"},"scope":2856,"src":"10786:2316:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2630,"nodeType":"Block","src":"13181:180:11","statements":[{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"TYPE_ORACLE","nameLocation":"13196:11:11","nodeType":"VariableDeclaration","scope":2630,"src":"13191:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint","nodeType":"ElementaryTypeName","src":"13191:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2611,"initialValue":{"hexValue":"36","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13210:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"VariableDeclarationStatement","src":"13191:20:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2619,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13302:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13294:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"13294:7:11","typeDescriptions":{}}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2615,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"13268:10:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13279:14:11","memberName":"getSendVersion","nodeType":"MemberAccess","referencedDeclaration":3950,"src":"13268:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint16_$","typeString":"function (address) view external returns (uint16)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13268:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2622,"name":"dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"13310:10:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2623,"name":"TYPE_ORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"13322:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2626,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"13346:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2624,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13335:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13339:6:11","memberName":"encode","nodeType":"MemberAccess","src":"13335:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13335:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2612,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"13247:10:11","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13258:9:11","memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"13247:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13247:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"13247:107:11"}]},"functionSelector":"492e527e","id":2631,"implemented":true,"kind":"function","modifiers":[{"id":2606,"kind":"modifierInvocation","modifierName":{"id":2605,"name":"onlyOwner","nameLocations":["13171:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13171:9:11"},"nodeType":"ModifierInvocation","src":"13171:9:11"}],"name":"setOracle","nameLocation":"13117:9:11","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"dstChainId","nameLocation":"13134:10:11","nodeType":"VariableDeclaration","scope":2631,"src":"13127:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2600,"name":"uint16","nodeType":"ElementaryTypeName","src":"13127:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"oracle","nameLocation":"13154:6:11","nodeType":"VariableDeclaration","scope":2631,"src":"13146:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"13146:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13126:35:11"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[],"src":"13181:0:11"},"scope":2856,"src":"13108:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2650,"nodeType":"Block","src":"13452:131:11","statements":[{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"13462:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13503:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":2643,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"13539:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2640,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13486:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13490:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"13486:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13486:61:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2639,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13476:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13476:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13462:86:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2647,"nodeType":"ExpressionStatement","src":"13462:86:11"},{"expression":{"id":2648,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"13565:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2637,"id":2649,"nodeType":"Return","src":"13558:18:11"}]},"functionSelector":"b3cb890f","id":2651,"implemented":true,"kind":"function","modifiers":[],"name":"hashMessage","nameLocation":"13380:11:11","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"message","nameLocation":"13401:7:11","nodeType":"VariableDeclaration","scope":2651,"src":"13392:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13392:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13391:18:11"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"messageHash","nameLocation":"13439:11:11","nodeType":"VariableDeclaration","scope":2651,"src":"13431:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13431:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13430:21:11"},"scope":2856,"src":"13371:212:11","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2675,"nodeType":"Block","src":"13638:156:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2656,"name":"isTrueForCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"13651:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2658,"indexExpression":{"id":2657,"name":"goodsAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"13665:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13651:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13682:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13651:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2674,"nodeType":"IfStatement","src":"13648:140:11","trueBody":{"id":2673,"nodeType":"Block","src":"13688:100:11","statements":[{"expression":{"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2661,"name":"isTrueForCoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"13702:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2663,"indexExpression":{"id":2662,"name":"goodsAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"13716:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13702:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13702:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"ExpressionStatement","src":"13702:34:11"},{"expression":{"arguments":[{"id":2670,"name":"goodsAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"13764:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2667,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"13750:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13759:4:11","memberName":"push","nodeType":"MemberAccess","src":"13750:13:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13750:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2672,"nodeType":"ExpressionStatement","src":"13750:27:11"}]}}]},"id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"isCoinList","nameLocation":"13598:10:11","nodeType":"FunctionDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"goodsAddress","nameLocation":"13617:12:11","nodeType":"VariableDeclaration","scope":2676,"src":"13609:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"13609:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13608:22:11"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[],"src":"13638:0:11"},"scope":2856,"src":"13589:205:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2720,"nodeType":"Block","src":"13870:235:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2686,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"13888:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2688,"indexExpression":{"id":2687,"name":"add_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"13897:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13888:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2689,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"13906:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13888:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742073756666696369656e742066756e6473","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13914:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db","typeString":"literal_string \"Not sufficient funds\""},"value":"Not sufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db","typeString":"literal_string \"Not sufficient funds\""}],"id":2685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13880:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13880:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"13880:57:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2696,"name":"FEE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"13963:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13972:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13976:6:11","memberName":"sender","nodeType":"MemberAccess","src":"13972:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2695,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13955:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13955:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13985:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13955:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5065726d697373696f6e2044656e696564","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13990:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7796ca3cfdc653c566dc65a58dc36b8e618ca503d2ee6999fe37fad5ffd51b7a","typeString":"literal_string \"Permission Denied\""},"value":"Permission Denied"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7796ca3cfdc653c566dc65a58dc36b8e618ca503d2ee6999fe37fad5ffd51b7a","typeString":"literal_string \"Permission Denied\""}],"id":2694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13947:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13947:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"ExpressionStatement","src":"13947:63:11"},{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2705,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14020:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2707,"indexExpression":{"id":2706,"name":"add_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14029:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14020:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2708,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"14039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14020:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"14020:26:11"},{"expression":{"arguments":[{"expression":{"id":2715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14078:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14082:6:11","memberName":"sender","nodeType":"MemberAccess","src":"14078:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2717,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"14090:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2712,"name":"add_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"14063:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2711,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"14056:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$273_$","typeString":"type(contract IERC20)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14056:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$273","typeString":"contract IERC20"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14069:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"14056:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14056:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2719,"nodeType":"ExpressionStatement","src":"14056:42:11"}]},"functionSelector":"fd9be522","id":2721,"implemented":true,"kind":"function","modifiers":[{"id":2683,"kind":"modifierInvocation","modifierName":{"id":2682,"name":"onlyOwner","nameLocations":["13861:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13861:9:11"},"nodeType":"ModifierInvocation","src":"13861:9:11"}],"name":"withdrawFee","nameLocation":"13809:11:11","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"add_","nameLocation":"13829:4:11","nodeType":"VariableDeclaration","scope":2721,"src":"13821:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2677,"name":"address","nodeType":"ElementaryTypeName","src":"13821:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"amount_","nameLocation":"13843:7:11","nodeType":"VariableDeclaration","scope":2721,"src":"13835:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"13835:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13820:31:11"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"13870:0:11"},"scope":2856,"src":"13800:305:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2821,"nodeType":"Block","src":"14194:509:11","statements":[{"assignments":[2731],"declarations":[{"constant":false,"id":2731,"mutability":"mutable","name":"count","nameLocation":"14212:5:11","nodeType":"VariableDeclaration","scope":2821,"src":"14204:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"14204:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2733,"initialValue":{"hexValue":"30","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14220:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14204:17:11"},{"body":{"id":2757,"nodeType":"Block","src":"14273:94:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2745,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14290:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2749,"indexExpression":{"baseExpression":{"id":2746,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14299:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2748,"indexExpression":{"id":2747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14308:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14299:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14290:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14314:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14290:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2756,"nodeType":"IfStatement","src":"14287:70:11","trueBody":{"id":2755,"nodeType":"Block","src":"14316:41:11","statements":[{"expression":{"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14335:7:11","subExpression":{"id":2752,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14335:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2754,"nodeType":"ExpressionStatement","src":"14335:7:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14250:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2739,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14252:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14261:6:11","memberName":"length","nodeType":"MemberAccess","src":"14252:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14250:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2758,"initializationExpression":{"assignments":[2735],"declarations":[{"constant":false,"id":2735,"mutability":"mutable","name":"i","nameLocation":"14244:1:11","nodeType":"VariableDeclaration","scope":2758,"src":"14236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"14236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2737,"initialValue":{"hexValue":"30","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14247:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14236:12:11"},"loopExpression":{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14269:3:11","subExpression":{"id":2742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"14269:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2744,"nodeType":"ExpressionStatement","src":"14269:3:11"},"nodeType":"ForStatement","src":"14232:135:11"},{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"coin","nameLocation":"14394:4:11","nodeType":"VariableDeclaration","scope":2821,"src":"14377:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"14377:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2762,"nodeType":"ArrayTypeName","src":"14377:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2769,"initialValue":{"arguments":[{"id":2767,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14401:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"14405:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2765,"nodeType":"ArrayTypeName","src":"14405:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14401:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14377:44:11"},{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"amount","nameLocation":"14448:6:11","nodeType":"VariableDeclaration","scope":2821,"src":"14431:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"14431:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ArrayTypeName","src":"14431:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2780,"initialValue":{"arguments":[{"id":2778,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"14471:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14457:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"14461:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2776,"nodeType":"ArrayTypeName","src":"14461:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14457:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14431:46:11"},{"body":{"id":2819,"nodeType":"Block","src":"14530:160:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2792,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14547:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2796,"indexExpression":{"baseExpression":{"id":2793,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14556:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2795,"indexExpression":{"id":2794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14565:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14556:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14547:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14547:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"14544:136:11","trueBody":{"id":2817,"nodeType":"Block","src":"14573:107:11","statements":[{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2799,"name":"coin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"14592:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2801,"indexExpression":{"id":2800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14597:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14592:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2802,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14602:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2804,"indexExpression":{"id":2803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14611:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14602:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14592:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2806,"nodeType":"ExpressionStatement","src":"14592:21:11"},{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2807,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"14632:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2809,"indexExpression":{"id":2808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14639:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14632:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2810,"name":"totalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14644:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2814,"indexExpression":{"baseExpression":{"id":2811,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14653:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2813,"indexExpression":{"id":2812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14662:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14653:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14644:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14632:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ExpressionStatement","src":"14632:33:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14507:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2786,"name":"coinList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14509:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14518:6:11","memberName":"length","nodeType":"MemberAccess","src":"14509:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14507:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"initializationExpression":{"assignments":[2782],"declarations":[{"constant":false,"id":2782,"mutability":"mutable","name":"i","nameLocation":"14501:1:11","nodeType":"VariableDeclaration","scope":2820,"src":"14493:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"14493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2784,"initialValue":{"hexValue":"30","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14504:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14493:12:11"},"loopExpression":{"expression":{"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14526:3:11","subExpression":{"id":2789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14526:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2791,"nodeType":"ExpressionStatement","src":"14526:3:11"},"nodeType":"ForStatement","src":"14489:201:11"}]},"functionSelector":"d667a5da","id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"getAllFee","nameLocation":"14120:9:11","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[],"src":"14129:2:11"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"coin","nameLocation":"14165:4:11","nodeType":"VariableDeclaration","scope":2822,"src":"14148:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"14148:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2724,"nodeType":"ArrayTypeName","src":"14148:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"amount","nameLocation":"14187:6:11","nodeType":"VariableDeclaration","scope":2822,"src":"14170:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"14170:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2727,"nodeType":"ArrayTypeName","src":"14170:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14147:47:11"},"scope":2856,"src":"14111:592:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2854,"nodeType":"Block","src":"14852:199:11","statements":[{"assignments":[2833],"declarations":[{"constant":false,"id":2833,"mutability":"mutable","name":"reserve","nameLocation":"14891:7:11","nodeType":"VariableDeclaration","scope":2854,"src":"14862:36:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":2832,"nodeType":"UserDefinedTypeName","pathNode":{"id":2831,"name":"DataTypes.ReserveData","nameLocations":["14862:9:11","14872:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":348,"src":"14862:21:11"},"referencedDeclaration":348,"src":"14862:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"id":2840,"initialValue":{"arguments":[{"id":2838,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"14943:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2835,"name":"aave","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"14922:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2834,"name":"ILendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"14909:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILendingPool_$738_$","typeString":"type(contract ILendingPool)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$738","typeString":"contract ILendingPool"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14928:14:11","memberName":"getReserveData","nodeType":"MemberAccess","referencedDeclaration":700,"src":"14909:33:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$348_memory_ptr_$","typeString":"function (address) view external returns (struct DataTypes.ReserveData memory)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"nodeType":"VariableDeclarationStatement","src":"14862:87:11"},{"expression":{"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"currentATokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"14959:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2849,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15038:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Vault_$2856","typeString":"contract Vault"}],"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15030:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"15030:7:11","typeDescriptions":{}}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15030:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":2843,"name":"reserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"14997:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$348_memory_ptr","typeString":"struct DataTypes.ReserveData memory"}},"id":2844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15005:13:11","memberName":"aTokenAddress","nodeType":"MemberAccess","referencedDeclaration":339,"src":"14997:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2842,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"14982:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$298_$","typeString":"type(contract IERC20Metadata)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14982:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$298","typeString":"contract IERC20Metadata"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15020:9:11","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":230,"src":"14982:47:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14982:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14959:85:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2853,"nodeType":"ExpressionStatement","src":"14959:85:11"}]},"functionSelector":"68637549","id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalValue","nameLocation":"14718:13:11","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"asset","nameLocation":"14740:5:11","nodeType":"VariableDeclaration","scope":2855,"src":"14732:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"14732:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14731:15:11"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"currentATokenBalance","nameLocation":"14817:20:11","nodeType":"VariableDeclaration","scope":2855,"src":"14809:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14795:52:11"},"scope":2856,"src":"14709:342:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2857,"src":"444:14610:11","usedErrors":[]}],"src":"31:15024:11"},"id":11},"contracts/L1/data/VaultData.sol":{"ast":{"absolutePath":"contracts/L1/data/VaultData.sol","exportedSymbols":{"VaultData":[2967]},"id":2968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2858,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"VaultData","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2967,"linearizedBaseContracts":[2967],"name":"VaultData","nameLocation":"65:9:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"VaultData.OperateType","id":2864,"members":[{"id":2859,"name":"NONE","nameLocation":"108:4:12","nodeType":"EnumValue","src":"108:4:12"},{"id":2860,"name":"DEPOSIT","nameLocation":"122:7:12","nodeType":"EnumValue","src":"122:7:12"},{"id":2861,"name":"DEPOSITETH","nameLocation":"149:10:12","nodeType":"EnumValue","src":"149:10:12"},{"id":2862,"name":"WITHDRAW","nameLocation":"182:8:12","nodeType":"EnumValue","src":"182:8:12"},{"id":2863,"name":"WITHDRAWINTEREST","nameLocation":"210:16:12","nodeType":"EnumValue","src":"210:16:12"}],"name":"OperateType","nameLocation":"87:11:12","nodeType":"EnumDefinition","src":"82:163:12"},{"constant":true,"functionSelector":"19fc2e61","id":2869,"mutability":"constant","name":"OWENER_ROLE","nameLocation":"279:11:12","nodeType":"VariableDeclaration","scope":2967,"src":"255:62:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"255:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f57454e45525f524f4c45","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"303:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_52941335797217779ab62cf10a3ae2b6d453b5f3a1285e7a816eb9f63a58d669","typeString":"literal_string \"OWENER_ROLE\""},"value":"OWENER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_52941335797217779ab62cf10a3ae2b6d453b5f3a1285e7a816eb9f63a58d669","typeString":"literal_string \"OWENER_ROLE\""}],"id":2866,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"293:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"293:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"fb895733","id":2874,"mutability":"constant","name":"NODE_ROLE","nameLocation":"347:9:12","nodeType":"VariableDeclaration","scope":2967,"src":"323:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"323:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4e4f44455f524f4c45","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"369:11:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_57c872046f094b8a493ec5eb6ea374eafbc3c05951e40de3c4302a41f3f127ba","typeString":"literal_string \"NODE_ROLE\""},"value":"NODE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_57c872046f094b8a493ec5eb6ea374eafbc3c05951e40de3c4302a41f3f127ba","typeString":"literal_string \"NODE_ROLE\""}],"id":2871,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"359:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"359:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2a0276f8","id":2879,"mutability":"constant","name":"FEE_ROLE","nameLocation":"411:8:12","nodeType":"VariableDeclaration","scope":2967,"src":"387:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"387:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4645455f524f4c45","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"432:10:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df15","typeString":"literal_string \"FEE_ROLE\""},"value":"FEE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df15","typeString":"literal_string \"FEE_ROLE\""}],"id":2876,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"422:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"422:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"30c593f7","id":2881,"mutability":"mutable","name":"dstChainId","nameLocation":"464:10:12","nodeType":"VariableDeclaration","scope":2967,"src":"450:24:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2880,"name":"uint16","nodeType":"ElementaryTypeName","src":"450:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"functionSelector":"c392f766","id":2883,"mutability":"mutable","name":"interest","nameLocation":"495:8:12","nodeType":"VariableDeclaration","scope":2967,"src":"480:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"819faf7b","id":2885,"mutability":"mutable","name":"aave","nameLocation":"524:4:12","nodeType":"VariableDeclaration","scope":2967,"src":"509:19:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"083118d5","id":2887,"mutability":"mutable","name":"adapterParams","nameLocation":"547:13:12","nodeType":"VariableDeclaration","scope":2967,"src":"534:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"534:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"public"},{"canonicalName":"VaultData.Account","id":2908,"members":[{"constant":false,"id":2889,"mutability":"mutable","name":"user","nameLocation":"601:4:12","nodeType":"VariableDeclaration","scope":2908,"src":"593:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"capitalMerkleRoot","nameLocation":"621:17:12","nodeType":"VariableDeclaration","scope":2908,"src":"613:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"613:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"capitalBalance","nameLocation":"674:14:12","nodeType":"VariableDeclaration","scope":2908,"src":"646:42:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2894,"keyType":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"646:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"capitalNonce","nameLocation":"704:12:12","nodeType":"VariableDeclaration","scope":2908,"src":"696:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"696:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"tradingMerkleRoot","nameLocation":"732:17:12","nodeType":"VariableDeclaration","scope":2908,"src":"724:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"724:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"tradingBalance","nameLocation":"785:14:12","nodeType":"VariableDeclaration","scope":2908,"src":"757:42:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2902,"keyType":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"765:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"757:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"tradingNonce","nameLocation":"815:12:12","nodeType":"VariableDeclaration","scope":2908,"src":"807:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"nativeFee","nameLocation":"840:9:12","nodeType":"VariableDeclaration","scope":2908,"src":"835:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint","nodeType":"ElementaryTypeName","src":"835:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Account","nameLocation":"577:7:12","nodeType":"StructDefinition","scope":2967,"src":"570:286:12","visibility":"public"},{"constant":false,"functionSelector":"5e5c06e2","id":2913,"mutability":"mutable","name":"accounts","nameLocation":"896:8:12","nodeType":"VariableDeclaration","scope":2967,"src":"861:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Account_$2908_storage_$","typeString":"mapping(address => struct VaultData.Account)"},"typeName":{"id":2912,"keyType":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"861:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Account_$2908_storage_$","typeString":"mapping(address => struct VaultData.Account)"},"valueType":{"id":2911,"nodeType":"UserDefinedTypeName","pathNode":{"id":2910,"name":"Account","nameLocations":["880:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2908,"src":"880:7:12"},"referencedDeclaration":2908,"src":"880:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Account_$2908_storage_ptr","typeString":"struct VaultData.Account"}}},"visibility":"public"},{"constant":false,"functionSelector":"ff464d3f","id":2917,"mutability":"mutable","name":"isSupDe","nameLocation":"945:7:12","nodeType":"VariableDeclaration","scope":2967,"src":"913:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2916,"keyType":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"913:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2915,"name":"bool","nodeType":"ElementaryTypeName","src":"932:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":2921,"mutability":"mutable","name":"latestShare","nameLocation":"996:11:12","nodeType":"VariableDeclaration","scope":2967,"src":"961:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2920,"keyType":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"961:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"47535d7b","id":2923,"mutability":"mutable","name":"isOpen","nameLocation":"1028:6:12","nodeType":"VariableDeclaration","scope":2967,"src":"1016:18:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2922,"name":"bool","nodeType":"ElementaryTypeName","src":"1016:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"canonicalName":"VaultData.InData","id":2942,"members":[{"constant":false,"id":2925,"mutability":"mutable","name":"user","nameLocation":"1071:4:12","nodeType":"VariableDeclaration","scope":2942,"src":"1063:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2924,"name":"address","nodeType":"ElementaryTypeName","src":"1063:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"capitalMerkleRoot","nameLocation":"1094:17:12","nodeType":"VariableDeclaration","scope":2942,"src":"1086:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1086:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"coinList","nameLocation":"1133:8:12","nodeType":"VariableDeclaration","scope":2942,"src":"1122:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2929,"nodeType":"ArrayTypeName","src":"1122:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"withdrawnValues","nameLocation":"1163:15:12","nodeType":"VariableDeclaration","scope":2942,"src":"1152:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2932,"nodeType":"ArrayTypeName","src":"1152:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"nativeFee","nameLocation":"1196:9:12","nodeType":"VariableDeclaration","scope":2942,"src":"1188:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"checkOutType","nameLocation":"1221:12:12","nodeType":"VariableDeclaration","scope":2942,"src":"1215:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2936,"name":"uint8","nodeType":"ElementaryTypeName","src":"1215:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"messageHash","nameLocation":"1272:11:12","nodeType":"VariableDeclaration","scope":2942,"src":"1264:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1264:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"signature","nameLocation":"1300:9:12","nodeType":"VariableDeclaration","scope":2942,"src":"1294:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2940,"name":"bytes","nodeType":"ElementaryTypeName","src":"1294:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"InData","nameLocation":"1047:6:12","nodeType":"StructDefinition","scope":2967,"src":"1040:276:12","visibility":"public"},{"canonicalName":"VaultData.RoleData","id":2949,"members":[{"constant":false,"id":2946,"mutability":"mutable","name":"members","nameLocation":"1373:7:12","nodeType":"VariableDeclaration","scope":2949,"src":"1348:32:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2945,"keyType":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1348:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2944,"name":"bool","nodeType":"ElementaryTypeName","src":"1367:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"adminRole","nameLocation":"1398:9:12","nodeType":"VariableDeclaration","scope":2949,"src":"1390:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1390:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1329:8:12","nodeType":"StructDefinition","scope":2967,"src":"1322:92:12","visibility":"public"},{"constant":false,"functionSelector":"bd99d7e1","id":2954,"mutability":"mutable","name":"_roles","nameLocation":"1456:6:12","nodeType":"VariableDeclaration","scope":2967,"src":"1420:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$2949_storage_$","typeString":"mapping(bytes32 => struct VaultData.RoleData)"},"typeName":{"id":2953,"keyType":{"id":2950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1428:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1420:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$2949_storage_$","typeString":"mapping(bytes32 => struct VaultData.RoleData)"},"valueType":{"id":2952,"nodeType":"UserDefinedTypeName","pathNode":{"id":2951,"name":"RoleData","nameLocations":["1439:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2949,"src":"1439:8:12"},"referencedDeclaration":2949,"src":"1439:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$2949_storage_ptr","typeString":"struct VaultData.RoleData"}}},"visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":2957,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"1493:18:12","nodeType":"VariableDeclaration","scope":2967,"src":"1469:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1469:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"constant":false,"id":2960,"mutability":"mutable","name":"coinList","nameLocation":"1535:8:12","nodeType":"VariableDeclaration","scope":2967,"src":"1525:18:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2959,"nodeType":"ArrayTypeName","src":"1525:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"functionSelector":"4893c26a","id":2964,"mutability":"mutable","name":"isTrueForCoin","nameLocation":"1582:13:12","nodeType":"VariableDeclaration","scope":2967,"src":"1550:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2963,"keyType":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"1558:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1550:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"1569:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f48ab7d","id":2966,"mutability":"mutable","name":"usdt","nameLocation":"1621:4:12","nodeType":"VariableDeclaration","scope":2967,"src":"1606:19:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"}],"scope":2968,"src":"56:1572:12","usedErrors":[]}],"src":"31:1598:12"},"id":12},"contracts/L1/interface/IVault.sol":{"ast":{"absolutePath":"contracts/L1/interface/IVault.sol","exportedSymbols":{"IVault":[3049]},"id":3050,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2969,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3049,"linearizedBaseContracts":[3049],"name":"IVault","nameLocation":"66:6:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"47e7ef24","id":2976,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"88:7:13","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"type_","nameLocation":"104:5:13","nodeType":"VariableDeclaration","scope":2976,"src":"96:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2970,"name":"address","nodeType":"ElementaryTypeName","src":"96:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"amount_","nameLocation":"119:7:13","nodeType":"VariableDeclaration","scope":2976,"src":"111:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"111:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95:32:13"},"returnParameters":{"id":2975,"nodeType":"ParameterList","parameters":[],"src":"143:0:13"},"scope":3049,"src":"79:65:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"5358fbda","id":2981,"implemented":false,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"159:10:13","nodeType":"FunctionDefinition","parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"amount_","nameLocation":"178:7:13","nodeType":"VariableDeclaration","scope":2981,"src":"170:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"169:17:13"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"203:0:13"},"scope":3049,"src":"150:54:13","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"16e57652","id":2990,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"223:8:13","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"amount_","nameLocation":"250:7:13","nodeType":"VariableDeclaration","scope":2990,"src":"232:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ArrayTypeName","src":"232:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"coin_","nameLocation":"276:5:13","nodeType":"VariableDeclaration","scope":2990,"src":"258:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2986,"nodeType":"ArrayTypeName","src":"258:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"231:51:13"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[],"src":"291:0:13"},"scope":3049,"src":"214:78:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"d4de851ae1bdf4ea540c1d68657b95bdc9710e532c03bf807c1a7107d238706b","id":3000,"name":"eventWithdraw","nameLocation":"304:13:13","nodeType":"EventDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"indexed":false,"mutability":"mutable","name":"type_","nameLocation":"327:5:13","nodeType":"VariableDeclaration","scope":3000,"src":"318:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2992,"nodeType":"ArrayTypeName","src":"318:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2996,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"345:7:13","nodeType":"VariableDeclaration","scope":3000,"src":"334:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ArrayTypeName","src":"334:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2998,"indexed":false,"mutability":"mutable","name":"sender_","nameLocation":"361:7:13","nodeType":"VariableDeclaration","scope":3000,"src":"353:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"317:52:13"},"src":"298:72:13"},{"anonymous":false,"eventSelector":"0f007803da765bf8bfb79898e5892989976c0f6b9f69dd946cb8b949c781587a","id":3006,"name":"eventDepositETH","nameLocation":"382:15:13","nodeType":"EventDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"406:7:13","nodeType":"VariableDeclaration","scope":3006,"src":"398:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"indexed":false,"mutability":"mutable","name":"sender_","nameLocation":"422:7:13","nodeType":"VariableDeclaration","scope":3006,"src":"414:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"397:33:13"},"src":"376:55:13"},{"anonymous":false,"eventSelector":"448d2b6792a74a21bfa5114f7cd01a036f36236f4e3687339032e97103e653ce","id":3014,"name":"eventDeposit","nameLocation":"443:12:13","nodeType":"EventDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"indexed":false,"mutability":"mutable","name":"type_","nameLocation":"464:5:13","nodeType":"VariableDeclaration","scope":3014,"src":"456:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3010,"indexed":false,"mutability":"mutable","name":"amount_","nameLocation":"478:7:13","nodeType":"VariableDeclaration","scope":3014,"src":"470:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3012,"indexed":false,"mutability":"mutable","name":"sender_","nameLocation":"494:7:13","nodeType":"VariableDeclaration","scope":3014,"src":"486:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"455:47:13"},"src":"437:66:13"},{"anonymous":false,"eventSelector":"f960cae5bdc8457282fdacf581049becc391a90caf03b493474f528411bc8eb7","id":3022,"name":"eventCheckOutInterest","nameLocation":"515:21:13","nodeType":"EventDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"indexed":false,"mutability":"mutable","name":"user_","nameLocation":"546:5:13","nodeType":"VariableDeclaration","scope":3022,"src":"538:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3018,"indexed":false,"mutability":"mutable","name":"coin_","nameLocation":"560:5:13","nodeType":"VariableDeclaration","scope":3022,"src":"552:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3017,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3020,"indexed":false,"mutability":"mutable","name":"interest_","nameLocation":"574:9:13","nodeType":"VariableDeclaration","scope":3022,"src":"566:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"537:47:13"},"src":"509:76:13"},{"anonymous":false,"eventSelector":"c53f0aae5ad30d5251e6054a1874116c45eaf54274cdb1940ee106d67c10b3a5","id":3034,"name":"eventReceive","nameLocation":"597:12:13","nodeType":"EventDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"618:4:13","nodeType":"VariableDeclaration","scope":3034,"src":"610:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3023,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3027,"indexed":false,"mutability":"mutable","name":"coinAdd_","nameLocation":"634:8:13","nodeType":"VariableDeclaration","scope":3034,"src":"624:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3025,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3026,"nodeType":"ArrayTypeName","src":"624:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3030,"indexed":false,"mutability":"mutable","name":"capitalValues_","nameLocation":"654:14:13","nodeType":"VariableDeclaration","scope":3034,"src":"644:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3029,"nodeType":"ArrayTypeName","src":"644:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3032,"indexed":false,"mutability":"mutable","name":"checkOutType","nameLocation":"676:12:13","nodeType":"VariableDeclaration","scope":3034,"src":"670:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3031,"name":"uint8","nodeType":"ElementaryTypeName","src":"670:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"609:80:13"},"src":"591:99:13"},{"anonymous":false,"eventSelector":"bb992170d0382feeb939a59875390a636bd942134e6e58925caf64c99432820a","id":3042,"name":"eventWithdrawInterest","nameLocation":"702:21:13","nodeType":"EventDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"732:4:13","nodeType":"VariableDeclaration","scope":3042,"src":"724:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3038,"indexed":false,"mutability":"mutable","name":"coinType","nameLocation":"746:8:13","nodeType":"VariableDeclaration","scope":3042,"src":"738:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3037,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3040,"indexed":false,"mutability":"mutable","name":"interestBalance","nameLocation":"764:15:13","nodeType":"VariableDeclaration","scope":3042,"src":"756:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:57:13"},"src":"696:85:13"},{"anonymous":false,"eventSelector":"7b76b1408a265d1641029ec822a5efa21eb029217a2c99ab8531229bbc9ed942","id":3048,"name":"eventSetWhilLlist","nameLocation":"793:17:13","nodeType":"EventDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"indexed":false,"mutability":"mutable","name":"user_","nameLocation":"819:5:13","nodeType":"VariableDeclaration","scope":3048,"src":"811:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3046,"indexed":false,"mutability":"mutable","name":"re_","nameLocation":"830:3:13","nodeType":"VariableDeclaration","scope":3048,"src":"825:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3045,"name":"bool","nodeType":"ElementaryTypeName","src":"825:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"810:25:13"},"src":"787:49:13"}],"scope":3050,"src":"56:782:13","usedErrors":[]}],"src":"31:808:13"},"id":13},"contracts/LayerZero/LzApp.sol":{"ast":{"absolutePath":"contracts/LayerZero/LzApp.sol","exportedSymbols":{"BytesLib":[4336],"Context":[320],"ILayerZeroEndpoint":[3958],"ILayerZeroReceiver":[3972],"ILayerZeroUserApplicationConfig":[4003],"LzApp":[3572],"Ownable":[112],"Ownable2Step":[195]},"id":3573,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3051,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/access/Ownable2Step.sol","file":"@openzeppelin/contracts/access/Ownable2Step.sol","id":3052,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":196,"src":"57:57:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol","file":"./interfaces/ILayerZeroReceiver.sol","id":3053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":3973,"src":"115:45:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./interfaces/ILayerZeroUserApplicationConfig.sol","id":3054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":4004,"src":"161:58:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":3055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":3959,"src":"220:45:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LayerZero/util/BytesLib.sol","file":"./util/BytesLib.sol","id":3056,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3573,"sourceUnit":4337,"src":"266:29:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3057,"name":"Ownable2Step","nameLocations":["370:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":195,"src":"370:12:14"},"id":3058,"nodeType":"InheritanceSpecifier","src":"370:12:14"},{"baseName":{"id":3059,"name":"ILayerZeroReceiver","nameLocations":["384:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":3972,"src":"384:18:14"},"id":3060,"nodeType":"InheritanceSpecifier","src":"384:18:14"},{"baseName":{"id":3061,"name":"ILayerZeroUserApplicationConfig","nameLocations":["404:31:14"],"nodeType":"IdentifierPath","referencedDeclaration":4003,"src":"404:31:14"},"id":3062,"nodeType":"InheritanceSpecifier","src":"404:31:14"}],"canonicalName":"LzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":3572,"linearizedBaseContracts":[3572,4003,3972,195,112,320],"name":"LzApp","nameLocation":"361:5:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3065,"libraryName":{"id":3063,"name":"BytesLib","nameLocations":["448:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":4336,"src":"448:8:14"},"nodeType":"UsingForDirective","src":"442:25:14","typeName":{"id":3064,"name":"bytes","nodeType":"ElementaryTypeName","src":"461:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":false,"functionSelector":"b353aaa7","id":3068,"mutability":"immutable","name":"lzEndpoint","nameLocation":"509:10:14","nodeType":"VariableDeclaration","scope":3572,"src":"473:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":3067,"nodeType":"UserDefinedTypeName","pathNode":{"id":3066,"name":"ILayerZeroEndpoint","nameLocations":["473:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":3958,"src":"473:18:14"},"referencedDeclaration":3958,"src":"473:18:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":3072,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"557:19:14","nodeType":"VariableDeclaration","scope":3572,"src":"525:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":3071,"keyType":{"id":3069,"name":"uint16","nodeType":"ElementaryTypeName","src":"533:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"525:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueType":{"id":3070,"name":"bytes","nodeType":"ElementaryTypeName","src":"543:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"8cfd8f5c","id":3078,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"632:15:14","nodeType":"VariableDeclaration","scope":3572,"src":"582:65:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"typeName":{"id":3077,"keyType":{"id":3073,"name":"uint16","nodeType":"ElementaryTypeName","src":"590:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"582:42:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"valueType":{"id":3076,"keyType":{"id":3074,"name":"uint16","nodeType":"ElementaryTypeName","src":"608:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"600:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueType":{"id":3075,"name":"uint","nodeType":"ElementaryTypeName","src":"618:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"950c8a74","id":3080,"mutability":"mutable","name":"precrime","nameLocation":"668:8:14","nodeType":"VariableDeclaration","scope":3572,"src":"653:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b","id":3084,"name":"SetPrecrime","nameLocation":"689:11:14","nodeType":"EventDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"indexed":false,"mutability":"mutable","name":"precrime","nameLocation":"709:8:14","nodeType":"VariableDeclaration","scope":3084,"src":"701:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"700:18:14"},"src":"683:36:14"},{"anonymous":false,"eventSelector":"fa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab","id":3090,"name":"SetTrustedRemote","nameLocation":"730:16:14","nodeType":"EventDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"754:14:14","nodeType":"VariableDeclaration","scope":3090,"src":"747:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3085,"name":"uint16","nodeType":"ElementaryTypeName","src":"747:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3088,"indexed":false,"mutability":"mutable","name":"_path","nameLocation":"776:5:14","nodeType":"VariableDeclaration","scope":3090,"src":"770:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3087,"name":"bytes","nodeType":"ElementaryTypeName","src":"770:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"746:36:14"},"src":"724:59:14"},{"anonymous":false,"eventSelector":"8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce","id":3096,"name":"SetTrustedRemoteAddress","nameLocation":"794:23:14","nodeType":"EventDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"825:14:14","nodeType":"VariableDeclaration","scope":3096,"src":"818:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3091,"name":"uint16","nodeType":"ElementaryTypeName","src":"818:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3094,"indexed":false,"mutability":"mutable","name":"_remoteAddress","nameLocation":"847:14:14","nodeType":"VariableDeclaration","scope":3096,"src":"841:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3093,"name":"bytes","nodeType":"ElementaryTypeName","src":"841:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"817:45:14"},"src":"788:75:14"},{"anonymous":false,"eventSelector":"9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0","id":3104,"name":"SetMinDstGas","nameLocation":"874:12:14","nodeType":"EventDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"indexed":false,"mutability":"mutable","name":"_dstChainId","nameLocation":"894:11:14","nodeType":"VariableDeclaration","scope":3104,"src":"887:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3097,"name":"uint16","nodeType":"ElementaryTypeName","src":"887:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3100,"indexed":false,"mutability":"mutable","name":"_type","nameLocation":"914:5:14","nodeType":"VariableDeclaration","scope":3104,"src":"907:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3099,"name":"uint16","nodeType":"ElementaryTypeName","src":"907:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3102,"indexed":false,"mutability":"mutable","name":"_minDstGas","nameLocation":"926:10:14","nodeType":"VariableDeclaration","scope":3104,"src":"921:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint","nodeType":"ElementaryTypeName","src":"921:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"886:51:14"},"src":"868:70:14"},{"body":{"id":3115,"nodeType":"Block","src":"975:59:14","statements":[{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"985:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3111,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"1017:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3110,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"998:18:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$3958_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"998:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"src":"985:42:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3114,"nodeType":"ExpressionStatement","src":"985:42:14"}]},"id":3116,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"_endpoint","nameLocation":"964:9:14","nodeType":"VariableDeclaration","scope":3116,"src":"956:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"955:19:14"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"975:0:14"},"scope":3572,"src":"944:90:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3971],"body":{"id":3174,"nodeType":"Block","src":"1171:622:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3129,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1254:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3133,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"1278:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}],"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1270:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"1270:7:14","typeDescriptions":{}}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1254:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1291:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""},"value":"LzApp: invalid endpoint caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""}],"id":3128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1246:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3138,"nodeType":"ExpressionStatement","src":"1246:78:14"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"trustedRemote","nameLocation":"1348:13:14","nodeType":"VariableDeclaration","scope":3174,"src":"1335:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3139,"name":"bytes","nodeType":"ElementaryTypeName","src":"1335:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3144,"initialValue":{"baseExpression":{"id":3141,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"1364:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3143,"indexExpression":{"id":3142,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"1384:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1364:32:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1335:61:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3146,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1546:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:6:14","memberName":"length","nodeType":"MemberAccess","src":"1546:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3148,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1568:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1582:6:14","memberName":"length","nodeType":"MemberAccess","src":"1568:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1546:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3151,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1592:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1606:6:14","memberName":"length","nodeType":"MemberAccess","src":"1592:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1592:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1546:70:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3157,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1630:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3156,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1620:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1620:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3160,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"1656:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3159,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1646:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1646:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1620:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1546:124:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e7472616374","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1672:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""},"value":"LzApp: invalid source sending contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1538:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1538:175:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3166,"nodeType":"ExpressionStatement","src":"1538:175:14"},{"expression":{"arguments":[{"id":3168,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"1743:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3169,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1756:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3170,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"1769:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3171,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"1777:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3167,"name":"_blockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"1724:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1724:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3173,"nodeType":"ExpressionStatement","src":"1724:62:14"}]},"functionSelector":"001d3567","id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1049:9:14","nodeType":"FunctionDefinition","overrides":{"id":3126,"nodeType":"OverrideSpecifier","overrides":[],"src":"1162:8:14"},"parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"_srcChainId","nameLocation":"1066:11:14","nodeType":"VariableDeclaration","scope":3175,"src":"1059:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3117,"name":"uint16","nodeType":"ElementaryTypeName","src":"1059:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"_srcAddress","nameLocation":"1094:11:14","nodeType":"VariableDeclaration","scope":3175,"src":"1079:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3119,"name":"bytes","nodeType":"ElementaryTypeName","src":"1079:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"_nonce","nameLocation":"1114:6:14","nodeType":"VariableDeclaration","scope":3175,"src":"1107:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3121,"name":"uint64","nodeType":"ElementaryTypeName","src":"1107:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"_payload","nameLocation":"1137:8:14","nodeType":"VariableDeclaration","scope":3175,"src":"1122:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3123,"name":"bytes","nodeType":"ElementaryTypeName","src":"1122:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1058:88:14"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[],"src":"1171:0:14"},"scope":3572,"src":"1040:753:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":3186,"implemented":false,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"1951:18:14","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"_srcChainId","nameLocation":"1977:11:14","nodeType":"VariableDeclaration","scope":3186,"src":"1970:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3176,"name":"uint16","nodeType":"ElementaryTypeName","src":"1970:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"_srcAddress","nameLocation":"2003:11:14","nodeType":"VariableDeclaration","scope":3186,"src":"1990:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3178,"name":"bytes","nodeType":"ElementaryTypeName","src":"1990:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"_nonce","nameLocation":"2023:6:14","nodeType":"VariableDeclaration","scope":3186,"src":"2016:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3180,"name":"uint64","nodeType":"ElementaryTypeName","src":"2016:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"_payload","nameLocation":"2044:8:14","nodeType":"VariableDeclaration","scope":3186,"src":"2031:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3182,"name":"bytes","nodeType":"ElementaryTypeName","src":"2031:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1969:84:14"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[],"src":"2070:0:14"},"scope":3572,"src":"1942:129:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3228,"nodeType":"Block","src":"2260:308:14","statements":[{"assignments":[3202],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"trustedRemote","nameLocation":"2283:13:14","nodeType":"VariableDeclaration","scope":3228,"src":"2270:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3201,"name":"bytes","nodeType":"ElementaryTypeName","src":"2270:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3206,"initialValue":{"baseExpression":{"id":3203,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2299:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3205,"indexExpression":{"id":3204,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"2319:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2299:32:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2270:61:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3208,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"2349:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2363:6:14","memberName":"length","nodeType":"MemberAccess","src":"2349:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2373:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2349:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2376:50:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""},"value":"LzApp: destination chain is not a trusted source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""}],"id":3207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2341:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:86:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3214,"nodeType":"ExpressionStatement","src":"2341:86:14"},{"expression":{"arguments":[{"id":3220,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"2472:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3221,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"2485:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3222,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"2500:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3223,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"2510:14:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3224,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"2526:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3225,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2546:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3215,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"2437:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2448:4:14","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":3833,"src":"2437:15:14","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3218,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"2460:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2437:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2437:124:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3227,"nodeType":"ExpressionStatement","src":"2437:124:14"}]},"id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"2086:7:14","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"_dstChainId","nameLocation":"2101:11:14","nodeType":"VariableDeclaration","scope":3229,"src":"2094:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3187,"name":"uint16","nodeType":"ElementaryTypeName","src":"2094:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"_payload","nameLocation":"2127:8:14","nodeType":"VariableDeclaration","scope":3229,"src":"2114:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3189,"name":"bytes","nodeType":"ElementaryTypeName","src":"2114:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"_refundAddress","nameLocation":"2153:14:14","nodeType":"VariableDeclaration","scope":3229,"src":"2137:30:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"2137:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"2177:18:14","nodeType":"VariableDeclaration","scope":3229,"src":"2169:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"2169:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"_adapterParams","nameLocation":"2210:14:14","nodeType":"VariableDeclaration","scope":3229,"src":"2197:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3195,"name":"bytes","nodeType":"ElementaryTypeName","src":"2197:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"_nativeFee","nameLocation":"2231:10:14","nodeType":"VariableDeclaration","scope":3229,"src":"2226:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint","nodeType":"ElementaryTypeName","src":"2226:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2093:149:14"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[],"src":"2260:0:14"},"scope":3572,"src":"2077:491:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3270,"nodeType":"Block","src":"2699:290:14","statements":[{"assignments":[3241],"declarations":[{"constant":false,"id":3241,"mutability":"mutable","name":"providedGasLimit","nameLocation":"2714:16:14","nodeType":"VariableDeclaration","scope":3270,"src":"2709:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint","nodeType":"ElementaryTypeName","src":"2709:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3245,"initialValue":{"arguments":[{"id":3243,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"2746:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3242,"name":"_getGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2733:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2709:52:14"},{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"minGasLimit","nameLocation":"2776:11:14","nodeType":"VariableDeclaration","scope":3270,"src":"2771:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint","nodeType":"ElementaryTypeName","src":"2771:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3248,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"2790:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":3250,"indexExpression":{"id":3249,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"2806:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2790:28:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":3252,"indexExpression":{"id":3251,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"2819:5:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2790:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3253,"name":"_extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"2828:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2790:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2771:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"2855:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2869:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2855:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:28:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""},"value":"LzApp: minGasLimit not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""}],"id":3256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2847:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"ExpressionStatement","src":"2847:54:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"providedGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"2919:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3265,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"2939:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2919:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2952:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""},"value":"LzApp: gas limit is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""}],"id":3263,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2911:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2911:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3269,"nodeType":"ExpressionStatement","src":"2911:71:14"}]},"id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGasLimit","nameLocation":"2583:14:14","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"_dstChainId","nameLocation":"2605:11:14","nodeType":"VariableDeclaration","scope":3271,"src":"2598:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3230,"name":"uint16","nodeType":"ElementaryTypeName","src":"2598:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"_type","nameLocation":"2625:5:14","nodeType":"VariableDeclaration","scope":3271,"src":"2618:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3232,"name":"uint16","nodeType":"ElementaryTypeName","src":"2618:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"_adapterParams","nameLocation":"2645:14:14","nodeType":"VariableDeclaration","scope":3271,"src":"2632:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3234,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"_extraGas","nameLocation":"2666:9:14","nodeType":"VariableDeclaration","scope":3271,"src":"2661:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint","nodeType":"ElementaryTypeName","src":"2661:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2597:79:14"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[],"src":"2699:0:14"},"scope":3572,"src":"2574:415:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3287,"nodeType":"Block","src":"3092:169:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3279,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"3110:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3125:6:14","memberName":"length","nodeType":"MemberAccess","src":"3110:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3334","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"3110:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3139:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""},"value":"LzApp: invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""}],"id":3278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3102:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3285,"nodeType":"ExpressionStatement","src":"3102:68:14"},{"AST":{"nodeType":"YulBlock","src":"3189:66:14","statements":[{"nodeType":"YulAssignment","src":"3203:42:14","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"3225:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"3241:2:14","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3221:3:14"},"nodeType":"YulFunctionCall","src":"3221:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3215:5:14"},"nodeType":"YulFunctionCall","src":"3215:30:14"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"3203:8:14"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3273,"isOffset":false,"isSlot":false,"src":"3225:14:14","valueSize":1},{"declaration":3276,"isOffset":false,"isSlot":false,"src":"3203:8:14","valueSize":1}],"id":3286,"nodeType":"InlineAssembly","src":"3180:75:14"}]},"id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasLimit","nameLocation":"3004:12:14","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"_adapterParams","nameLocation":"3030:14:14","nodeType":"VariableDeclaration","scope":3288,"src":"3017:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3272,"name":"bytes","nodeType":"ElementaryTypeName","src":"3017:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3016:29:14"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"gasLimit","nameLocation":"3082:8:14","nodeType":"VariableDeclaration","scope":3288,"src":"3077:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint","nodeType":"ElementaryTypeName","src":"3077:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3076:15:14"},"scope":3572,"src":"2995:266:14","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":3312,"nodeType":"Block","src":"3480:92:14","statements":[{"expression":{"arguments":[{"id":3303,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3518:8:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3304,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"3528:8:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":3307,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3546:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$3572","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$3572","typeString":"contract LzApp"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3538:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"3538:7:14","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3309,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"3553:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3301,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3497:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3508:9:14","memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":3943,"src":"3497:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3300,"id":3311,"nodeType":"Return","src":"3490:75:14"}]},"functionSelector":"f5ecbdbc","id":3313,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"3372:9:14","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"_version","nameLocation":"3389:8:14","nodeType":"VariableDeclaration","scope":3313,"src":"3382:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3289,"name":"uint16","nodeType":"ElementaryTypeName","src":"3382:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"_chainId","nameLocation":"3406:8:14","nodeType":"VariableDeclaration","scope":3313,"src":"3399:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3291,"name":"uint16","nodeType":"ElementaryTypeName","src":"3399:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3313,"src":"3416:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"3416:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"_configType","nameLocation":"3430:11:14","nodeType":"VariableDeclaration","scope":3313,"src":"3425:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint","nodeType":"ElementaryTypeName","src":"3425:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3381:61:14"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3313,"src":"3466:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3298,"name":"bytes","nodeType":"ElementaryTypeName","src":"3466:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3465:14:14"},"scope":3572,"src":"3363:209:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3330,"nodeType":"Block","src":"3737:75:14","statements":[{"expression":{"arguments":[{"id":3325,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"3771:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3326,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"3783:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3327,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"3796:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3322,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3747:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3758:12:14","memberName":"retryPayload","nodeType":"MemberAccess","referencedDeclaration":3897,"src":"3747:23:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory) external"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3747:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3329,"nodeType":"ExpressionStatement","src":"3747:58:14"}]},"functionSelector":"aaff5f16","id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3640:12:14","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"_srcChainId","nameLocation":"3660:11:14","nodeType":"VariableDeclaration","scope":3331,"src":"3653:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3314,"name":"uint16","nodeType":"ElementaryTypeName","src":"3653:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3317,"mutability":"mutable","name":"_srcAddress","nameLocation":"3688:11:14","nodeType":"VariableDeclaration","scope":3331,"src":"3673:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3316,"name":"bytes","nodeType":"ElementaryTypeName","src":"3673:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"_payload","nameLocation":"3716:8:14","nodeType":"VariableDeclaration","scope":3331,"src":"3701:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3318,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3652:73:14"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[],"src":"3737:0:14"},"scope":3572,"src":"3631:181:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3345,"nodeType":"Block","src":"3903:69:14","statements":[{"expression":{"arguments":[{"id":3341,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"3941:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3342,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"3953:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3338,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"3913:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3924:16:14","memberName":"hasStoredPayload","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"3913:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint16,bytes memory) view external returns (bool)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3344,"nodeType":"ExpressionStatement","src":"3913:52:14"}]},"functionSelector":"0eaf6ea6","id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"3827:16:14","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"_srcChainId","nameLocation":"3851:11:14","nodeType":"VariableDeclaration","scope":3346,"src":"3844:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3332,"name":"uint16","nodeType":"ElementaryTypeName","src":"3844:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"_srcAddress","nameLocation":"3879:11:14","nodeType":"VariableDeclaration","scope":3346,"src":"3864:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3334,"name":"bytes","nodeType":"ElementaryTypeName","src":"3864:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3843:48:14"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[],"src":"3903:0:14"},"scope":3572,"src":"3818:154:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3985],"body":{"id":3369,"nodeType":"Block","src":"4106:79:14","statements":[{"expression":{"arguments":[{"id":3363,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4137:8:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3364,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"4147:8:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3365,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"4157:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3366,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"4170:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3360,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4116:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4127:9:14","memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"4116:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4116:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3368,"nodeType":"ExpressionStatement","src":"4116:62:14"}]},"functionSelector":"cbed8b9c","id":3370,"implemented":true,"kind":"function","modifiers":[{"id":3358,"kind":"modifierInvocation","modifierName":{"id":3357,"name":"onlyOwner","nameLocations":["4096:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4096:9:14"},"nodeType":"ModifierInvocation","src":"4096:9:14"}],"name":"setConfig","nameLocation":"3992:9:14","nodeType":"FunctionDefinition","overrides":{"id":3356,"nodeType":"OverrideSpecifier","overrides":[],"src":"4087:8:14"},"parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"_version","nameLocation":"4009:8:14","nodeType":"VariableDeclaration","scope":3370,"src":"4002:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3347,"name":"uint16","nodeType":"ElementaryTypeName","src":"4002:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"_chainId","nameLocation":"4026:8:14","nodeType":"VariableDeclaration","scope":3370,"src":"4019:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3349,"name":"uint16","nodeType":"ElementaryTypeName","src":"4019:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"_configType","nameLocation":"4041:11:14","nodeType":"VariableDeclaration","scope":3370,"src":"4036:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint","nodeType":"ElementaryTypeName","src":"4036:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"_config","nameLocation":"4069:7:14","nodeType":"VariableDeclaration","scope":3370,"src":"4054:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3353,"name":"bytes","nodeType":"ElementaryTypeName","src":"4054:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4001:76:14"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"4106:0:14"},"scope":3572,"src":"3983:202:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3990],"body":{"id":3384,"nodeType":"Block","src":"4260:52:14","statements":[{"expression":{"arguments":[{"id":3381,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"4296:8:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":3378,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4270:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4281:14:14","memberName":"setSendVersion","nodeType":"MemberAccess","referencedDeclaration":3990,"src":"4270:25:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3383,"nodeType":"ExpressionStatement","src":"4270:35:14"}]},"functionSelector":"07e0db17","id":3385,"implemented":true,"kind":"function","modifiers":[{"id":3376,"kind":"modifierInvocation","modifierName":{"id":3375,"name":"onlyOwner","nameLocations":["4250:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4250:9:14"},"nodeType":"ModifierInvocation","src":"4250:9:14"}],"name":"setSendVersion","nameLocation":"4200:14:14","nodeType":"FunctionDefinition","overrides":{"id":3374,"nodeType":"OverrideSpecifier","overrides":[],"src":"4241:8:14"},"parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"_version","nameLocation":"4222:8:14","nodeType":"VariableDeclaration","scope":3385,"src":"4215:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3371,"name":"uint16","nodeType":"ElementaryTypeName","src":"4215:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4214:17:14"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[],"src":"4260:0:14"},"scope":3572,"src":"4191:121:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3995],"body":{"id":3399,"nodeType":"Block","src":"4390:55:14","statements":[{"expression":{"arguments":[{"id":3396,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"4429:8:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":3393,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4400:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4411:17:14","memberName":"setReceiveVersion","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"4400:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3398,"nodeType":"ExpressionStatement","src":"4400:38:14"}]},"functionSelector":"10ddb137","id":3400,"implemented":true,"kind":"function","modifiers":[{"id":3391,"kind":"modifierInvocation","modifierName":{"id":3390,"name":"onlyOwner","nameLocations":["4380:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4380:9:14"},"nodeType":"ModifierInvocation","src":"4380:9:14"}],"name":"setReceiveVersion","nameLocation":"4327:17:14","nodeType":"FunctionDefinition","overrides":{"id":3389,"nodeType":"OverrideSpecifier","overrides":[],"src":"4371:8:14"},"parameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"_version","nameLocation":"4352:8:14","nodeType":"VariableDeclaration","scope":3400,"src":"4345:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3386,"name":"uint16","nodeType":"ElementaryTypeName","src":"4345:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4344:17:14"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[],"src":"4390:0:14"},"scope":3572,"src":"4318:127:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4002],"body":{"id":3417,"nodeType":"Block","src":"4555:72:14","statements":[{"expression":{"arguments":[{"id":3413,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"4595:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3414,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"4608:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3410,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4565:10:14","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$3958","typeString":"contract ILayerZeroEndpoint"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4576:18:14","memberName":"forceResumeReceive","nodeType":"MemberAccess","referencedDeclaration":4002,"src":"4565:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory) external"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4565:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"ExpressionStatement","src":"4565:55:14"}]},"functionSelector":"42d65a8d","id":3418,"implemented":true,"kind":"function","modifiers":[{"id":3408,"kind":"modifierInvocation","modifierName":{"id":3407,"name":"onlyOwner","nameLocations":["4545:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4545:9:14"},"nodeType":"ModifierInvocation","src":"4545:9:14"}],"name":"forceResumeReceive","nameLocation":"4460:18:14","nodeType":"FunctionDefinition","overrides":{"id":3406,"nodeType":"OverrideSpecifier","overrides":[],"src":"4536:8:14"},"parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"_srcChainId","nameLocation":"4486:11:14","nodeType":"VariableDeclaration","scope":3418,"src":"4479:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3401,"name":"uint16","nodeType":"ElementaryTypeName","src":"4479:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"_srcAddress","nameLocation":"4514:11:14","nodeType":"VariableDeclaration","scope":3418,"src":"4499:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3403,"name":"bytes","nodeType":"ElementaryTypeName","src":"4499:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4478:48:14"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[],"src":"4555:0:14"},"scope":3572,"src":"4451:176:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3438,"nodeType":"Block","src":"4857:108:14","statements":[{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3427,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4867:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3429,"indexExpression":{"id":3428,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4887:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4867:32:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3430,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4902:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"4867:40:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3432,"nodeType":"ExpressionStatement","src":"4867:40:14"},{"eventCall":{"arguments":[{"id":3434,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4939:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3435,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4952:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3433,"name":"SetTrustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4922:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4922:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3437,"nodeType":"EmitStatement","src":"4917:41:14"}]},"functionSelector":"eb8d72b7","id":3439,"implemented":true,"kind":"function","modifiers":[{"id":3425,"kind":"modifierInvocation","modifierName":{"id":3424,"name":"onlyOwner","nameLocations":["4847:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4847:9:14"},"nodeType":"ModifierInvocation","src":"4847:9:14"}],"name":"setTrustedRemote","nameLocation":"4779:16:14","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"_srcChainId","nameLocation":"4803:11:14","nodeType":"VariableDeclaration","scope":3439,"src":"4796:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3419,"name":"uint16","nodeType":"ElementaryTypeName","src":"4796:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"_path","nameLocation":"4831:5:14","nodeType":"VariableDeclaration","scope":3439,"src":"4816:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3421,"name":"bytes","nodeType":"ElementaryTypeName","src":"4816:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4795:42:14"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[],"src":"4857:0:14"},"scope":3572,"src":"4770:195:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3466,"nodeType":"Block","src":"5077:172:14","statements":[{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3448,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5087:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3450,"indexExpression":{"id":3449,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"5107:14:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5087:35:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3453,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"5142:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":3456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5166:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$3572","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$3572","typeString":"contract LzApp"}],"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5158:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3454,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:14","typeDescriptions":{}}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5158:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3451,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5125:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5129:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"5125:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5125:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5087:85:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3460,"nodeType":"ExpressionStatement","src":"5087:85:14"},{"eventCall":{"arguments":[{"id":3462,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"5211:14:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3463,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"5227:14:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3461,"name":"SetTrustedRemoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"5187:23:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3465,"nodeType":"EmitStatement","src":"5182:60:14"}]},"functionSelector":"a6c3d165","id":3467,"implemented":true,"kind":"function","modifiers":[{"id":3446,"kind":"modifierInvocation","modifierName":{"id":3445,"name":"onlyOwner","nameLocations":["5067:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5067:9:14"},"nodeType":"ModifierInvocation","src":"5067:9:14"}],"name":"setTrustedRemoteAddress","nameLocation":"4980:23:14","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5011:14:14","nodeType":"VariableDeclaration","scope":3467,"src":"5004:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3440,"name":"uint16","nodeType":"ElementaryTypeName","src":"5004:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"_remoteAddress","nameLocation":"5042:14:14","nodeType":"VariableDeclaration","scope":3467,"src":"5027:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3442,"name":"bytes","nodeType":"ElementaryTypeName","src":"5027:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5003:54:14"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[],"src":"5077:0:14"},"scope":3572,"src":"4971:278:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3497,"nodeType":"Block","src":"5348:233:14","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"path","nameLocation":"5371:4:14","nodeType":"VariableDeclaration","scope":3497,"src":"5358:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3474,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3479,"initialValue":{"baseExpression":{"id":3476,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5378:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3478,"indexExpression":{"id":3477,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"5398:14:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5378:35:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5358:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3481,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"5431:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5436:6:14","memberName":"length","nodeType":"MemberAccess","src":"5431:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5446:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5431:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5449:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""},"value":"LzApp: no trusted path record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""}],"id":3480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5423:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3487,"nodeType":"ExpressionStatement","src":"5423:58:14"},{"expression":{"arguments":[{"hexValue":"30","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5509:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3491,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"5512:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5517:6:14","memberName":"length","nodeType":"MemberAccess","src":"5512:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5526:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"5512:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3488,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"5498:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5503:5:14","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":4067,"src":"5498:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3473,"id":3496,"nodeType":"Return","src":"5491:38:14"}]},"functionSelector":"9f38369a","id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedRemoteAddress","nameLocation":"5264:23:14","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5295:14:14","nodeType":"VariableDeclaration","scope":3498,"src":"5288:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3468,"name":"uint16","nodeType":"ElementaryTypeName","src":"5288:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5287:23:14"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"5334:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3471,"name":"bytes","nodeType":"ElementaryTypeName","src":"5334:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5333:14:14"},"scope":3572,"src":"5255:326:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3513,"nodeType":"Block","src":"5646:74:14","statements":[{"expression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3505,"name":"precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"5656:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3506,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"5667:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5656:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3508,"nodeType":"ExpressionStatement","src":"5656:20:14"},{"eventCall":{"arguments":[{"id":3510,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"5703:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3509,"name":"SetPrecrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"5691:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5691:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3512,"nodeType":"EmitStatement","src":"5686:27:14"}]},"functionSelector":"baf3292d","id":3514,"implemented":true,"kind":"function","modifiers":[{"id":3503,"kind":"modifierInvocation","modifierName":{"id":3502,"name":"onlyOwner","nameLocations":["5636:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5636:9:14"},"nodeType":"ModifierInvocation","src":"5636:9:14"}],"name":"setPrecrime","nameLocation":"5596:11:14","nodeType":"FunctionDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"_precrime","nameLocation":"5616:9:14","nodeType":"VariableDeclaration","scope":3514,"src":"5608:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3499,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5607:19:14"},"returnParameters":{"id":3504,"nodeType":"ParameterList","parameters":[],"src":"5646:0:14"},"scope":3572,"src":"5587:133:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3546,"nodeType":"Block","src":"5821:185:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5849:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5839:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c6964206d696e476173","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5852:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_170b524e2f6dce4d59ce169fe07ac17c10010b9aa611a4f22b7dd0fbb2a8548e","typeString":"literal_string \"LzApp: invalid minGas\""},"value":"LzApp: invalid minGas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_170b524e2f6dce4d59ce169fe07ac17c10010b9aa611a4f22b7dd0fbb2a8548e","typeString":"literal_string \"LzApp: invalid minGas\""}],"id":3525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5831:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5831:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3531,"nodeType":"ExpressionStatement","src":"5831:45:14"},{"expression":{"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3532,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5886:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":3535,"indexExpression":{"id":3533,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"5902:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5886:28:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":3536,"indexExpression":{"id":3534,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"5915:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5886:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3537,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5886:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3539,"nodeType":"ExpressionStatement","src":"5886:51:14"},{"eventCall":{"arguments":[{"id":3541,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"5965:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3542,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"5978:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3543,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5991:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3540,"name":"SetMinDstGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5952:12:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,uint256)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3545,"nodeType":"EmitStatement","src":"5947:52:14"}]},"functionSelector":"df2a5b3b","id":3547,"implemented":true,"kind":"function","modifiers":[{"id":3523,"kind":"modifierInvocation","modifierName":{"id":3522,"name":"onlyOwner","nameLocations":["5811:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5811:9:14"},"nodeType":"ModifierInvocation","src":"5811:9:14"}],"name":"setMinDstGas","nameLocation":"5735:12:14","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"_dstChainId","nameLocation":"5755:11:14","nodeType":"VariableDeclaration","scope":3547,"src":"5748:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3515,"name":"uint16","nodeType":"ElementaryTypeName","src":"5748:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"_packetType","nameLocation":"5775:11:14","nodeType":"VariableDeclaration","scope":3547,"src":"5768:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3517,"name":"uint16","nodeType":"ElementaryTypeName","src":"5768:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"_minGas","nameLocation":"5793:7:14","nodeType":"VariableDeclaration","scope":3547,"src":"5788:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint","nodeType":"ElementaryTypeName","src":"5788:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5747:54:14"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[],"src":"5821:0:14"},"scope":3572,"src":"5726:280:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3570,"nodeType":"Block","src":"6203:145:14","statements":[{"assignments":[3557],"declarations":[{"constant":false,"id":3557,"mutability":"mutable","name":"trustedSource","nameLocation":"6226:13:14","nodeType":"VariableDeclaration","scope":3570,"src":"6213:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3556,"name":"bytes","nodeType":"ElementaryTypeName","src":"6213:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3561,"initialValue":{"baseExpression":{"id":3558,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"6242:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":3560,"indexExpression":{"id":3559,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"6262:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6242:32:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6213:61:14"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3563,"name":"trustedSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"6301:13:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3562,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6291:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6291:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3566,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6329:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3565,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6319:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6319:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6291:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3555,"id":3569,"nodeType":"Return","src":"6284:57:14"}]},"functionSelector":"3d8b38f6","id":3571,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedRemote","nameLocation":"6110:15:14","nodeType":"FunctionDefinition","parameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"_srcChainId","nameLocation":"6133:11:14","nodeType":"VariableDeclaration","scope":3571,"src":"6126:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3548,"name":"uint16","nodeType":"ElementaryTypeName","src":"6126:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"_srcAddress","nameLocation":"6161:11:14","nodeType":"VariableDeclaration","scope":3571,"src":"6146:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3550,"name":"bytes","nodeType":"ElementaryTypeName","src":"6146:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6125:48:14"},"returnParameters":{"id":3555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3571,"src":"6197:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3553,"name":"bool","nodeType":"ElementaryTypeName","src":"6197:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6196:6:14"},"scope":3572,"src":"6101:247:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3573,"src":"343:6007:14","usedErrors":[]}],"src":"32:6319:14"},"id":14},"contracts/LayerZero/NonblockingLzApp.sol":{"ast":{"absolutePath":"contracts/LayerZero/NonblockingLzApp.sol","exportedSymbols":{"BytesLib":[4336],"Context":[320],"ExcessivelySafeCall":[4433],"ILayerZeroEndpoint":[3958],"ILayerZeroReceiver":[3972],"ILayerZeroUserApplicationConfig":[4003],"LzApp":[3572],"NonblockingLzApp":[3813],"Ownable":[112],"Ownable2Step":[195]},"id":3814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3574,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:15"},{"absolutePath":"contracts/LayerZero/LzApp.sol","file":"./LzApp.sol","id":3575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3814,"sourceUnit":3573,"src":"58:21:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LayerZero/util/ExcessivelySafeCall.sol","file":"./util/ExcessivelySafeCall.sol","id":3576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3814,"sourceUnit":4434,"src":"80:40:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3577,"name":"LzApp","nameLocations":["504:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":3572,"src":"504:5:15"},"id":3578,"nodeType":"InheritanceSpecifier","src":"504:5:15"}],"canonicalName":"NonblockingLzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":3813,"linearizedBaseContracts":[3813,3572,4003,3972,195,112,320],"name":"NonblockingLzApp","nameLocation":"484:16:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3581,"libraryName":{"id":3579,"name":"ExcessivelySafeCall","nameLocations":["522:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":4433,"src":"522:19:15"},"nodeType":"UsingForDirective","src":"516:38:15","typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":3589,"nodeType":"Block","src":"608:2:15","statements":[]},"id":3590,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3586,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"597:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3587,"kind":"baseConstructorSpecifier","modifierName":{"id":3585,"name":"LzApp","nameLocations":["591:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":3572,"src":"591:5:15"},"nodeType":"ModifierInvocation","src":"591:16:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"_endpoint","nameLocation":"580:9:15","nodeType":"VariableDeclaration","scope":3590,"src":"572:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"571:19:15"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[],"src":"608:0:15"},"scope":3813,"src":"560:50:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"5b8c41e6","id":3598,"mutability":"mutable","name":"failedMessages","nameLocation":"687:14:15","nodeType":"VariableDeclaration","scope":3813,"src":"616:85:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"typeName":{"id":3597,"keyType":{"id":3591,"name":"uint16","nodeType":"ElementaryTypeName","src":"624:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"616:63:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"valueType":{"id":3596,"keyType":{"id":3592,"name":"bytes","nodeType":"ElementaryTypeName","src":"642:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"634:44:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes => mapping(uint64 => bytes32))"},"valueType":{"id":3595,"keyType":{"id":3593,"name":"uint64","nodeType":"ElementaryTypeName","src":"659:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"651:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"},"valueType":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"669:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c","id":3610,"name":"MessageFailed","nameLocation":"714:13:15","nodeType":"EventDefinition","parameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"735:11:15","nodeType":"VariableDeclaration","scope":3610,"src":"728:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3599,"name":"uint16","nodeType":"ElementaryTypeName","src":"728:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3602,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"754:11:15","nodeType":"VariableDeclaration","scope":3610,"src":"748:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3601,"name":"bytes","nodeType":"ElementaryTypeName","src":"748:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3604,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"774:6:15","nodeType":"VariableDeclaration","scope":3610,"src":"767:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3603,"name":"uint64","nodeType":"ElementaryTypeName","src":"767:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3606,"indexed":false,"mutability":"mutable","name":"_payload","nameLocation":"788:8:15","nodeType":"VariableDeclaration","scope":3610,"src":"782:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3605,"name":"bytes","nodeType":"ElementaryTypeName","src":"782:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3608,"indexed":false,"mutability":"mutable","name":"_reason","nameLocation":"804:7:15","nodeType":"VariableDeclaration","scope":3610,"src":"798:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3607,"name":"bytes","nodeType":"ElementaryTypeName","src":"798:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"727:85:15"},"src":"708:105:15"},{"anonymous":false,"eventSelector":"c264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5","id":3620,"name":"RetryMessageSuccess","nameLocation":"824:19:15","nodeType":"EventDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"851:11:15","nodeType":"VariableDeclaration","scope":3620,"src":"844:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3611,"name":"uint16","nodeType":"ElementaryTypeName","src":"844:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3614,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"870:11:15","nodeType":"VariableDeclaration","scope":3620,"src":"864:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3613,"name":"bytes","nodeType":"ElementaryTypeName","src":"864:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3616,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"890:6:15","nodeType":"VariableDeclaration","scope":3620,"src":"883:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3615,"name":"uint64","nodeType":"ElementaryTypeName","src":"883:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3618,"indexed":false,"mutability":"mutable","name":"_payloadHash","nameLocation":"906:12:15","nodeType":"VariableDeclaration","scope":3620,"src":"898:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"898:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"843:76:15"},"src":"818:102:15"},{"baseFunctions":[3186],"body":{"id":3668,"nodeType":"Block","src":"1117:370:15","statements":[{"assignments":[3633,3635],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"success","nameLocation":"1133:7:15","nodeType":"VariableDeclaration","scope":3668,"src":"1128:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3632,"name":"bool","nodeType":"ElementaryTypeName","src":"1128:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"reason","nameLocation":"1155:6:15","nodeType":"VariableDeclaration","scope":3668,"src":"1142:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"1142:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3655,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3641,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1199:7:15","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1199:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313530","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1210:3:15","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},{"arguments":[{"expression":{"expression":{"id":3646,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1238:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$3813","typeString":"contract NonblockingLzApp"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1243:20:15","memberName":"nonblockingLzReceive","nodeType":"MemberAccess","referencedDeclaration":3733,"src":"1238:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1264:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1238:34:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3649,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"1274:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3650,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1287:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3651,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"1300:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3652,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"1308:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3644,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1215:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1219:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1215:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1215:102:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3638,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1173:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$3813","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$3813","typeString":"contract NonblockingLzApp"}],"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1165:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:15","typeDescriptions":{}}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1165:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:19:15","memberName":"excessivelySafeCall","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"1165:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,uint256,uint16,bytes memory) returns (bool,bytes memory)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1165:153:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1127:191:15"},{"condition":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1375:8:15","subExpression":{"id":3656,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"1376:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"nodeType":"IfStatement","src":"1371:110:15","trueBody":{"id":3666,"nodeType":"Block","src":"1385:96:15","statements":[{"expression":{"arguments":[{"id":3659,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"1419:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3660,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1432:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3661,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"1445:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3662,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"1453:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3663,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"1463:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3658,"name":"_storeFailedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"1399:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3665,"nodeType":"ExpressionStatement","src":"1399:71:15"}]}}]},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"988:18:15","nodeType":"FunctionDefinition","overrides":{"id":3630,"nodeType":"OverrideSpecifier","overrides":[],"src":"1108:8:15"},"parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"_srcChainId","nameLocation":"1014:11:15","nodeType":"VariableDeclaration","scope":3669,"src":"1007:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3621,"name":"uint16","nodeType":"ElementaryTypeName","src":"1007:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"_srcAddress","nameLocation":"1040:11:15","nodeType":"VariableDeclaration","scope":3669,"src":"1027:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3623,"name":"bytes","nodeType":"ElementaryTypeName","src":"1027:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"_nonce","nameLocation":"1060:6:15","nodeType":"VariableDeclaration","scope":3669,"src":"1053:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3625,"name":"uint64","nodeType":"ElementaryTypeName","src":"1053:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"_payload","nameLocation":"1081:8:15","nodeType":"VariableDeclaration","scope":3669,"src":"1068:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3627,"name":"bytes","nodeType":"ElementaryTypeName","src":"1068:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1006:84:15"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[],"src":"1117:0:15"},"scope":3813,"src":"979:508:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3702,"nodeType":"Block","src":"1645:168:15","statements":[{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":3682,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"1655:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":3686,"indexExpression":{"id":3683,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"1670:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1655:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":3687,"indexExpression":{"id":3684,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1683:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1655:40:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":3688,"indexExpression":{"id":3685,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1696:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1655:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3690,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"1716:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3689,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1706:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1655:70:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3693,"nodeType":"ExpressionStatement","src":"1655:70:15"},{"eventCall":{"arguments":[{"id":3695,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"1754:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3696,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1767:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3697,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1780:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3698,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"1788:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3699,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"1798:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3694,"name":"MessageFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"1740:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1740:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3701,"nodeType":"EmitStatement","src":"1735:71:15"}]},"id":3703,"implemented":true,"kind":"function","modifiers":[],"name":"_storeFailedMessage","nameLocation":"1502:19:15","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"_srcChainId","nameLocation":"1529:11:15","nodeType":"VariableDeclaration","scope":3703,"src":"1522:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3670,"name":"uint16","nodeType":"ElementaryTypeName","src":"1522:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"_srcAddress","nameLocation":"1555:11:15","nodeType":"VariableDeclaration","scope":3703,"src":"1542:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3672,"name":"bytes","nodeType":"ElementaryTypeName","src":"1542:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"_nonce","nameLocation":"1575:6:15","nodeType":"VariableDeclaration","scope":3703,"src":"1568:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3674,"name":"uint64","nodeType":"ElementaryTypeName","src":"1568:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"_payload","nameLocation":"1596:8:15","nodeType":"VariableDeclaration","scope":3703,"src":"1583:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3676,"name":"bytes","nodeType":"ElementaryTypeName","src":"1583:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3679,"mutability":"mutable","name":"_reason","nameLocation":"1619:7:15","nodeType":"VariableDeclaration","scope":3703,"src":"1606:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3678,"name":"bytes","nodeType":"ElementaryTypeName","src":"1606:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1521:106:15"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[],"src":"1645:0:15"},"scope":3813,"src":"1493:320:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"1952:209:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3715,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2007:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3719,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2031:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$3813","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$3813","typeString":"contract NonblockingLzApp"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2023:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:15","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2023:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2007:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a417070","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2038:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""},"value":"NonblockingLzApp: caller must be LzApp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""}],"id":3714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1999:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1999:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3724,"nodeType":"ExpressionStatement","src":"1999:80:15"},{"expression":{"arguments":[{"id":3726,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"2111:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3727,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"2124:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3728,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"2137:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3729,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"2145:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3725,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2089:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2089:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3731,"nodeType":"ExpressionStatement","src":"2089:65:15"}]},"functionSelector":"66ad5c8a","id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"nonblockingLzReceive","nameLocation":"1828:20:15","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"_srcChainId","nameLocation":"1856:11:15","nodeType":"VariableDeclaration","scope":3733,"src":"1849:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3704,"name":"uint16","nodeType":"ElementaryTypeName","src":"1849:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"_srcAddress","nameLocation":"1884:11:15","nodeType":"VariableDeclaration","scope":3733,"src":"1869:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3706,"name":"bytes","nodeType":"ElementaryTypeName","src":"1869:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"_nonce","nameLocation":"1904:6:15","nodeType":"VariableDeclaration","scope":3733,"src":"1897:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3708,"name":"uint64","nodeType":"ElementaryTypeName","src":"1897:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"_payload","nameLocation":"1927:8:15","nodeType":"VariableDeclaration","scope":3733,"src":"1912:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3710,"name":"bytes","nodeType":"ElementaryTypeName","src":"1912:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1848:88:15"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[],"src":"1952:0:15"},"scope":3813,"src":"1819:342:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":3744,"implemented":false,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"2213:21:15","nodeType":"FunctionDefinition","parameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"_srcChainId","nameLocation":"2242:11:15","nodeType":"VariableDeclaration","scope":3744,"src":"2235:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3734,"name":"uint16","nodeType":"ElementaryTypeName","src":"2235:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"_srcAddress","nameLocation":"2268:11:15","nodeType":"VariableDeclaration","scope":3744,"src":"2255:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3736,"name":"bytes","nodeType":"ElementaryTypeName","src":"2255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"_nonce","nameLocation":"2288:6:15","nodeType":"VariableDeclaration","scope":3744,"src":"2281:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3738,"name":"uint64","nodeType":"ElementaryTypeName","src":"2281:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"_payload","nameLocation":"2309:8:15","nodeType":"VariableDeclaration","scope":3744,"src":"2296:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3740,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2234:84:15"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[],"src":"2335:0:15"},"scope":3813,"src":"2204:132:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3811,"nodeType":"Block","src":"2475:624:15","statements":[{"assignments":[3756],"declarations":[{"constant":false,"id":3756,"mutability":"mutable","name":"payloadHash","nameLocation":"2537:11:15","nodeType":"VariableDeclaration","scope":3811,"src":"2529:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2529:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3764,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":3757,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"2551:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":3759,"indexExpression":{"id":3758,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"2566:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":3761,"indexExpression":{"id":3760,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2579:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:40:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":3763,"indexExpression":{"id":3762,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"2592:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2551:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2529:70:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"2617:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2640:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:15","typeDescriptions":{}}},"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2617:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373616765","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2644:37:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""},"value":"NonblockingLzApp: no stored message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""}],"id":3765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2609:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2609:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3774,"nodeType":"ExpressionStatement","src":"2609:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3777,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"2710:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3776,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2700:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3779,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"2723:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2700:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6164","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2736:35:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""},"value":"NonblockingLzApp: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""}],"id":3775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2692:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3783,"nodeType":"ExpressionStatement","src":"2692:80:15"},{"expression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":3784,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"2818:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":3788,"indexExpression":{"id":3785,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"2833:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2818:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":3789,"indexExpression":{"id":3786,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2846:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2818:40:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":3790,"indexExpression":{"id":3787,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"2859:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2818:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2877:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2869:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2869:7:15","typeDescriptions":{}}},"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2818:61:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3796,"nodeType":"ExpressionStatement","src":"2818:61:15"},{"expression":{"arguments":[{"id":3798,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"2968:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3799,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2981:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3800,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"2994:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3801,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"3002:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3797,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2946:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2946:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3803,"nodeType":"ExpressionStatement","src":"2946:65:15"},{"eventCall":{"arguments":[{"id":3805,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"3046:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3806,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"3059:11:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3807,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"3072:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3808,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"3080:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3804,"name":"RetryMessageSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"3026:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes32_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes32)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3810,"nodeType":"EmitStatement","src":"3021:71:15"}]},"functionSelector":"d1deba1f","id":3812,"implemented":true,"kind":"function","modifiers":[],"name":"retryMessage","nameLocation":"2351:12:15","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"_srcChainId","nameLocation":"2371:11:15","nodeType":"VariableDeclaration","scope":3812,"src":"2364:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3745,"name":"uint16","nodeType":"ElementaryTypeName","src":"2364:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"_srcAddress","nameLocation":"2399:11:15","nodeType":"VariableDeclaration","scope":3812,"src":"2384:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3747,"name":"bytes","nodeType":"ElementaryTypeName","src":"2384:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"_nonce","nameLocation":"2419:6:15","nodeType":"VariableDeclaration","scope":3812,"src":"2412:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3749,"name":"uint64","nodeType":"ElementaryTypeName","src":"2412:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"_payload","nameLocation":"2442:8:15","nodeType":"VariableDeclaration","scope":3812,"src":"2427:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3751,"name":"bytes","nodeType":"ElementaryTypeName","src":"2427:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2363:88:15"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[],"src":"2475:0:15"},"scope":3813,"src":"2342:757:15","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":3814,"src":"466:2635:15","usedErrors":[]}],"src":"33:3069:15"},"id":15},"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[3958],"ILayerZeroUserApplicationConfig":[4003]},"id":3959,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3815,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./ILayerZeroUserApplicationConfig.sol","id":3816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3959,"sourceUnit":4004,"src":"59:47:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3817,"name":"ILayerZeroUserApplicationConfig","nameLocations":["140:31:16"],"nodeType":"IdentifierPath","referencedDeclaration":4003,"src":"140:31:16"},"id":3818,"nodeType":"InheritanceSpecifier","src":"140:31:16"}],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3958,"linearizedBaseContracts":[3958,4003],"name":"ILayerZeroEndpoint","nameLocation":"118:18:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":3833,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"923:4:16","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"_dstChainId","nameLocation":"935:11:16","nodeType":"VariableDeclaration","scope":3833,"src":"928:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3819,"name":"uint16","nodeType":"ElementaryTypeName","src":"928:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"_destination","nameLocation":"963:12:16","nodeType":"VariableDeclaration","scope":3833,"src":"948:27:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3821,"name":"bytes","nodeType":"ElementaryTypeName","src":"948:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"_payload","nameLocation":"992:8:16","nodeType":"VariableDeclaration","scope":3833,"src":"977:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3823,"name":"bytes","nodeType":"ElementaryTypeName","src":"977:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"_refundAddress","nameLocation":"1018:14:16","nodeType":"VariableDeclaration","scope":3833,"src":"1002:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"1002:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"1042:18:16","nodeType":"VariableDeclaration","scope":3833,"src":"1034:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3827,"name":"address","nodeType":"ElementaryTypeName","src":"1034:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"_adapterParams","nameLocation":"1077:14:16","nodeType":"VariableDeclaration","scope":3833,"src":"1062:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3829,"name":"bytes","nodeType":"ElementaryTypeName","src":"1062:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"927:165:16"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[],"src":"1109:0:16"},"scope":3958,"src":"914:196:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":3848,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1602:14:16","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"_srcChainId","nameLocation":"1624:11:16","nodeType":"VariableDeclaration","scope":3848,"src":"1617:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3834,"name":"uint16","nodeType":"ElementaryTypeName","src":"1617:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"_srcAddress","nameLocation":"1652:11:16","nodeType":"VariableDeclaration","scope":3848,"src":"1637:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"_dstAddress","nameLocation":"1673:11:16","nodeType":"VariableDeclaration","scope":3848,"src":"1665:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3838,"name":"address","nodeType":"ElementaryTypeName","src":"1665:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"_nonce","nameLocation":"1693:6:16","nodeType":"VariableDeclaration","scope":3848,"src":"1686:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3840,"name":"uint64","nodeType":"ElementaryTypeName","src":"1686:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"_gasLimit","nameLocation":"1706:9:16","nodeType":"VariableDeclaration","scope":3848,"src":"1701:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint","nodeType":"ElementaryTypeName","src":"1701:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"_payload","nameLocation":"1732:8:16","nodeType":"VariableDeclaration","scope":3848,"src":"1717:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3844,"name":"bytes","nodeType":"ElementaryTypeName","src":"1717:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1616:125:16"},"returnParameters":{"id":3847,"nodeType":"ParameterList","parameters":[],"src":"1750:0:16"},"scope":3958,"src":"1593:158:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":3857,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"1987:15:16","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"_srcChainId","nameLocation":"2010:11:16","nodeType":"VariableDeclaration","scope":3857,"src":"2003:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3849,"name":"uint16","nodeType":"ElementaryTypeName","src":"2003:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"_srcAddress","nameLocation":"2038:11:16","nodeType":"VariableDeclaration","scope":3857,"src":"2023:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3851,"name":"bytes","nodeType":"ElementaryTypeName","src":"2023:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2002:48:16"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3857,"src":"2074:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3854,"name":"uint64","nodeType":"ElementaryTypeName","src":"2074:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2073:8:16"},"scope":3958,"src":"1978:104:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":3866,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2257:16:16","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"_dstChainId","nameLocation":"2281:11:16","nodeType":"VariableDeclaration","scope":3866,"src":"2274:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3858,"name":"uint16","nodeType":"ElementaryTypeName","src":"2274:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"_srcAddress","nameLocation":"2302:11:16","nodeType":"VariableDeclaration","scope":3866,"src":"2294:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3860,"name":"address","nodeType":"ElementaryTypeName","src":"2294:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2273:41:16"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3866,"src":"2338:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3863,"name":"uint64","nodeType":"ElementaryTypeName","src":"2338:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2337:8:16"},"scope":3958,"src":"2248:98:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":3883,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2869:12:16","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"_dstChainId","nameLocation":"2889:11:16","nodeType":"VariableDeclaration","scope":3883,"src":"2882:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3867,"name":"uint16","nodeType":"ElementaryTypeName","src":"2882:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"_userApplication","nameLocation":"2910:16:16","nodeType":"VariableDeclaration","scope":3883,"src":"2902:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"_payload","nameLocation":"2943:8:16","nodeType":"VariableDeclaration","scope":3883,"src":"2928:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3871,"name":"bytes","nodeType":"ElementaryTypeName","src":"2928:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"_payInZRO","nameLocation":"2958:9:16","nodeType":"VariableDeclaration","scope":3883,"src":"2953:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3873,"name":"bool","nodeType":"ElementaryTypeName","src":"2953:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"_adapterParam","nameLocation":"2984:13:16","nodeType":"VariableDeclaration","scope":3883,"src":"2969:28:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3875,"name":"bytes","nodeType":"ElementaryTypeName","src":"2969:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2881:117:16"},"returnParameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"nativeFee","nameLocation":"3027:9:16","nodeType":"VariableDeclaration","scope":3883,"src":"3022:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint","nodeType":"ElementaryTypeName","src":"3022:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"zroFee","nameLocation":"3043:6:16","nodeType":"VariableDeclaration","scope":3883,"src":"3038:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint","nodeType":"ElementaryTypeName","src":"3038:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3021:29:16"},"scope":3958,"src":"2860:191:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3408e470","id":3888,"implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"3129:10:16","nodeType":"FunctionDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[],"src":"3139:2:16"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3888,"src":"3165:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3885,"name":"uint16","nodeType":"ElementaryTypeName","src":"3165:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3164:8:16"},"scope":3958,"src":"3120:53:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaff5f16","id":3897,"implemented":false,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3439:12:16","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"_srcChainId","nameLocation":"3459:11:16","nodeType":"VariableDeclaration","scope":3897,"src":"3452:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3889,"name":"uint16","nodeType":"ElementaryTypeName","src":"3452:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"_srcAddress","nameLocation":"3487:11:16","nodeType":"VariableDeclaration","scope":3897,"src":"3472:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3891,"name":"bytes","nodeType":"ElementaryTypeName","src":"3472:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"_payload","nameLocation":"3515:8:16","nodeType":"VariableDeclaration","scope":3897,"src":"3500:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3893,"name":"bytes","nodeType":"ElementaryTypeName","src":"3500:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3451:73:16"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[],"src":"3533:0:16"},"scope":3958,"src":"3430:104:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0eaf6ea6","id":3906,"implemented":false,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"3746:16:16","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"_srcChainId","nameLocation":"3770:11:16","nodeType":"VariableDeclaration","scope":3906,"src":"3763:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3898,"name":"uint16","nodeType":"ElementaryTypeName","src":"3763:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"_srcAddress","nameLocation":"3798:11:16","nodeType":"VariableDeclaration","scope":3906,"src":"3783:26:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3900,"name":"bytes","nodeType":"ElementaryTypeName","src":"3783:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3762:48:16"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3906,"src":"3834:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3903,"name":"bool","nodeType":"ElementaryTypeName","src":"3834:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3833:6:16"},"scope":3958,"src":"3737:103:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c729da1","id":3913,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"3998:21:16","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"_userApplication","nameLocation":"4028:16:16","nodeType":"VariableDeclaration","scope":3913,"src":"4020:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"4020:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4019:26:16"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"4069:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3910,"name":"address","nodeType":"ElementaryTypeName","src":"4069:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4068:9:16"},"scope":3958,"src":"3989:89:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ba2fd6","id":3920,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"4238:24:16","nodeType":"FunctionDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"_userApplication","nameLocation":"4271:16:16","nodeType":"VariableDeclaration","scope":3920,"src":"4263:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3914,"name":"address","nodeType":"ElementaryTypeName","src":"4263:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4262:26:16"},"returnParameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3920,"src":"4312:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3917,"name":"address","nodeType":"ElementaryTypeName","src":"4312:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4311:9:16"},"scope":3958,"src":"4229:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e97a448a","id":3925,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"4458:16:16","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[],"src":"4474:2:16"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3925,"src":"4500:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3922,"name":"bool","nodeType":"ElementaryTypeName","src":"4500:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4499:6:16"},"scope":3958,"src":"4449:57:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca066b35","id":3930,"implemented":false,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"4646:18:16","nodeType":"FunctionDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[],"src":"4664:2:16"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3930,"src":"4690:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3927,"name":"bool","nodeType":"ElementaryTypeName","src":"4690:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4689:6:16"},"scope":3958,"src":"4637:59:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5ecbdbc","id":3943,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"5103:9:16","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"_version","nameLocation":"5120:8:16","nodeType":"VariableDeclaration","scope":3943,"src":"5113:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3931,"name":"uint16","nodeType":"ElementaryTypeName","src":"5113:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"_chainId","nameLocation":"5137:8:16","nodeType":"VariableDeclaration","scope":3943,"src":"5130:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3933,"name":"uint16","nodeType":"ElementaryTypeName","src":"5130:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"_userApplication","nameLocation":"5155:16:16","nodeType":"VariableDeclaration","scope":3943,"src":"5147:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"5147:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"_configType","nameLocation":"5178:11:16","nodeType":"VariableDeclaration","scope":3943,"src":"5173:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint","nodeType":"ElementaryTypeName","src":"5173:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5112:78:16"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"5214:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3940,"name":"bytes","nodeType":"ElementaryTypeName","src":"5214:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5213:14:16"},"scope":3958,"src":"5094:134:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"096568f6","id":3950,"implemented":false,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"5387:14:16","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"_userApplication","nameLocation":"5410:16:16","nodeType":"VariableDeclaration","scope":3950,"src":"5402:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3944,"name":"address","nodeType":"ElementaryTypeName","src":"5402:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5401:26:16"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"5451:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3947,"name":"uint16","nodeType":"ElementaryTypeName","src":"5451:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5450:8:16"},"scope":3958,"src":"5378:81:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"da1a7c9a","id":3957,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"5623:17:16","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"_userApplication","nameLocation":"5649:16:16","nodeType":"VariableDeclaration","scope":3957,"src":"5641:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5640:26:16"},"returnParameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"5690:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3954,"name":"uint16","nodeType":"ElementaryTypeName","src":"5690:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5689:8:16"},"scope":3958,"src":"5614:84:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3959,"src":"108:5592:16","usedErrors":[]}],"src":"33:5668:16"},"id":16},"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[3972]},"id":3973,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3960,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3972,"linearizedBaseContracts":[3972],"name":"ILayerZeroReceiver","nameLocation":"69:18:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"001d3567","id":3971,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"482:9:17","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"_srcChainId","nameLocation":"499:11:17","nodeType":"VariableDeclaration","scope":3971,"src":"492:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3961,"name":"uint16","nodeType":"ElementaryTypeName","src":"492:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"_srcAddress","nameLocation":"527:11:17","nodeType":"VariableDeclaration","scope":3971,"src":"512:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3963,"name":"bytes","nodeType":"ElementaryTypeName","src":"512:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3966,"mutability":"mutable","name":"_nonce","nameLocation":"547:6:17","nodeType":"VariableDeclaration","scope":3971,"src":"540:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3965,"name":"uint64","nodeType":"ElementaryTypeName","src":"540:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"_payload","nameLocation":"570:8:17","nodeType":"VariableDeclaration","scope":3971,"src":"555:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3967,"name":"bytes","nodeType":"ElementaryTypeName","src":"555:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"491:88:17"},"returnParameters":{"id":3970,"nodeType":"ParameterList","parameters":[],"src":"588:0:17"},"scope":3972,"src":"473:116:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3973,"src":"59:532:17","usedErrors":[]}],"src":"33:559:17"},"id":17},"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol":{"ast":{"absolutePath":"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol","exportedSymbols":{"ILayerZeroUserApplicationConfig":[4003]},"id":4004,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3974,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroUserApplicationConfig","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4003,"linearizedBaseContracts":[4003],"name":"ILayerZeroUserApplicationConfig","nameLocation":"69:31:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cbed8b9c","id":3985,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"512:9:18","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"_version","nameLocation":"529:8:18","nodeType":"VariableDeclaration","scope":3985,"src":"522:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3975,"name":"uint16","nodeType":"ElementaryTypeName","src":"522:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"_chainId","nameLocation":"546:8:18","nodeType":"VariableDeclaration","scope":3985,"src":"539:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3977,"name":"uint16","nodeType":"ElementaryTypeName","src":"539:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"_configType","nameLocation":"561:11:18","nodeType":"VariableDeclaration","scope":3985,"src":"556:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint","nodeType":"ElementaryTypeName","src":"556:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"_config","nameLocation":"589:7:18","nodeType":"VariableDeclaration","scope":3985,"src":"574:22:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3981,"name":"bytes","nodeType":"ElementaryTypeName","src":"574:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"521:76:18"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[],"src":"606:0:18"},"scope":4003,"src":"503:104:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"07e0db17","id":3990,"implemented":false,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"755:14:18","nodeType":"FunctionDefinition","parameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"_version","nameLocation":"777:8:18","nodeType":"VariableDeclaration","scope":3990,"src":"770:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3986,"name":"uint16","nodeType":"ElementaryTypeName","src":"770:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"769:17:18"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[],"src":"795:0:18"},"scope":4003,"src":"746:50:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10ddb137","id":3995,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"949:17:18","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"_version","nameLocation":"974:8:18","nodeType":"VariableDeclaration","scope":3995,"src":"967:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3991,"name":"uint16","nodeType":"ElementaryTypeName","src":"967:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"966:17:18"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[],"src":"992:0:18"},"scope":4003,"src":"940:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42d65a8d","id":4002,"implemented":false,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"1271:18:18","nodeType":"FunctionDefinition","parameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"_srcChainId","nameLocation":"1297:11:18","nodeType":"VariableDeclaration","scope":4002,"src":"1290:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3996,"name":"uint16","nodeType":"ElementaryTypeName","src":"1290:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"_srcAddress","nameLocation":"1325:11:18","nodeType":"VariableDeclaration","scope":4002,"src":"1310:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3998,"name":"bytes","nodeType":"ElementaryTypeName","src":"1310:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1289:48:18"},"returnParameters":{"id":4001,"nodeType":"ParameterList","parameters":[],"src":"1346:0:18"},"scope":4003,"src":"1262:85:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4004,"src":"59:1290:18","usedErrors":[]}],"src":"33:1317:18"},"id":18},"contracts/LayerZero/util/BytesLib.sol":{"ast":{"absolutePath":"contracts/LayerZero/util/BytesLib.sol","exportedSymbols":{"BytesLib":[4336]},"id":4337,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":4005,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:19"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4336,"linearizedBaseContracts":[4336],"name":"BytesLib","nameLocation":"378:8:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4020,"nodeType":"Block","src":"533:2695:19","statements":[{"assignments":[4015],"declarations":[{"constant":false,"id":4015,"mutability":"mutable","name":"tempBytes","nameLocation":"556:9:19","nodeType":"VariableDeclaration","scope":4020,"src":"543:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4014,"name":"bytes","nodeType":"ElementaryTypeName","src":"543:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4016,"nodeType":"VariableDeclarationStatement","src":"543:22:19"},{"AST":{"nodeType":"YulBlock","src":"585:2610:19","statements":[{"nodeType":"YulAssignment","src":"721:24:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"740:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"734:5:19"},"nodeType":"YulFunctionCall","src":"734:11:19"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"721:9:19"}]},{"nodeType":"YulVariableDeclaration","src":"869:30:19","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"889:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"883:5:19"},"nodeType":"YulFunctionCall","src":"883:16:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"873:6:19","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"919:9:19"},{"name":"length","nodeType":"YulIdentifier","src":"930:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"912:6:19"},"nodeType":"YulFunctionCall","src":"912:25:19"},"nodeType":"YulExpressionStatement","src":"912:25:19"},{"nodeType":"YulVariableDeclaration","src":"1135:30:19","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1149:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1160:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1145:3:19"},"nodeType":"YulFunctionCall","src":"1145:20:19"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1139:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1282:26:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1297:2:19"},{"name":"length","nodeType":"YulIdentifier","src":"1301:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1293:3:19"},"nodeType":"YulFunctionCall","src":"1293:15:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1286:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1673:154:19","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1799:2:19"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1809:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1803:5:19"},"nodeType":"YulFunctionCall","src":"1803:9:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:19"},"nodeType":"YulFunctionCall","src":"1792:21:19"},"nodeType":"YulExpressionStatement","src":"1792:21:19"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1510:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"1514:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1507:2:19"},"nodeType":"YulFunctionCall","src":"1507:11:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1519:153:19","statements":[{"nodeType":"YulAssignment","src":"1603:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1613:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"1617:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1609:3:19"},"nodeType":"YulFunctionCall","src":"1609:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1603:2:19"}]},{"nodeType":"YulAssignment","src":"1639:19:19","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1649:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"1653:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1645:3:19"},"nodeType":"YulFunctionCall","src":"1645:13:19"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1639:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"1326:180:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1462:30:19","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1476:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1487:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1472:3:19"},"nodeType":"YulFunctionCall","src":"1472:20:19"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1466:2:19","type":""}]}]},"src":"1322:505:19"},{"nodeType":"YulAssignment","src":"2016:27:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2032:10:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2026:5:19"},"nodeType":"YulFunctionCall","src":"2026:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2016:6:19"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2063:9:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2078:6:19"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2092:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2086:5:19"},"nodeType":"YulFunctionCall","src":"2086:16:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2074:3:19"},"nodeType":"YulFunctionCall","src":"2074:29:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2056:6:19"},"nodeType":"YulFunctionCall","src":"2056:48:19"},"nodeType":"YulExpressionStatement","src":"2056:48:19"},{"nodeType":"YulAssignment","src":"2234:9:19","value":{"name":"end","nodeType":"YulIdentifier","src":"2240:3:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2234:2:19"}]},{"nodeType":"YulAssignment","src":"2362:22:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2373:2:19"},{"name":"length","nodeType":"YulIdentifier","src":"2377:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2369:3:19"},"nodeType":"YulFunctionCall","src":"2369:15:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2362:3:19"}]},{"body":{"nodeType":"YulBlock","src":"2566:53:19","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2591:2:19"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2601:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2595:5:19"},"nodeType":"YulFunctionCall","src":"2595:9:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2584:6:19"},"nodeType":"YulFunctionCall","src":"2584:21:19"},"nodeType":"YulExpressionStatement","src":"2584:21:19"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2469:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"2473:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2466:2:19"},"nodeType":"YulFunctionCall","src":"2466:11:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2478:87:19","statements":[{"nodeType":"YulAssignment","src":"2496:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2506:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"2510:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2502:3:19"},"nodeType":"YulFunctionCall","src":"2502:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2496:2:19"}]},{"nodeType":"YulAssignment","src":"2532:19:19","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2542:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"2546:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:19"},"nodeType":"YulFunctionCall","src":"2538:13:19"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2532:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"2402:63:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2420:31:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2434:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"2446:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:19"},"nodeType":"YulFunctionCall","src":"2430:21:19"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2424:2:19","type":""}]}]},"src":"2398:221:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3031:4:19","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3062:3:19"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3078:6:19"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3092:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3086:5:19"},"nodeType":"YulFunctionCall","src":"3086:16:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3074:3:19"},"nodeType":"YulFunctionCall","src":"3074:29:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3067:6:19"},"nodeType":"YulFunctionCall","src":"3067:37:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3058:3:19"},"nodeType":"YulFunctionCall","src":"3058:47:19"},{"kind":"number","nodeType":"YulLiteral","src":"3107:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3054:3:19"},"nodeType":"YulFunctionCall","src":"3054:56:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3128:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3124:3:19"},"nodeType":"YulFunctionCall","src":"3124:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3037:3:19"},"nodeType":"YulFunctionCall","src":"3037:147:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3024:6:19"},"nodeType":"YulFunctionCall","src":"3024:161:19"},"nodeType":"YulExpressionStatement","src":"3024:161:19"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4009,"isOffset":false,"isSlot":false,"src":"2032:10:19","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"2434:10:19","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"1476:9:19","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"3092:9:19","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"889:9:19","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"1149:9:19","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"2063:9:19","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"2092:9:19","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"721:9:19","valueSize":1},{"declaration":4015,"isOffset":false,"isSlot":false,"src":"919:9:19","valueSize":1}],"id":4017,"nodeType":"InlineAssembly","src":"576:2619:19"},{"expression":{"id":4018,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"3212:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4013,"id":4019,"nodeType":"Return","src":"3205:16:19"}]},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"402:6:19","nodeType":"FunctionDefinition","parameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"_preBytes","nameLocation":"431:9:19","nodeType":"VariableDeclaration","scope":4021,"src":"418:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4006,"name":"bytes","nodeType":"ElementaryTypeName","src":"418:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"_postBytes","nameLocation":"463:10:19","nodeType":"VariableDeclaration","scope":4021,"src":"450:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4008,"name":"bytes","nodeType":"ElementaryTypeName","src":"450:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"408:71:19"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"515:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4011,"name":"bytes","nodeType":"ElementaryTypeName","src":"515:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"514:14:19"},"scope":4336,"src":"393:2835:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4029,"nodeType":"Block","src":"3316:5543:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3335:5518:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3546:34:19","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3565:14:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3559:5:19"},"nodeType":"YulFunctionCall","src":"3559:21:19"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3550:5:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4045:76:19","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4068:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4083:5:19","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4101:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4108:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4097:3:19"},"nodeType":"YulFunctionCall","src":"4097:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4090:6:19"},"nodeType":"YulFunctionCall","src":"4090:21:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4079:3:19"},"nodeType":"YulFunctionCall","src":"4079:33:19"},{"kind":"number","nodeType":"YulLiteral","src":"4114:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4075:3:19"},"nodeType":"YulFunctionCall","src":"4075:41:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4064:3:19"},"nodeType":"YulFunctionCall","src":"4064:53:19"},{"kind":"number","nodeType":"YulLiteral","src":"4119:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:19"},"nodeType":"YulFunctionCall","src":"4060:61:19"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4049:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4134:32:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4155:10:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4149:5:19"},"nodeType":"YulFunctionCall","src":"4149:17:19"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4138:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4179:38:19","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4200:7:19"},{"name":"mlength","nodeType":"YulIdentifier","src":"4209:7:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:19"},"nodeType":"YulFunctionCall","src":"4196:21:19"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4183:9:19","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4538:1193:19","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"4803:14:19"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5079:5:19"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5221:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"5233:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5217:3:19"},"nodeType":"YulFunctionCall","src":"5217:21:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5211:5:19"},"nodeType":"YulFunctionCall","src":"5211:28:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5308:5:19","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5319:2:19","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5323:7:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5315:3:19"},"nodeType":"YulFunctionCall","src":"5315:16:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5304:3:19"},"nodeType":"YulFunctionCall","src":"5304:28:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5144:3:19"},"nodeType":"YulFunctionCall","src":"5144:206:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5491:5:19","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5502:2:19","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5506:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5498:3:19"},"nodeType":"YulFunctionCall","src":"5498:18:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5487:3:19"},"nodeType":"YulFunctionCall","src":"5487:30:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5123:3:19"},"nodeType":"YulFunctionCall","src":"5123:412:19"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"5652:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"5661:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5648:3:19"},"nodeType":"YulFunctionCall","src":"5648:15:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5102:3:19"},"nodeType":"YulFunctionCall","src":"5102:579:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4934:3:19"},"nodeType":"YulFunctionCall","src":"4934:765:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4779:6:19"},"nodeType":"YulFunctionCall","src":"4779:938:19"},"nodeType":"YulExpressionStatement","src":"4779:938:19"}]},"nodeType":"YulCase","src":"4531:1200:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4536:1:19","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"5751:1827:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5948:3:19","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"5953:14:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5941:6:19"},"nodeType":"YulFunctionCall","src":"5941:27:19"},"nodeType":"YulExpressionStatement","src":"5941:27:19"},{"nodeType":"YulVariableDeclaration","src":"5985:53:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6009:3:19","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6014:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5999:9:19"},"nodeType":"YulFunctionCall","src":"5999:20:19"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6025:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"6034:2:19","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6021:3:19"},"nodeType":"YulFunctionCall","src":"6021:16:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5995:3:19"},"nodeType":"YulFunctionCall","src":"5995:43:19"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"5989:2:19","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6094:14:19"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6118:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6129:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6114:3:19"},"nodeType":"YulFunctionCall","src":"6114:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"6133:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6110:3:19"},"nodeType":"YulFunctionCall","src":"6110:25:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6087:6:19"},"nodeType":"YulFunctionCall","src":"6087:49:19"},"nodeType":"YulExpressionStatement","src":"6087:49:19"},{"nodeType":"YulVariableDeclaration","src":"6692:30:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6710:2:19","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"6714:7:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6706:3:19"},"nodeType":"YulFunctionCall","src":"6706:16:19"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"6696:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6739:33:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"6753:10:19"},{"name":"submod","nodeType":"YulIdentifier","src":"6765:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6749:3:19"},"nodeType":"YulFunctionCall","src":"6749:23:19"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"6743:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6789:35:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"6804:10:19"},{"name":"mlength","nodeType":"YulIdentifier","src":"6816:7:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6800:3:19"},"nodeType":"YulFunctionCall","src":"6800:24:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"6793:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6841:38:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6861:5:19","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"6868:6:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"6857:3:19"},"nodeType":"YulFunctionCall","src":"6857:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"6877:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6853:3:19"},"nodeType":"YulFunctionCall","src":"6853:26:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6845:4:19","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"6921:2:19"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"6983:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7006:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6962:3:19"},"nodeType":"YulFunctionCall","src":"6962:128:19"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7118:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7112:5:19"},"nodeType":"YulFunctionCall","src":"7112:9:19"},{"name":"mask","nodeType":"YulIdentifier","src":"7123:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7108:3:19"},"nodeType":"YulFunctionCall","src":"7108:20:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6941:3:19"},"nodeType":"YulFunctionCall","src":"6941:205:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6897:6:19"},"nodeType":"YulFunctionCall","src":"6897:267:19"},"nodeType":"YulExpressionStatement","src":"6897:267:19"},{"body":{"nodeType":"YulBlock","src":"7392:61:19","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7421:2:19"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7431:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7425:5:19"},"nodeType":"YulFunctionCall","src":"7425:9:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7414:6:19"},"nodeType":"YulFunctionCall","src":"7414:21:19"},"nodeType":"YulExpressionStatement","src":"7414:21:19"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7286:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"7290:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7283:2:19"},"nodeType":"YulFunctionCall","src":"7283:11:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7295:96:19","statements":[{"nodeType":"YulAssignment","src":"7317:16:19","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7327:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"7331:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:19"},"nodeType":"YulFunctionCall","src":"7323:10:19"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7317:2:19"}]},{"nodeType":"YulAssignment","src":"7354:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7364:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"7368:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7360:3:19"},"nodeType":"YulFunctionCall","src":"7360:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7354:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"7186:96:19","statements":[{"nodeType":"YulAssignment","src":"7208:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7218:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"7222:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:19"},"nodeType":"YulFunctionCall","src":"7214:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7208:2:19"}]},{"nodeType":"YulAssignment","src":"7248:16:19","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7258:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"7262:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7254:3:19"},"nodeType":"YulFunctionCall","src":"7254:10:19"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7248:2:19"}]}]},"src":"7182:271:19"},{"nodeType":"YulAssignment","src":"7471:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7483:5:19","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7494:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"7498:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7490:3:19"},"nodeType":"YulFunctionCall","src":"7490:12:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7479:3:19"},"nodeType":"YulFunctionCall","src":"7479:24:19"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"7471:4:19"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7528:2:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7546:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7540:5:19"},"nodeType":"YulFunctionCall","src":"7540:9:19"},{"name":"mask","nodeType":"YulIdentifier","src":"7551:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7536:3:19"},"nodeType":"YulFunctionCall","src":"7536:20:19"},{"name":"mask","nodeType":"YulIdentifier","src":"7558:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7532:3:19"},"nodeType":"YulFunctionCall","src":"7532:31:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7521:6:19"},"nodeType":"YulFunctionCall","src":"7521:43:19"},"nodeType":"YulExpressionStatement","src":"7521:43:19"}]},"nodeType":"YulCase","src":"5744:1834:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7599:1244:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7692:3:19","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"7697:14:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7685:6:19"},"nodeType":"YulFunctionCall","src":"7685:27:19"},"nodeType":"YulExpressionStatement","src":"7685:27:19"},{"nodeType":"YulVariableDeclaration","src":"7801:53:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7825:3:19","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"7830:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7815:9:19"},"nodeType":"YulFunctionCall","src":"7815:20:19"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"7841:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"7850:2:19","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7837:3:19"},"nodeType":"YulFunctionCall","src":"7837:16:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7811:3:19"},"nodeType":"YulFunctionCall","src":"7811:43:19"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"7805:2:19","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"7910:14:19"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"7934:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7945:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7930:3:19"},"nodeType":"YulFunctionCall","src":"7930:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"7949:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7926:3:19"},"nodeType":"YulFunctionCall","src":"7926:25:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7903:6:19"},"nodeType":"YulFunctionCall","src":"7903:49:19"},"nodeType":"YulExpressionStatement","src":"7903:49:19"},{"nodeType":"YulVariableDeclaration","src":"8071:34:19","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8093:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"8102:2:19","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8089:3:19"},"nodeType":"YulFunctionCall","src":"8089:16:19"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8075:10:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8122:34:19","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8144:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"8153:2:19","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8140:3:19"},"nodeType":"YulFunctionCall","src":"8140:16:19"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8126:10:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8173:33:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8191:2:19","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8195:10:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8187:3:19"},"nodeType":"YulFunctionCall","src":"8187:19:19"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8177:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8223:33:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8237:10:19"},{"name":"submod","nodeType":"YulIdentifier","src":"8249:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8233:3:19"},"nodeType":"YulFunctionCall","src":"8233:23:19"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8227:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8273:35:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8288:10:19"},{"name":"mlength","nodeType":"YulIdentifier","src":"8300:7:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8284:3:19"},"nodeType":"YulFunctionCall","src":"8284:24:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8277:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8325:38:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8345:5:19","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8352:6:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8341:3:19"},"nodeType":"YulFunctionCall","src":"8341:18:19"},{"kind":"number","nodeType":"YulLiteral","src":"8361:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8337:3:19"},"nodeType":"YulFunctionCall","src":"8337:26:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8329:4:19","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8388:2:19"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8402:2:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8396:5:19"},"nodeType":"YulFunctionCall","src":"8396:9:19"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8417:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8411:5:19"},"nodeType":"YulFunctionCall","src":"8411:9:19"},{"name":"mask","nodeType":"YulIdentifier","src":"8422:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8407:3:19"},"nodeType":"YulFunctionCall","src":"8407:20:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8392:3:19"},"nodeType":"YulFunctionCall","src":"8392:36:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8381:6:19"},"nodeType":"YulFunctionCall","src":"8381:48:19"},"nodeType":"YulExpressionStatement","src":"8381:48:19"},{"body":{"nodeType":"YulBlock","src":"8657:61:19","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8686:2:19"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8696:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8690:5:19"},"nodeType":"YulFunctionCall","src":"8690:9:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8679:6:19"},"nodeType":"YulFunctionCall","src":"8679:21:19"},"nodeType":"YulExpressionStatement","src":"8679:21:19"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8551:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"8555:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8548:2:19"},"nodeType":"YulFunctionCall","src":"8548:11:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8560:96:19","statements":[{"nodeType":"YulAssignment","src":"8582:16:19","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8592:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"8596:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8588:3:19"},"nodeType":"YulFunctionCall","src":"8588:10:19"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8582:2:19"}]},{"nodeType":"YulAssignment","src":"8619:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8629:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"8633:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8625:3:19"},"nodeType":"YulFunctionCall","src":"8625:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"8619:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"8451:96:19","statements":[{"nodeType":"YulAssignment","src":"8473:16:19","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8483:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"8487:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8479:3:19"},"nodeType":"YulFunctionCall","src":"8479:10:19"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8473:2:19"}]},{"nodeType":"YulAssignment","src":"8510:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8520:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"8524:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8516:3:19"},"nodeType":"YulFunctionCall","src":"8516:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"8510:2:19"}]}]},"src":"8447:271:19"},{"nodeType":"YulAssignment","src":"8736:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8748:5:19","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8759:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"8763:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8755:3:19"},"nodeType":"YulFunctionCall","src":"8755:12:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8744:3:19"},"nodeType":"YulFunctionCall","src":"8744:24:19"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"8736:4:19"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8793:2:19"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8811:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8805:5:19"},"nodeType":"YulFunctionCall","src":"8805:9:19"},{"name":"mask","nodeType":"YulIdentifier","src":"8816:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8801:3:19"},"nodeType":"YulFunctionCall","src":"8801:20:19"},{"name":"mask","nodeType":"YulIdentifier","src":"8823:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8797:3:19"},"nodeType":"YulFunctionCall","src":"8797:31:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8786:6:19"},"nodeType":"YulFunctionCall","src":"8786:43:19"},"nodeType":"YulExpressionStatement","src":"8786:43:19"}]},"nodeType":"YulCase","src":"7591:1252:19","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4486:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"4495:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4483:2:19"},"nodeType":"YulFunctionCall","src":"4483:15:19"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4503:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4514:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4500:2:19"},"nodeType":"YulFunctionCall","src":"4500:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4479:3:19"},"nodeType":"YulFunctionCall","src":"4479:39:19"},"nodeType":"YulSwitch","src":"4472:4371:19"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4025,"isOffset":false,"isSlot":false,"src":"4155:10:19","valueSize":1},{"declaration":4025,"isOffset":false,"isSlot":false,"src":"5221:10:19","valueSize":1},{"declaration":4025,"isOffset":false,"isSlot":false,"src":"6753:10:19","valueSize":1},{"declaration":4025,"isOffset":false,"isSlot":false,"src":"6804:10:19","valueSize":1},{"declaration":4025,"isOffset":false,"isSlot":false,"src":"8237:10:19","valueSize":1},{"declaration":4025,"isOffset":false,"isSlot":false,"src":"8288:10:19","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":true,"src":"3565:14:19","suffix":"slot","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":true,"src":"4803:14:19","suffix":"slot","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":true,"src":"5953:14:19","suffix":"slot","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":true,"src":"6094:14:19","suffix":"slot","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":true,"src":"7697:14:19","suffix":"slot","valueSize":1},{"declaration":4023,"isOffset":false,"isSlot":true,"src":"7910:14:19","suffix":"slot","valueSize":1}],"id":4028,"nodeType":"InlineAssembly","src":"3326:5527:19"}]},"id":4030,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3243:13:19","nodeType":"FunctionDefinition","parameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"_preBytes","nameLocation":"3271:9:19","nodeType":"VariableDeclaration","scope":4030,"src":"3257:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4022,"name":"bytes","nodeType":"ElementaryTypeName","src":"3257:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"_postBytes","nameLocation":"3295:10:19","nodeType":"VariableDeclaration","scope":4030,"src":"3282:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4024,"name":"bytes","nodeType":"ElementaryTypeName","src":"3282:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3256:50:19"},"returnParameters":{"id":4027,"nodeType":"ParameterList","parameters":[],"src":"3316:0:19"},"scope":4336,"src":"3234:5625:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4066,"nodeType":"Block","src":"9017:2560:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"9035:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9045:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9035:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4045,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"9051:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9035:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9060:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":4041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9027:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9027:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4049,"nodeType":"ExpressionStatement","src":"9027:50:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4051,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"9095:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9102:6:19","memberName":"length","nodeType":"MemberAccess","src":"9095:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4053,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"9112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4054,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"9121:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9112:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9095:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9130:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":4050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9087:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9087:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4059,"nodeType":"ExpressionStatement","src":"9087:63:19"},{"assignments":[4061],"declarations":[{"constant":false,"id":4061,"mutability":"mutable","name":"tempBytes","nameLocation":"9174:9:19","nodeType":"VariableDeclaration","scope":4066,"src":"9161:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4060,"name":"bytes","nodeType":"ElementaryTypeName","src":"9161:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4062,"nodeType":"VariableDeclarationStatement","src":"9161:22:19"},{"AST":{"nodeType":"YulBlock","src":"9203:2341:19","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9259:1888:19","statements":[{"nodeType":"YulAssignment","src":"9407:24:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9426:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9420:5:19"},"nodeType":"YulFunctionCall","src":"9420:11:19"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"9407:9:19"}]},{"nodeType":"YulVariableDeclaration","src":"10023:33:19","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10044:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"10053:2:19","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10040:3:19"},"nodeType":"YulFunctionCall","src":"10040:16:19"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10027:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10361:70:19","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10379:9:19"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"10390:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10375:3:19"},"nodeType":"YulFunctionCall","src":"10375:25:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10406:4:19","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"10419:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10412:6:19"},"nodeType":"YulFunctionCall","src":"10412:17:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10402:3:19"},"nodeType":"YulFunctionCall","src":"10402:28:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10371:3:19"},"nodeType":"YulFunctionCall","src":"10371:60:19"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"10365:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10448:27:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10463:2:19"},{"name":"_length","nodeType":"YulIdentifier","src":"10467:7:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:19"},"nodeType":"YulFunctionCall","src":"10459:16:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"10452:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10849:61:19","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10878:2:19"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"10888:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10882:5:19"},"nodeType":"YulFunctionCall","src":"10882:9:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10871:6:19"},"nodeType":"YulFunctionCall","src":"10871:21:19"},"nodeType":"YulExpressionStatement","src":"10871:21:19"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10740:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"10744:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10737:2:19"},"nodeType":"YulFunctionCall","src":"10737:11:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10749:99:19","statements":[{"nodeType":"YulAssignment","src":"10771:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10781:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"10785:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10777:3:19"},"nodeType":"YulFunctionCall","src":"10777:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"10771:2:19"}]},{"nodeType":"YulAssignment","src":"10811:19:19","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"10821:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"10825:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10817:3:19"},"nodeType":"YulFunctionCall","src":"10817:13:19"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"10811:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"10497:239:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10638:80:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"10660:6:19"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"10668:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10656:3:19"},"nodeType":"YulFunctionCall","src":"10656:22:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10684:4:19","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"10697:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10690:6:19"},"nodeType":"YulFunctionCall","src":"10690:17:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10680:3:19"},"nodeType":"YulFunctionCall","src":"10680:28:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10652:3:19"},"nodeType":"YulFunctionCall","src":"10652:57:19"},{"name":"_start","nodeType":"YulIdentifier","src":"10711:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10648:3:19"},"nodeType":"YulFunctionCall","src":"10648:70:19"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"10642:2:19","type":""}]}]},"src":"10493:417:19"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10935:9:19"},{"name":"_length","nodeType":"YulIdentifier","src":"10946:7:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10928:6:19"},"nodeType":"YulFunctionCall","src":"10928:26:19"},"nodeType":"YulExpressionStatement","src":"10928:26:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11101:4:19","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11115:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"11119:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11111:3:19"},"nodeType":"YulFunctionCall","src":"11111:11:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11128:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11124:3:19"},"nodeType":"YulFunctionCall","src":"11124:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11107:3:19"},"nodeType":"YulFunctionCall","src":"11107:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11094:6:19"},"nodeType":"YulFunctionCall","src":"11094:39:19"},"nodeType":"YulExpressionStatement","src":"11094:39:19"}]},"nodeType":"YulCase","src":"9252:1895:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9257:1:19","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11251:283:19","statements":[{"nodeType":"YulAssignment","src":"11269:24:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11288:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11282:5:19"},"nodeType":"YulFunctionCall","src":"11282:11:19"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11269:9:19"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11455:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11466:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11448:6:19"},"nodeType":"YulFunctionCall","src":"11448:20:19"},"nodeType":"YulExpressionStatement","src":"11448:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11493:4:19","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11503:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11514:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11499:3:19"},"nodeType":"YulFunctionCall","src":"11499:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11486:6:19"},"nodeType":"YulFunctionCall","src":"11486:34:19"},"nodeType":"YulExpressionStatement","src":"11486:34:19"}]},"nodeType":"YulCase","src":"11243:291:19","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9231:7:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9224:6:19"},"nodeType":"YulFunctionCall","src":"9224:15:19"},"nodeType":"YulSwitch","src":"9217:2317:19"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4032,"isOffset":false,"isSlot":false,"src":"10660:6:19","valueSize":1},{"declaration":4036,"isOffset":false,"isSlot":false,"src":"10044:7:19","valueSize":1},{"declaration":4036,"isOffset":false,"isSlot":false,"src":"10467:7:19","valueSize":1},{"declaration":4036,"isOffset":false,"isSlot":false,"src":"10946:7:19","valueSize":1},{"declaration":4036,"isOffset":false,"isSlot":false,"src":"9231:7:19","valueSize":1},{"declaration":4034,"isOffset":false,"isSlot":false,"src":"10711:6:19","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"10379:9:19","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"10935:9:19","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"11269:9:19","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"11455:9:19","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"11503:9:19","valueSize":1},{"declaration":4061,"isOffset":false,"isSlot":false,"src":"9407:9:19","valueSize":1}],"id":4063,"nodeType":"InlineAssembly","src":"9194:2350:19"},{"expression":{"id":4064,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"11561:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4040,"id":4065,"nodeType":"Return","src":"11554:16:19"}]},"id":4067,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"8874:5:19","nodeType":"FunctionDefinition","parameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"_bytes","nameLocation":"8902:6:19","nodeType":"VariableDeclaration","scope":4067,"src":"8889:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4031,"name":"bytes","nodeType":"ElementaryTypeName","src":"8889:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"_start","nameLocation":"8926:6:19","nodeType":"VariableDeclaration","scope":4067,"src":"8918:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"8918:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"_length","nameLocation":"8950:7:19","nodeType":"VariableDeclaration","scope":4067,"src":"8942:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"8942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8879:84:19"},"returnParameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4067,"src":"8999:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4038,"name":"bytes","nodeType":"ElementaryTypeName","src":"8999:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8998:14:19"},"scope":4336,"src":"8865:2712:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4092,"nodeType":"Block","src":"11671:266:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4077,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"11689:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11696:6:19","memberName":"length","nodeType":"MemberAccess","src":"11689:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"11706:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"11706:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11689:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11719:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":4076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11681:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11681:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4085,"nodeType":"ExpressionStatement","src":"11681:62:19"},{"assignments":[4087],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"tempAddress","nameLocation":"11761:11:19","nodeType":"VariableDeclaration","scope":4092,"src":"11753:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4086,"name":"address","nodeType":"ElementaryTypeName","src":"11753:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4088,"nodeType":"VariableDeclarationStatement","src":"11753:19:19"},{"AST":{"nodeType":"YulBlock","src":"11792:110:19","statements":[{"nodeType":"YulAssignment","src":"11806:86:19","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11839:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11847:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11835:3:19"},"nodeType":"YulFunctionCall","src":"11835:17:19"},{"name":"_start","nodeType":"YulIdentifier","src":"11854:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11831:3:19"},"nodeType":"YulFunctionCall","src":"11831:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11825:5:19"},"nodeType":"YulFunctionCall","src":"11825:37:19"},{"kind":"number","nodeType":"YulLiteral","src":"11864:27:19","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11821:3:19"},"nodeType":"YulFunctionCall","src":"11821:71:19"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"11806:11:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4069,"isOffset":false,"isSlot":false,"src":"11839:6:19","valueSize":1},{"declaration":4071,"isOffset":false,"isSlot":false,"src":"11854:6:19","valueSize":1},{"declaration":4087,"isOffset":false,"isSlot":false,"src":"11806:11:19","valueSize":1}],"id":4089,"nodeType":"InlineAssembly","src":"11783:119:19"},{"expression":{"id":4090,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11919:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4075,"id":4091,"nodeType":"Return","src":"11912:18:19"}]},"id":4093,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"11592:9:19","nodeType":"FunctionDefinition","parameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"_bytes","nameLocation":"11615:6:19","nodeType":"VariableDeclaration","scope":4093,"src":"11602:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4068,"name":"bytes","nodeType":"ElementaryTypeName","src":"11602:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"_start","nameLocation":"11631:6:19","nodeType":"VariableDeclaration","scope":4093,"src":"11623:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"11623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:37:19"},"returnParameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4093,"src":"11662:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4073,"name":"address","nodeType":"ElementaryTypeName","src":"11662:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11661:9:19"},"scope":4336,"src":"11583:354:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4118,"nodeType":"Block","src":"12027:218:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4103,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"12045:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12052:6:19","memberName":"length","nodeType":"MemberAccess","src":"12045:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"12062:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12071:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12062:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12045:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12075:21:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":4102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12037:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4111,"nodeType":"ExpressionStatement","src":"12037:60:19"},{"assignments":[4113],"declarations":[{"constant":false,"id":4113,"mutability":"mutable","name":"tempUint","nameLocation":"12113:8:19","nodeType":"VariableDeclaration","scope":4118,"src":"12107:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4112,"name":"uint8","nodeType":"ElementaryTypeName","src":"12107:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4114,"nodeType":"VariableDeclarationStatement","src":"12107:14:19"},{"AST":{"nodeType":"YulBlock","src":"12141:72:19","statements":[{"nodeType":"YulAssignment","src":"12155:48:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12181:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12189:3:19","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12177:3:19"},"nodeType":"YulFunctionCall","src":"12177:16:19"},{"name":"_start","nodeType":"YulIdentifier","src":"12195:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:19"},"nodeType":"YulFunctionCall","src":"12173:29:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12167:5:19"},"nodeType":"YulFunctionCall","src":"12167:36:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12155:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4095,"isOffset":false,"isSlot":false,"src":"12181:6:19","valueSize":1},{"declaration":4097,"isOffset":false,"isSlot":false,"src":"12195:6:19","valueSize":1},{"declaration":4113,"isOffset":false,"isSlot":false,"src":"12155:8:19","valueSize":1}],"id":4115,"nodeType":"InlineAssembly","src":"12132:81:19"},{"expression":{"id":4116,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"12230:8:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4101,"id":4117,"nodeType":"Return","src":"12223:15:19"}]},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"11952:7:19","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"_bytes","nameLocation":"11973:6:19","nodeType":"VariableDeclaration","scope":4119,"src":"11960:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4094,"name":"bytes","nodeType":"ElementaryTypeName","src":"11960:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"_start","nameLocation":"11989:6:19","nodeType":"VariableDeclaration","scope":4119,"src":"11981:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"11981:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11959:37:19"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"12020:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4099,"name":"uint8","nodeType":"ElementaryTypeName","src":"12020:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12019:7:19"},"scope":4336,"src":"11943:302:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4144,"nodeType":"Block","src":"12337:219:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4129,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"12355:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12362:6:19","memberName":"length","nodeType":"MemberAccess","src":"12355:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"12372:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12381:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12372:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12355:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12384:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":4128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12347:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12347:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4137,"nodeType":"ExpressionStatement","src":"12347:60:19"},{"assignments":[4139],"declarations":[{"constant":false,"id":4139,"mutability":"mutable","name":"tempUint","nameLocation":"12424:8:19","nodeType":"VariableDeclaration","scope":4144,"src":"12417:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4138,"name":"uint16","nodeType":"ElementaryTypeName","src":"12417:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":4140,"nodeType":"VariableDeclarationStatement","src":"12417:15:19"},{"AST":{"nodeType":"YulBlock","src":"12452:72:19","statements":[{"nodeType":"YulAssignment","src":"12466:48:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12492:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12500:3:19","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12488:3:19"},"nodeType":"YulFunctionCall","src":"12488:16:19"},{"name":"_start","nodeType":"YulIdentifier","src":"12506:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12484:3:19"},"nodeType":"YulFunctionCall","src":"12484:29:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12478:5:19"},"nodeType":"YulFunctionCall","src":"12478:36:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12466:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4121,"isOffset":false,"isSlot":false,"src":"12492:6:19","valueSize":1},{"declaration":4123,"isOffset":false,"isSlot":false,"src":"12506:6:19","valueSize":1},{"declaration":4139,"isOffset":false,"isSlot":false,"src":"12466:8:19","valueSize":1}],"id":4141,"nodeType":"InlineAssembly","src":"12443:81:19"},{"expression":{"id":4142,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"12541:8:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4127,"id":4143,"nodeType":"Return","src":"12534:15:19"}]},"id":4145,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12260:8:19","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"_bytes","nameLocation":"12282:6:19","nodeType":"VariableDeclaration","scope":4145,"src":"12269:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4120,"name":"bytes","nodeType":"ElementaryTypeName","src":"12269:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4123,"mutability":"mutable","name":"_start","nameLocation":"12298:6:19","nodeType":"VariableDeclaration","scope":4145,"src":"12290:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"12290:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12268:37:19"},"returnParameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4145,"src":"12329:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4125,"name":"uint16","nodeType":"ElementaryTypeName","src":"12329:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12328:8:19"},"scope":4336,"src":"12251:305:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4170,"nodeType":"Block","src":"12648:219:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4155,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"12666:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12673:6:19","memberName":"length","nodeType":"MemberAccess","src":"12666:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12683:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12692:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12683:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12666:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12695:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":4154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12658:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12658:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4163,"nodeType":"ExpressionStatement","src":"12658:60:19"},{"assignments":[4165],"declarations":[{"constant":false,"id":4165,"mutability":"mutable","name":"tempUint","nameLocation":"12735:8:19","nodeType":"VariableDeclaration","scope":4170,"src":"12728:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4164,"name":"uint32","nodeType":"ElementaryTypeName","src":"12728:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4166,"nodeType":"VariableDeclarationStatement","src":"12728:15:19"},{"AST":{"nodeType":"YulBlock","src":"12763:72:19","statements":[{"nodeType":"YulAssignment","src":"12777:48:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12803:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12811:3:19","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12799:3:19"},"nodeType":"YulFunctionCall","src":"12799:16:19"},{"name":"_start","nodeType":"YulIdentifier","src":"12817:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12795:3:19"},"nodeType":"YulFunctionCall","src":"12795:29:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12789:5:19"},"nodeType":"YulFunctionCall","src":"12789:36:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12777:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4147,"isOffset":false,"isSlot":false,"src":"12803:6:19","valueSize":1},{"declaration":4149,"isOffset":false,"isSlot":false,"src":"12817:6:19","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":false,"src":"12777:8:19","valueSize":1}],"id":4167,"nodeType":"InlineAssembly","src":"12754:81:19"},{"expression":{"id":4168,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"12852:8:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4153,"id":4169,"nodeType":"Return","src":"12845:15:19"}]},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"12571:8:19","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"_bytes","nameLocation":"12593:6:19","nodeType":"VariableDeclaration","scope":4171,"src":"12580:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4146,"name":"bytes","nodeType":"ElementaryTypeName","src":"12580:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"_start","nameLocation":"12609:6:19","nodeType":"VariableDeclaration","scope":4171,"src":"12601:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12579:37:19"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"12640:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4151,"name":"uint32","nodeType":"ElementaryTypeName","src":"12640:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"12639:8:19"},"scope":4336,"src":"12562:305:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4196,"nodeType":"Block","src":"12959:219:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4181,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"12977:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12984:6:19","memberName":"length","nodeType":"MemberAccess","src":"12977:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"12994:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12994:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12977:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13006:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":4180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12969:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12969:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4189,"nodeType":"ExpressionStatement","src":"12969:60:19"},{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"tempUint","nameLocation":"13046:8:19","nodeType":"VariableDeclaration","scope":4196,"src":"13039:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4190,"name":"uint64","nodeType":"ElementaryTypeName","src":"13039:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4192,"nodeType":"VariableDeclarationStatement","src":"13039:15:19"},{"AST":{"nodeType":"YulBlock","src":"13074:72:19","statements":[{"nodeType":"YulAssignment","src":"13088:48:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13114:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13122:3:19","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13110:3:19"},"nodeType":"YulFunctionCall","src":"13110:16:19"},{"name":"_start","nodeType":"YulIdentifier","src":"13128:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13106:3:19"},"nodeType":"YulFunctionCall","src":"13106:29:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13100:5:19"},"nodeType":"YulFunctionCall","src":"13100:36:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13088:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4173,"isOffset":false,"isSlot":false,"src":"13114:6:19","valueSize":1},{"declaration":4175,"isOffset":false,"isSlot":false,"src":"13128:6:19","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"13088:8:19","valueSize":1}],"id":4193,"nodeType":"InlineAssembly","src":"13065:81:19"},{"expression":{"id":4194,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"13163:8:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4179,"id":4195,"nodeType":"Return","src":"13156:15:19"}]},"id":4197,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"12882:8:19","nodeType":"FunctionDefinition","parameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"_bytes","nameLocation":"12904:6:19","nodeType":"VariableDeclaration","scope":4197,"src":"12891:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4172,"name":"bytes","nodeType":"ElementaryTypeName","src":"12891:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4175,"mutability":"mutable","name":"_start","nameLocation":"12920:6:19","nodeType":"VariableDeclaration","scope":4197,"src":"12912:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"12912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12890:37:19"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4197,"src":"12951:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4177,"name":"uint64","nodeType":"ElementaryTypeName","src":"12951:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12950:8:19"},"scope":4336,"src":"12873:305:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4222,"nodeType":"Block","src":"13270:220:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4207,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"13288:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13295:6:19","memberName":"length","nodeType":"MemberAccess","src":"13288:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"13305:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13314:2:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13305:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13288:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13318:22:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":4206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13280:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13280:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4215,"nodeType":"ExpressionStatement","src":"13280:61:19"},{"assignments":[4217],"declarations":[{"constant":false,"id":4217,"mutability":"mutable","name":"tempUint","nameLocation":"13358:8:19","nodeType":"VariableDeclaration","scope":4222,"src":"13351:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4216,"name":"uint96","nodeType":"ElementaryTypeName","src":"13351:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4218,"nodeType":"VariableDeclarationStatement","src":"13351:15:19"},{"AST":{"nodeType":"YulBlock","src":"13386:72:19","statements":[{"nodeType":"YulAssignment","src":"13400:48:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13426:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13434:3:19","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13422:3:19"},"nodeType":"YulFunctionCall","src":"13422:16:19"},{"name":"_start","nodeType":"YulIdentifier","src":"13440:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13418:3:19"},"nodeType":"YulFunctionCall","src":"13418:29:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13412:5:19"},"nodeType":"YulFunctionCall","src":"13412:36:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13400:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4199,"isOffset":false,"isSlot":false,"src":"13426:6:19","valueSize":1},{"declaration":4201,"isOffset":false,"isSlot":false,"src":"13440:6:19","valueSize":1},{"declaration":4217,"isOffset":false,"isSlot":false,"src":"13400:8:19","valueSize":1}],"id":4219,"nodeType":"InlineAssembly","src":"13377:81:19"},{"expression":{"id":4220,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"13475:8:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4205,"id":4221,"nodeType":"Return","src":"13468:15:19"}]},"id":4223,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13193:8:19","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"_bytes","nameLocation":"13215:6:19","nodeType":"VariableDeclaration","scope":4223,"src":"13202:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4198,"name":"bytes","nodeType":"ElementaryTypeName","src":"13202:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"_start","nameLocation":"13231:6:19","nodeType":"VariableDeclaration","scope":4223,"src":"13223:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13223:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13201:37:19"},"returnParameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4223,"src":"13262:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4203,"name":"uint96","nodeType":"ElementaryTypeName","src":"13262:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13261:8:19"},"scope":4336,"src":"13184:306:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4248,"nodeType":"Block","src":"13584:223:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4233,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"13602:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13609:6:19","memberName":"length","nodeType":"MemberAccess","src":"13602:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"13619:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13628:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13619:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13602:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13632:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":4232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13594:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13594:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4241,"nodeType":"ExpressionStatement","src":"13594:62:19"},{"assignments":[4243],"declarations":[{"constant":false,"id":4243,"mutability":"mutable","name":"tempUint","nameLocation":"13674:8:19","nodeType":"VariableDeclaration","scope":4248,"src":"13666:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4242,"name":"uint128","nodeType":"ElementaryTypeName","src":"13666:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4244,"nodeType":"VariableDeclarationStatement","src":"13666:16:19"},{"AST":{"nodeType":"YulBlock","src":"13702:73:19","statements":[{"nodeType":"YulAssignment","src":"13716:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13742:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13750:4:19","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13738:3:19"},"nodeType":"YulFunctionCall","src":"13738:17:19"},{"name":"_start","nodeType":"YulIdentifier","src":"13757:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13734:3:19"},"nodeType":"YulFunctionCall","src":"13734:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13728:5:19"},"nodeType":"YulFunctionCall","src":"13728:37:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13716:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4225,"isOffset":false,"isSlot":false,"src":"13742:6:19","valueSize":1},{"declaration":4227,"isOffset":false,"isSlot":false,"src":"13757:6:19","valueSize":1},{"declaration":4243,"isOffset":false,"isSlot":false,"src":"13716:8:19","valueSize":1}],"id":4245,"nodeType":"InlineAssembly","src":"13693:82:19"},{"expression":{"id":4246,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"13792:8:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4231,"id":4247,"nodeType":"Return","src":"13785:15:19"}]},"id":4249,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"13505:9:19","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"_bytes","nameLocation":"13528:6:19","nodeType":"VariableDeclaration","scope":4249,"src":"13515:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4224,"name":"bytes","nodeType":"ElementaryTypeName","src":"13515:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"_start","nameLocation":"13544:6:19","nodeType":"VariableDeclaration","scope":4249,"src":"13536:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13536:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:37:19"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4249,"src":"13575:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4229,"name":"uint128","nodeType":"ElementaryTypeName","src":"13575:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"13574:9:19"},"scope":4336,"src":"13496:311:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4274,"nodeType":"Block","src":"13901:223:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4259,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"13919:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13926:6:19","memberName":"length","nodeType":"MemberAccess","src":"13919:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"13936:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13945:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"13936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13919:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13949:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":4258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13911:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13911:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4267,"nodeType":"ExpressionStatement","src":"13911:62:19"},{"assignments":[4269],"declarations":[{"constant":false,"id":4269,"mutability":"mutable","name":"tempUint","nameLocation":"13991:8:19","nodeType":"VariableDeclaration","scope":4274,"src":"13983:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"13983:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4270,"nodeType":"VariableDeclarationStatement","src":"13983:16:19"},{"AST":{"nodeType":"YulBlock","src":"14019:73:19","statements":[{"nodeType":"YulAssignment","src":"14033:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14059:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"14067:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14055:3:19"},"nodeType":"YulFunctionCall","src":"14055:17:19"},{"name":"_start","nodeType":"YulIdentifier","src":"14074:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14051:3:19"},"nodeType":"YulFunctionCall","src":"14051:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14045:5:19"},"nodeType":"YulFunctionCall","src":"14045:37:19"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14033:8:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4251,"isOffset":false,"isSlot":false,"src":"14059:6:19","valueSize":1},{"declaration":4253,"isOffset":false,"isSlot":false,"src":"14074:6:19","valueSize":1},{"declaration":4269,"isOffset":false,"isSlot":false,"src":"14033:8:19","valueSize":1}],"id":4271,"nodeType":"InlineAssembly","src":"14010:82:19"},{"expression":{"id":4272,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"14109:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4257,"id":4273,"nodeType":"Return","src":"14102:15:19"}]},"id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"13822:9:19","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"_bytes","nameLocation":"13845:6:19","nodeType":"VariableDeclaration","scope":4275,"src":"13832:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4250,"name":"bytes","nodeType":"ElementaryTypeName","src":"13832:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"_start","nameLocation":"13861:6:19","nodeType":"VariableDeclaration","scope":4275,"src":"13853:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"13853:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13831:37:19"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"13892:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"13892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13891:9:19"},"scope":4336,"src":"13813:311:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"14218:232:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4285,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"14236:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14243:6:19","memberName":"length","nodeType":"MemberAccess","src":"14236:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4287,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"14253:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14253:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14236:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14266:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":4284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14228:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14228:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4293,"nodeType":"ExpressionStatement","src":"14228:62:19"},{"assignments":[4295],"declarations":[{"constant":false,"id":4295,"mutability":"mutable","name":"tempBytes32","nameLocation":"14308:11:19","nodeType":"VariableDeclaration","scope":4300,"src":"14300:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14300:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4296,"nodeType":"VariableDeclarationStatement","src":"14300:19:19"},{"AST":{"nodeType":"YulBlock","src":"14339:76:19","statements":[{"nodeType":"YulAssignment","src":"14353:52:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14382:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"14390:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14378:3:19"},"nodeType":"YulFunctionCall","src":"14378:17:19"},{"name":"_start","nodeType":"YulIdentifier","src":"14397:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14374:3:19"},"nodeType":"YulFunctionCall","src":"14374:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14368:5:19"},"nodeType":"YulFunctionCall","src":"14368:37:19"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"14353:11:19"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4277,"isOffset":false,"isSlot":false,"src":"14382:6:19","valueSize":1},{"declaration":4279,"isOffset":false,"isSlot":false,"src":"14397:6:19","valueSize":1},{"declaration":4295,"isOffset":false,"isSlot":false,"src":"14353:11:19","valueSize":1}],"id":4297,"nodeType":"InlineAssembly","src":"14330:85:19"},{"expression":{"id":4298,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"14432:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4283,"id":4299,"nodeType":"Return","src":"14425:18:19"}]},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14139:9:19","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"_bytes","nameLocation":"14162:6:19","nodeType":"VariableDeclaration","scope":4301,"src":"14149:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4276,"name":"bytes","nodeType":"ElementaryTypeName","src":"14149:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4279,"mutability":"mutable","name":"_start","nameLocation":"14178:6:19","nodeType":"VariableDeclaration","scope":4301,"src":"14170:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"14170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14148:37:19"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"14209:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14209:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14208:9:19"},"scope":4336,"src":"14130:320:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"14549:1291:19","statements":[{"assignments":[4311],"declarations":[{"constant":false,"id":4311,"mutability":"mutable","name":"success","nameLocation":"14564:7:19","nodeType":"VariableDeclaration","scope":4317,"src":"14559:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4310,"name":"bool","nodeType":"ElementaryTypeName","src":"14559:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4313,"initialValue":{"hexValue":"74727565","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14574:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"14559:19:19"},{"AST":{"nodeType":"YulBlock","src":"14598:1211:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14612:30:19","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"14632:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14626:5:19"},"nodeType":"YulFunctionCall","src":"14626:16:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14616:6:19","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14771:937:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14984:11:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14994:1:19","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"14988:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15013:30:19","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15027:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15038:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15023:3:19"},"nodeType":"YulFunctionCall","src":"15023:20:19"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15017:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15060:26:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15075:2:19"},{"name":"length","nodeType":"YulIdentifier","src":"15079:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15071:3:19"},"nodeType":"YulFunctionCall","src":"15071:15:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15064:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"15418:276:19","statements":[{"body":{"nodeType":"YulBlock","src":"15550:126:19","statements":[{"nodeType":"YulAssignment","src":"15610:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15621:1:19","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15610:7:19"}]},{"nodeType":"YulAssignment","src":"15647:7:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15653:1:19","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"15647:2:19"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15533:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15527:5:19"},"nodeType":"YulFunctionCall","src":"15527:9:19"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15544:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15538:5:19"},"nodeType":"YulFunctionCall","src":"15538:9:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15524:2:19"},"nodeType":"YulFunctionCall","src":"15524:24:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15517:6:19"},"nodeType":"YulFunctionCall","src":"15517:32:19"},"nodeType":"YulIf","src":"15514:162:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15300:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"15304:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15297:2:19"},"nodeType":"YulFunctionCall","src":"15297:11:19"},{"name":"cb","nodeType":"YulIdentifier","src":"15310:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15293:3:19"},"nodeType":"YulFunctionCall","src":"15293:20:19"},{"kind":"number","nodeType":"YulLiteral","src":"15315:1:19","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15290:2:19"},"nodeType":"YulFunctionCall","src":"15290:27:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15318:99:19","statements":[{"nodeType":"YulAssignment","src":"15340:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15350:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"15354:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15346:3:19"},"nodeType":"YulFunctionCall","src":"15346:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"15340:2:19"}]},{"nodeType":"YulAssignment","src":"15380:19:19","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15390:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"15394:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15386:3:19"},"nodeType":"YulFunctionCall","src":"15386:13:19"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"15380:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"15108:181:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15130:31:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15144:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"15156:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15140:3:19"},"nodeType":"YulFunctionCall","src":"15140:21:19"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15134:2:19","type":""}]}]},"src":"15104:590:19"}]},"nodeType":"YulCase","src":"14764:944:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14769:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15729:70:19","statements":[{"nodeType":"YulAssignment","src":"15773:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15784:1:19","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15773:7:19"}]}]},"nodeType":"YulCase","src":"15721:78:19","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14725:6:19"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"14739:10:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14733:5:19"},"nodeType":"YulFunctionCall","src":"14733:17:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14722:2:19"},"nodeType":"YulFunctionCall","src":"14722:29:19"},"nodeType":"YulSwitch","src":"14715:1084:19"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4305,"isOffset":false,"isSlot":false,"src":"14739:10:19","valueSize":1},{"declaration":4305,"isOffset":false,"isSlot":false,"src":"15144:10:19","valueSize":1},{"declaration":4303,"isOffset":false,"isSlot":false,"src":"14632:9:19","valueSize":1},{"declaration":4303,"isOffset":false,"isSlot":false,"src":"15027:9:19","valueSize":1},{"declaration":4311,"isOffset":false,"isSlot":false,"src":"15610:7:19","valueSize":1},{"declaration":4311,"isOffset":false,"isSlot":false,"src":"15773:7:19","valueSize":1}],"id":4314,"nodeType":"InlineAssembly","src":"14589:1220:19"},{"expression":{"id":4315,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"15826:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4309,"id":4316,"nodeType":"Return","src":"15819:14:19"}]},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"14465:5:19","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"_preBytes","nameLocation":"14484:9:19","nodeType":"VariableDeclaration","scope":4318,"src":"14471:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4302,"name":"bytes","nodeType":"ElementaryTypeName","src":"14471:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4305,"mutability":"mutable","name":"_postBytes","nameLocation":"14508:10:19","nodeType":"VariableDeclaration","scope":4318,"src":"14495:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4304,"name":"bytes","nodeType":"ElementaryTypeName","src":"14495:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14470:49:19"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4318,"src":"14543:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4307,"name":"bool","nodeType":"ElementaryTypeName","src":"14543:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14542:6:19"},"scope":4336,"src":"14456:1384:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"15985:2491:19","statements":[{"assignments":[4328],"declarations":[{"constant":false,"id":4328,"mutability":"mutable","name":"success","nameLocation":"16000:7:19","nodeType":"VariableDeclaration","scope":4334,"src":"15995:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4327,"name":"bool","nodeType":"ElementaryTypeName","src":"15995:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4330,"initialValue":{"hexValue":"74727565","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16010:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"15995:19:19"},{"AST":{"nodeType":"YulBlock","src":"16034:2411:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16089:34:19","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16108:14:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16102:5:19"},"nodeType":"YulFunctionCall","src":"16102:21:19"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16093:5:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16210:76:19","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16233:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16248:5:19","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16266:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16273:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16262:3:19"},"nodeType":"YulFunctionCall","src":"16262:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16255:6:19"},"nodeType":"YulFunctionCall","src":"16255:21:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16244:3:19"},"nodeType":"YulFunctionCall","src":"16244:33:19"},{"kind":"number","nodeType":"YulLiteral","src":"16279:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16240:3:19"},"nodeType":"YulFunctionCall","src":"16240:41:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16229:3:19"},"nodeType":"YulFunctionCall","src":"16229:53:19"},{"kind":"number","nodeType":"YulLiteral","src":"16284:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16225:3:19"},"nodeType":"YulFunctionCall","src":"16225:61:19"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16214:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16299:32:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"16320:10:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16314:5:19"},"nodeType":"YulFunctionCall","src":"16314:17:19"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"16303:7:19","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16451:1893:19","statements":[{"body":{"nodeType":"YulBlock","src":"16750:1580:19","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"16822:332:19","statements":[{"nodeType":"YulAssignment","src":"16911:38:19","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16928:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"16935:5:19","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16924:3:19"},"nodeType":"YulFunctionCall","src":"16924:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"16943:5:19","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16920:3:19"},"nodeType":"YulFunctionCall","src":"16920:29:19"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"16911:5:19"}]},{"body":{"nodeType":"YulBlock","src":"17026:106:19","statements":[{"nodeType":"YulAssignment","src":"17094:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17105:1:19","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17094:7:19"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16988:5:19"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17005:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"17017:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17001:3:19"},"nodeType":"YulFunctionCall","src":"17001:21:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16995:5:19"},"nodeType":"YulFunctionCall","src":"16995:28:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16985:2:19"},"nodeType":"YulFunctionCall","src":"16985:39:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16978:6:19"},"nodeType":"YulFunctionCall","src":"16978:47:19"},"nodeType":"YulIf","src":"16975:157:19"}]},"nodeType":"YulCase","src":"16815:339:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16820:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17183:1129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17436:11:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17446:1:19","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"17440:2:19","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17556:3:19","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"17561:14:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17549:6:19"},"nodeType":"YulFunctionCall","src":"17549:27:19"},"nodeType":"YulExpressionStatement","src":"17549:27:19"},{"nodeType":"YulVariableDeclaration","src":"17601:30:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17621:3:19","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"17626:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17611:9:19"},"nodeType":"YulFunctionCall","src":"17611:20:19"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"17605:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17657:31:19","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17671:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"17683:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17667:3:19"},"nodeType":"YulFunctionCall","src":"17667:21:19"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"17661:2:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17713:27:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"17728:2:19"},{"name":"mlength","nodeType":"YulIdentifier","src":"17732:7:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17724:3:19"},"nodeType":"YulFunctionCall","src":"17724:16:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"17717:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"18040:250:19","statements":[{"body":{"nodeType":"YulBlock","src":"18106:158:19","statements":[{"nodeType":"YulAssignment","src":"18182:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18193:1:19","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18182:7:19"}]},{"nodeType":"YulAssignment","src":"18227:7:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18233:1:19","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"18227:2:19"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18089:2:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18083:5:19"},"nodeType":"YulFunctionCall","src":"18083:9:19"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18100:2:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18094:5:19"},"nodeType":"YulFunctionCall","src":"18094:9:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18080:2:19"},"nodeType":"YulFunctionCall","src":"18080:24:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18073:6:19"},"nodeType":"YulFunctionCall","src":"18073:32:19"},"nodeType":"YulIf","src":"18070:194:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"17901:2:19"},{"name":"end","nodeType":"YulIdentifier","src":"17905:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17898:2:19"},"nodeType":"YulFunctionCall","src":"17898:11:19"},{"name":"cb","nodeType":"YulIdentifier","src":"17911:2:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17894:3:19"},"nodeType":"YulFunctionCall","src":"17894:20:19"},{"kind":"number","nodeType":"YulLiteral","src":"17916:1:19","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17891:2:19"},"nodeType":"YulFunctionCall","src":"17891:27:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17919:120:19","statements":[{"nodeType":"YulAssignment","src":"17949:16:19","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"17959:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"17963:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17955:3:19"},"nodeType":"YulFunctionCall","src":"17955:10:19"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"17949:2:19"}]},{"nodeType":"YulAssignment","src":"17994:19:19","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18004:2:19"},{"kind":"number","nodeType":"YulLiteral","src":"18008:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18000:3:19"},"nodeType":"YulFunctionCall","src":"18000:13:19"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"17994:2:19"}]}]},"pre":{"nodeType":"YulBlock","src":"17888:2:19","statements":[]},"src":"17884:406:19"}]},"nodeType":"YulCase","src":"17175:1137:19","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16782:7:19"},{"kind":"number","nodeType":"YulLiteral","src":"16791:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16779:2:19"},"nodeType":"YulFunctionCall","src":"16779:15:19"},"nodeType":"YulSwitch","src":"16772:1540:19"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16740:7:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16733:6:19"},"nodeType":"YulFunctionCall","src":"16733:15:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16726:6:19"},"nodeType":"YulFunctionCall","src":"16726:23:19"},"nodeType":"YulIf","src":"16723:1607:19"}]},"nodeType":"YulCase","src":"16444:1900:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16449:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18365:70:19","statements":[{"nodeType":"YulAssignment","src":"18409:12:19","value":{"kind":"number","nodeType":"YulLiteral","src":"18420:1:19","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18409:7:19"}]}]},"nodeType":"YulCase","src":"18357:78:19","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16414:7:19"},{"name":"mlength","nodeType":"YulIdentifier","src":"16423:7:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16411:2:19"},"nodeType":"YulFunctionCall","src":"16411:20:19"},"nodeType":"YulSwitch","src":"16404:2031:19"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4322,"isOffset":false,"isSlot":false,"src":"16320:10:19","valueSize":1},{"declaration":4322,"isOffset":false,"isSlot":false,"src":"17005:10:19","valueSize":1},{"declaration":4322,"isOffset":false,"isSlot":false,"src":"17671:10:19","valueSize":1},{"declaration":4320,"isOffset":false,"isSlot":true,"src":"16108:14:19","suffix":"slot","valueSize":1},{"declaration":4320,"isOffset":false,"isSlot":true,"src":"17561:14:19","suffix":"slot","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"17094:7:19","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"18182:7:19","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"18409:7:19","valueSize":1}],"id":4331,"nodeType":"InlineAssembly","src":"16025:2420:19"},{"expression":{"id":4332,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"18462:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4326,"id":4333,"nodeType":"Return","src":"18455:14:19"}]},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"15855:12:19","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"_preBytes","nameLocation":"15891:9:19","nodeType":"VariableDeclaration","scope":4335,"src":"15877:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4319,"name":"bytes","nodeType":"ElementaryTypeName","src":"15877:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"_postBytes","nameLocation":"15923:10:19","nodeType":"VariableDeclaration","scope":4335,"src":"15910:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4321,"name":"bytes","nodeType":"ElementaryTypeName","src":"15910:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15867:72:19"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"15975:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4324,"name":"bool","nodeType":"ElementaryTypeName","src":"15975:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15974:6:19"},"scope":4336,"src":"15846:2630:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4337,"src":"370:18108:19","usedErrors":[]}],"src":"336:18143:19"},"id":19},"contracts/LayerZero/util/ExcessivelySafeCall.sol":{"ast":{"absolutePath":"contracts/LayerZero/util/ExcessivelySafeCall.sol","exportedSymbols":{"ExcessivelySafeCall":[4433]},"id":4434,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4338,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"46:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ExcessivelySafeCall","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4433,"linearizedBaseContracts":[4433],"name":"ExcessivelySafeCall","nameLocation":"80:19:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4341,"mutability":"constant","name":"LOW_28_MASK","nameLocation":"123:11:20","nodeType":"VariableDeclaration","scope":4433,"src":"106:101:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"106:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"141:66:20","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"1295:1063:20","statements":[{"assignments":[4358],"declarations":[{"constant":false,"id":4358,"mutability":"mutable","name":"_toCopy","nameLocation":"1349:7:20","nodeType":"VariableDeclaration","scope":4375,"src":"1341:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4359,"nodeType":"VariableDeclarationStatement","src":"1341:15:20"},{"assignments":[4361],"declarations":[{"constant":false,"id":4361,"mutability":"mutable","name":"_success","nameLocation":"1371:8:20","nodeType":"VariableDeclaration","scope":4375,"src":"1366:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4360,"name":"bool","nodeType":"ElementaryTypeName","src":"1366:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4362,"nodeType":"VariableDeclarationStatement","src":"1366:13:20"},{"assignments":[4364],"declarations":[{"constant":false,"id":4364,"mutability":"mutable","name":"_returnData","nameLocation":"1402:11:20","nodeType":"VariableDeclaration","scope":4375,"src":"1389:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4363,"name":"bytes","nodeType":"ElementaryTypeName","src":"1389:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4369,"initialValue":{"arguments":[{"id":4367,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"1426:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1416:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4365,"name":"bytes","nodeType":"ElementaryTypeName","src":"1420:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1389:46:20"},{"AST":{"nodeType":"YulBlock","src":"1664:648:20","statements":[{"nodeType":"YulAssignment","src":"1678:251:20","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"1708:4:20"},{"name":"_target","nodeType":"YulIdentifier","src":"1733:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"1767:1:20","type":"","value":"0"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1801:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1812:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1797:3:20"},"nodeType":"YulFunctionCall","src":"1797:20:20"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1846:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1840:5:20"},"nodeType":"YulFunctionCall","src":"1840:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"1879:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:20","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1690:4:20"},"nodeType":"YulFunctionCall","src":"1690:239:20"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"1678:8:20"}]},{"nodeType":"YulAssignment","src":"1981:27:20","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1992:14:20"},"nodeType":"YulFunctionCall","src":"1992:16:20"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"1981:7:20"}]},{"body":{"nodeType":"YulBlock","src":"2046:51:20","statements":[{"nodeType":"YulAssignment","src":"2064:19:20","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2075:8:20"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2064:7:20"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2027:7:20"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2036:8:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2024:2:20"},"nodeType":"YulFunctionCall","src":"2024:21:20"},"nodeType":"YulIf","src":"2021:76:20"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2165:11:20"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2178:7:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2158:6:20"},"nodeType":"YulFunctionCall","src":"2158:28:20"},"nodeType":"YulExpressionStatement","src":"2158:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2271:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"2284:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2267:3:20"},"nodeType":"YulFunctionCall","src":"2267:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"2291:1:20","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2294:7:20"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2252:14:20"},"nodeType":"YulFunctionCall","src":"2252:50:20"},"nodeType":"YulExpressionStatement","src":"2252:50:20"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4350,"isOffset":false,"isSlot":false,"src":"1801:9:20","valueSize":1},{"declaration":4350,"isOffset":false,"isSlot":false,"src":"1846:9:20","valueSize":1},{"declaration":4346,"isOffset":false,"isSlot":false,"src":"1708:4:20","valueSize":1},{"declaration":4348,"isOffset":false,"isSlot":false,"src":"2036:8:20","valueSize":1},{"declaration":4348,"isOffset":false,"isSlot":false,"src":"2075:8:20","valueSize":1},{"declaration":4364,"isOffset":false,"isSlot":false,"src":"2165:11:20","valueSize":1},{"declaration":4364,"isOffset":false,"isSlot":false,"src":"2271:11:20","valueSize":1},{"declaration":4361,"isOffset":false,"isSlot":false,"src":"1678:8:20","valueSize":1},{"declaration":4344,"isOffset":false,"isSlot":false,"src":"1733:7:20","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"1981:7:20","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"2027:7:20","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"2064:7:20","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"2178:7:20","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"2294:7:20","valueSize":1}],"id":4370,"nodeType":"InlineAssembly","src":"1655:657:20"},{"expression":{"components":[{"id":4371,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"2329:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4372,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"2339:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2328:23:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4356,"id":4374,"nodeType":"Return","src":"2321:30:20"}]},"documentation":{"id":4342,"nodeType":"StructuredDocumentation","src":"214:899:20","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeCall","nameLocation":"1127:19:20","nodeType":"FunctionDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"_target","nameLocation":"1164:7:20","nodeType":"VariableDeclaration","scope":4376,"src":"1156:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"_gas","nameLocation":"1189:4:20","nodeType":"VariableDeclaration","scope":4376,"src":"1181:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"_maxCopy","nameLocation":"1210:8:20","nodeType":"VariableDeclaration","scope":4376,"src":"1203:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4347,"name":"uint16","nodeType":"ElementaryTypeName","src":"1203:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4350,"mutability":"mutable","name":"_calldata","nameLocation":"1241:9:20","nodeType":"VariableDeclaration","scope":4376,"src":"1228:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4349,"name":"bytes","nodeType":"ElementaryTypeName","src":"1228:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1146:110:20"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4376,"src":"1275:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4352,"name":"bool","nodeType":"ElementaryTypeName","src":"1275:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4376,"src":"1281:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1281:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1274:20:20"},"scope":4433,"src":"1118:1240:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"3456:1039:20","statements":[{"assignments":[4393],"declarations":[{"constant":false,"id":4393,"mutability":"mutable","name":"_toCopy","nameLocation":"3510:7:20","nodeType":"VariableDeclaration","scope":4410,"src":"3502:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3502:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4394,"nodeType":"VariableDeclarationStatement","src":"3502:15:20"},{"assignments":[4396],"declarations":[{"constant":false,"id":4396,"mutability":"mutable","name":"_success","nameLocation":"3532:8:20","nodeType":"VariableDeclaration","scope":4410,"src":"3527:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4395,"name":"bool","nodeType":"ElementaryTypeName","src":"3527:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4397,"nodeType":"VariableDeclarationStatement","src":"3527:13:20"},{"assignments":[4399],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"_returnData","nameLocation":"3563:11:20","nodeType":"VariableDeclaration","scope":4410,"src":"3550:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4398,"name":"bytes","nodeType":"ElementaryTypeName","src":"3550:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4404,"initialValue":{"arguments":[{"id":4402,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"3587:8:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3577:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4400,"name":"bytes","nodeType":"ElementaryTypeName","src":"3581:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3550:46:20"},{"AST":{"nodeType":"YulBlock","src":"3825:624:20","statements":[{"nodeType":"YulAssignment","src":"3839:227:20","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"3875:4:20"},{"name":"_target","nodeType":"YulIdentifier","src":"3900:7:20"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"3938:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3934:3:20"},"nodeType":"YulFunctionCall","src":"3934:20:20"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"3983:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3977:5:20"},"nodeType":"YulFunctionCall","src":"3977:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"4016:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4041:1:20","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"3851:10:20"},"nodeType":"YulFunctionCall","src":"3851:215:20"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"3839:8:20"}]},{"nodeType":"YulAssignment","src":"4118:27:20","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4129:14:20"},"nodeType":"YulFunctionCall","src":"4129:16:20"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4118:7:20"}]},{"body":{"nodeType":"YulBlock","src":"4183:51:20","statements":[{"nodeType":"YulAssignment","src":"4201:19:20","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4212:8:20"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4201:7:20"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4164:7:20"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4173:8:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4161:2:20"},"nodeType":"YulFunctionCall","src":"4161:21:20"},"nodeType":"YulIf","src":"4158:76:20"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4302:11:20"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4315:7:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4295:6:20"},"nodeType":"YulFunctionCall","src":"4295:28:20"},"nodeType":"YulExpressionStatement","src":"4295:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4408:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"4421:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4404:3:20"},"nodeType":"YulFunctionCall","src":"4404:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"4428:1:20","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4431:7:20"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4389:14:20"},"nodeType":"YulFunctionCall","src":"4389:50:20"},"nodeType":"YulExpressionStatement","src":"4389:50:20"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4385,"isOffset":false,"isSlot":false,"src":"3938:9:20","valueSize":1},{"declaration":4385,"isOffset":false,"isSlot":false,"src":"3983:9:20","valueSize":1},{"declaration":4381,"isOffset":false,"isSlot":false,"src":"3875:4:20","valueSize":1},{"declaration":4383,"isOffset":false,"isSlot":false,"src":"4173:8:20","valueSize":1},{"declaration":4383,"isOffset":false,"isSlot":false,"src":"4212:8:20","valueSize":1},{"declaration":4399,"isOffset":false,"isSlot":false,"src":"4302:11:20","valueSize":1},{"declaration":4399,"isOffset":false,"isSlot":false,"src":"4408:11:20","valueSize":1},{"declaration":4396,"isOffset":false,"isSlot":false,"src":"3839:8:20","valueSize":1},{"declaration":4379,"isOffset":false,"isSlot":false,"src":"3900:7:20","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4118:7:20","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4164:7:20","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4201:7:20","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4315:7:20","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4431:7:20","valueSize":1}],"id":4405,"nodeType":"InlineAssembly","src":"3816:633:20"},{"expression":{"components":[{"id":4406,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"4466:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4407,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"4476:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4465:23:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4391,"id":4409,"nodeType":"Return","src":"4458:30:20"}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"2364:899:20","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeStaticCall","nameLocation":"3277:25:20","nodeType":"FunctionDefinition","parameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"_target","nameLocation":"3320:7:20","nodeType":"VariableDeclaration","scope":4411,"src":"3312:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4378,"name":"address","nodeType":"ElementaryTypeName","src":"3312:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4381,"mutability":"mutable","name":"_gas","nameLocation":"3345:4:20","nodeType":"VariableDeclaration","scope":4411,"src":"3337:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"3337:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"_maxCopy","nameLocation":"3366:8:20","nodeType":"VariableDeclaration","scope":4411,"src":"3359:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4382,"name":"uint16","nodeType":"ElementaryTypeName","src":"3359:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4385,"mutability":"mutable","name":"_calldata","nameLocation":"3397:9:20","nodeType":"VariableDeclaration","scope":4411,"src":"3384:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4384,"name":"bytes","nodeType":"ElementaryTypeName","src":"3384:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3302:110:20"},"returnParameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"3436:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4387,"name":"bool","nodeType":"ElementaryTypeName","src":"3436:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"3442:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4389,"name":"bytes","nodeType":"ElementaryTypeName","src":"3442:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3435:20:20"},"scope":4433,"src":"3268:1227:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4431,"nodeType":"Block","src":"5036:367:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4420,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"5054:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5059:6:20","memberName":"length","nodeType":"MemberAccess","src":"5054:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5054:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5046:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4425,"nodeType":"ExpressionStatement","src":"5046:25:20"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"_mask","nameLocation":"5089:5:20","nodeType":"VariableDeclaration","scope":4431,"src":"5081:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4429,"initialValue":{"id":4428,"name":"LOW_28_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5097:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5081:27:20"},{"AST":{"nodeType":"YulBlock","src":"5127:270:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5175:35:20","value":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5198:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"5204:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5194:3:20"},"nodeType":"YulFunctionCall","src":"5194:15:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5188:5:20"},"nodeType":"YulFunctionCall","src":"5188:22:20"},"variables":[{"name":"_word","nodeType":"YulTypedName","src":"5179:5:20","type":""}]},{"nodeType":"YulAssignment","src":"5273:26:20","value":{"arguments":[{"name":"_word","nodeType":"YulIdentifier","src":"5286:5:20"},{"name":"_mask","nodeType":"YulIdentifier","src":"5293:5:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5282:3:20"},"nodeType":"YulFunctionCall","src":"5282:17:20"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5273:5:20"}]},{"nodeType":"YulAssignment","src":"5312:32:20","value":{"arguments":[{"name":"_newSelector","nodeType":"YulIdentifier","src":"5324:12:20"},{"name":"_word","nodeType":"YulIdentifier","src":"5338:5:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5321:2:20"},"nodeType":"YulFunctionCall","src":"5321:23:20"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5312:5:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5368:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"5374:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5364:3:20"},"nodeType":"YulFunctionCall","src":"5364:15:20"},{"name":"_word","nodeType":"YulIdentifier","src":"5381:5:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5357:6:20"},"nodeType":"YulFunctionCall","src":"5357:30:20"},"nodeType":"YulExpressionStatement","src":"5357:30:20"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4416,"isOffset":false,"isSlot":false,"src":"5198:4:20","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"5368:4:20","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"5293:5:20","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"5324:12:20","valueSize":1}],"id":4430,"nodeType":"InlineAssembly","src":"5118:279:20"}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"4501:442:20","text":" @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"},"id":4432,"implemented":true,"kind":"function","modifiers":[],"name":"swapSelector","nameLocation":"4957:12:20","nodeType":"FunctionDefinition","parameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"_newSelector","nameLocation":"4977:12:20","nodeType":"VariableDeclaration","scope":4432,"src":"4970:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4413,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4970:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"_buf","nameLocation":"5004:4:20","nodeType":"VariableDeclaration","scope":4432,"src":"4991:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4415,"name":"bytes","nodeType":"ElementaryTypeName","src":"4991:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4969:40:20"},"returnParameters":{"id":4418,"nodeType":"ParameterList","parameters":[],"src":"5036:0:20"},"scope":4433,"src":"4948:455:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4434,"src":"72:5333:20","usedErrors":[]}],"src":"46:5360:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable2Step.sol":{"Ownable2Step":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).","kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() external {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":120,"contract":"@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step","label":"_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Aave/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e9c67f693b518b1db84f791fe8ec0870ba1a002b8e6458688119432ac09a53d64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 SWAP13 PUSH8 0xF693B518B1DB84F7 SWAP2 INVALID DUP15 0xC0 DUP8 SIGNEXTEND LOG1 LOG0 MUL 0xB8 0xE6 GASLIMIT DUP7 DUP9 GT SWAP5 ORIGIN 0xAC MULMOD 0xA5 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"62:1467:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;62:1467:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e9c67f693b518b1db84f791fe8ec0870ba1a002b8e6458688119432ac09a53d64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 SWAP13 PUSH8 0xF693B518B1DB84F7 SWAP2 INVALID DUP15 0xC0 DUP8 SIGNEXTEND LOG1 LOG0 MUL 0xB8 0xE6 GASLIMIT DUP7 DUP9 GT SWAP5 ORIGIN 0xAC MULMOD 0xA5 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"62:1467:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aave/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Aave/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    //tokens addresses\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint8 id;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: Reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60-63: reserved\\n    //bit 64-79: reserve factor\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    uint256 data;\\n  }\\n\\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\\n}\",\"keccak256\":\"0xabc65802c6291d7277431d8702d8745cdc822ba74927496e6dfac9dc217fe1da\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Aave/ILendingPool.sol":{"ILendingPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"borrowRateMode","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"borrowRate","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referral","type":"uint16"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referral","type":"uint16"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"rateMode","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromAfter","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"modes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAddressesProvider","outputs":[{"internalType":"contract ILendingPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint8","name":"id","type":"uint8"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralETH","type":"uint256"},{"internalType":"uint256","name":"totalDebtETH","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsETH","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"uint256","name":"configuration","type":"uint256"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"val","type":"bool"}],"name":"setPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"reserve","type":"address"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"rateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Borrow(address,address,address,uint256,uint256,uint256,uint16)":{"details":"Emitted on borrow() and flashLoan() when debt needs to be opened","params":{"amount":"The amount borrowed out","borrowRate":"The numeric rate at which the user has borrowed","borrowRateMode":"The rate mode: 1 for Stable, 2 for Variable","onBehalfOf":"The address that will be getting the debt","referral":"The referral code used*","reserve":"The address of the underlying asset being borrowed","user":"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"}},"Deposit(address,address,address,uint256,uint16)":{"details":"Emitted on deposit()","params":{"amount":"The amount deposited","onBehalfOf":"The beneficiary of the deposit, receiving the aTokens","referral":"The referral code used*","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the deposit"}},"FlashLoan(address,address,address,uint256,uint256,uint16)":{"details":"Emitted on flashLoan()","params":{"amount":"The amount flash borrowed","asset":"The address of the asset being flash borrowed","initiator":"The address initiating the flash loan","premium":"The fee flash borrowed","referralCode":"The referral code used*","target":"The address of the flash loan receiver contract"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{"details":"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","liquidatedCollateralAmount":"The amount of collateral received by the liiquidator","liquidator":"The address of the liquidator","receiveAToken":"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"Paused()":{"details":"Emitted when the pause is triggered."},"RebalanceStableBorrowRate(address,address)":{"details":"Emitted on rebalanceStableBorrowRate()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user for which the rebalance has been executed*"}},"Repay(address,address,address,uint256)":{"details":"Emitted on repay()","params":{"amount":"The amount repaid*","repayer":"The address of the user initiating the repay(), providing the funds","reserve":"The address of the underlying asset of the reserve","user":"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI","params":{"liquidityIndex":"The new liquidity index","liquidityRate":"The new liquidity rate","reserve":"The address of the underlying asset of the reserve","stableBorrowRate":"The new stable borrow rate","variableBorrowIndex":"The new variable borrow index*","variableBorrowRate":"The new variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"ReserveUsedAsCollateralEnabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"Swap(address,address,uint256)":{"details":"Emitted on swapBorrowRateMode()","params":{"rateMode":"The rate mode that the user wants to swap to*","reserve":"The address of the underlying asset of the reserve","user":"The address of the user swapping his rate mode"}},"Unpaused()":{"details":"Emitted when the pause is lifted."},"Withdraw(address,address,address,uint256)":{"details":"Emitted on withdraw()","params":{"amount":"The amount to be withdrawn*","reserve":"The address of the underlyng asset being withdrawn","to":"Address that will receive the underlying","user":"The address initiating the withdrawal, owner of aTokens"}}},"kind":"dev","methods":{"borrow(address,uint256,uint256,uint16,address)":{"details":"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`","params":{"amount":"The amount to be borrowed","asset":"The address of the underlying asset to borrow","interestRateMode":"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable","onBehalfOf":"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"deposit(address,uint256,address,uint16)":{"details":"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC","params":{"amount":"The amount to be deposited","asset":"The address of the underlying asset to deposit","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"details":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com","params":{"amounts":"The amounts amounts being flash-borrowed","assets":"The addresses of the assets being flash-borrowed","modes":"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address","onBehalfOf":"The address  that will receive the debt in the case of using on `modes` 1 or 2","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"getConfiguration(address)":{"details":"Returns the configuration of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The configuration of the reserve*"}},"getReserveData(address)":{"details":"Returns the state and configuration of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The state of the reserve*"}},"getReserveNormalizedIncome(address)":{"details":"Returns the normalized income normalized income of the reserve","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address)":{"details":"Returns the normalized variable debt per unit of asset","params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve normalized variable debt"}},"getUserAccountData(address)":{"details":"Returns the user account data across all the reserves","params":{"user":"The address of the user"},"returns":{"availableBorrowsETH":"the borrowing power left of the user","currentLiquidationThreshold":"the liquidation threshold of the user","healthFactor":"the current health factor of the user*","ltv":"the loan to value of the user","totalCollateralETH":"the total collateral in ETH of the user","totalDebtETH":"the total debt in ETH of the user"}},"getUserConfiguration(address)":{"details":"Returns the configuration of the user across all the reserves","params":{"user":"The user address"},"returns":{"_0":"The configuration of the user*"}},"liquidationCall(address,address,address,uint256,bool)":{"details":"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","receiveAToken":"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"rebalanceStableBorrowRate(address,address)":{"details":"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough","params":{"asset":"The address of the underlying asset borrowed","user":"The address of the user to be rebalanced*"}},"repay(address,uint256,uint256,address)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","onBehalfOf":"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed","rateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},"returns":{"_0":"The final amount repaid*"}},"setUserUseReserveAsCollateral(address,bool)":{"details":"Allows depositors to enable/disable a specific deposited asset as collateral","params":{"asset":"The address of the underlying asset deposited","useAsCollateral":"`true` if the user wants to use the deposit as collateral, `false` otherwise*"}},"swapBorrowRateMode(address,uint256)":{"details":"Allows a borrower to swap his debt between stable and variable mode, or viceversa","params":{"asset":"The address of the underlying asset borrowed","rateMode":"The rate mode that the user wants to swap to*"}},"withdraw(address,uint256,address)":{"details":"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC","params":{"amount":"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance","asset":"The address of the underlying asset to withdraw","to":"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},"returns":{"_0":"The final amount withdrawn*"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"borrow(address,uint256,uint256,uint16,address)":"a415bcad","deposit(address,uint256,address,uint16)":"e8eda9df","finalizeTransfer(address,address,address,uint256,uint256,uint256)":"d5ed3933","flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":"ab9c4b5d","getAddressesProvider()":"fe65acfe","getConfiguration(address)":"c44b11f7","getReserveData(address)":"35ea6a75","getReserveNormalizedIncome(address)":"d15e0053","getReserveNormalizedVariableDebt(address)":"386497fd","getReservesList()":"d1946dbc","getUserAccountData(address)":"bf92857c","getUserConfiguration(address)":"4417a583","initReserve(address,address,address,address,address)":"7a708e92","liquidationCall(address,address,address,uint256,bool)":"00a718a9","paused()":"5c975abb","rebalanceStableBorrowRate(address,address)":"cd112382","repay(address,uint256,uint256,address)":"573ade81","setConfiguration(address,uint256)":"b8d29276","setPause(bool)":"bedb86fb","setReserveInterestRateStrategyAddress(address,address)":"1d2118f9","setUserUseReserveAsCollateral(address,bool)":"5a3b74b9","swapBorrowRateMode(address,uint256)":"94ba89a2","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRateMode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referral\",\"type\":\"uint16\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"modes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configuration\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Borrow(address,address,address,uint256,uint256,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed\",\"borrowRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"Deposit(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on deposit()\",\"params\":{\"amount\":\"The amount deposited\",\"onBehalfOf\":\"The beneficiary of the deposit, receiving the aTokens\",\"referral\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the deposit\"}},\"FlashLoan(address,address,address,uint256,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liiquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"Paused()\":{\"details\":\"Emitted when the pause is triggered.\"},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid*\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI\",\"params\":{\"liquidityIndex\":\"The new liquidity index\",\"liquidityRate\":\"The new liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The new stable borrow rate\",\"variableBorrowIndex\":\"The new variable borrow index*\",\"variableBorrowRate\":\"The new variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Swap(address,address,uint256)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"rateMode\":\"The rate mode that the user wants to swap to*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"Unpaused()\":{\"details\":\"Emitted when the pause is lifted.\"},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlyng asset being withdrawn\",\"to\":\"Address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256,uint256,uint16,address)\":{\"details\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\",\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC\",\"params\":{\"amount\":\"The amount to be deposited\",\"asset\":\"The address of the underlying asset to deposit\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts amounts being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"modes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"details\":\"Returns the configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getReserveData(address)\":{\"details\":\"Returns the state and configuration of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"details\":\"Returns the normalized income normalized income of the reserve\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"Returns the normalized variable debt per unit of asset\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getUserAccountData(address)\":{\"details\":\"Returns the user account data across all the reserves\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsETH\":\"the borrowing power left of the user\",\"currentLiquidationThreshold\":\"the liquidation threshold of the user\",\"healthFactor\":\"the current health factor of the user*\",\"ltv\":\"the loan to value of the user\",\"totalCollateralETH\":\"the total collateral in ETH of the user\",\"totalDebtETH\":\"the total debt in ETH of the user\"}},\"getUserConfiguration(address)\":{\"details\":\"Returns the configuration of the user across all the reserves\",\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"details\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"rebalanceStableBorrowRate(address,address)\":{\"details\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"rateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"details\":\"Allows depositors to enable/disable a specific deposited asset as collateral\",\"params\":{\"asset\":\"The address of the underlying asset deposited\",\"useAsCollateral\":\"`true` if the user wants to use the deposit as collateral, `false` otherwise*\"}},\"swapBorrowRateMode(address,uint256)\":{\"details\":\"Allows a borrower to swap his debt between stable and variable mode, or viceversa\",\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"rateMode\":\"The rate mode that the user wants to swap to*\"}},\"withdraw(address,uint256,address)\":{\"details\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\",\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aave/ILendingPool.sol\":\"ILendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Aave/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    //tokens addresses\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint8 id;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: Reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60-63: reserved\\n    //bit 64-79: reserve factor\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    uint256 data;\\n  }\\n\\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\\n}\",\"keccak256\":\"0xabc65802c6291d7277431d8702d8745cdc822ba74927496e6dfac9dc217fe1da\",\"license\":\"agpl-3.0\"},\"contracts/Aave/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\\nimport {DataTypes} from './DataTypes.sol';\\n\\ninterface ILendingPool {\\n  /**\\n   * @dev Emitted on deposit()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address initiating the deposit\\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n   * @param amount The amount deposited\\n   * @param referral The referral code used\\n   **/\\n  event Deposit(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint16 indexed referral\\n  );\\n\\n  /**\\n   * @dev Emitted on withdraw()\\n   * @param reserve The address of the underlyng asset being withdrawn\\n   * @param user The address initiating the withdrawal, owner of aTokens\\n   * @param to Address that will receive the underlying\\n   * @param amount The amount to be withdrawn\\n   **/\\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\\n\\n  /**\\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\\n   * @param reserve The address of the underlying asset being borrowed\\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\\n   * initiator of the transaction on flashLoan()\\n   * @param onBehalfOf The address that will be getting the debt\\n   * @param amount The amount borrowed out\\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\\n   * @param borrowRate The numeric rate at which the user has borrowed\\n   * @param referral The referral code used\\n   **/\\n  event Borrow(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint256 borrowRateMode,\\n    uint256 borrowRate,\\n    uint16 indexed referral\\n  );\\n\\n  /**\\n   * @dev Emitted on repay()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The beneficiary of the repayment, getting his debt reduced\\n   * @param repayer The address of the user initiating the repay(), providing the funds\\n   * @param amount The amount repaid\\n   **/\\n  event Repay(\\n    address indexed reserve,\\n    address indexed user,\\n    address indexed repayer,\\n    uint256 amount\\n  );\\n\\n  /**\\n   * @dev Emitted on swapBorrowRateMode()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user swapping his rate mode\\n   * @param rateMode The rate mode that the user wants to swap to\\n   **/\\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on rebalanceStableBorrowRate()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user for which the rebalance has been executed\\n   **/\\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on flashLoan()\\n   * @param target The address of the flash loan receiver contract\\n   * @param initiator The address initiating the flash loan\\n   * @param asset The address of the asset being flash borrowed\\n   * @param amount The amount flash borrowed\\n   * @param premium The fee flash borrowed\\n   * @param referralCode The referral code used\\n   **/\\n  event FlashLoan(\\n    address indexed target,\\n    address indexed initiator,\\n    address indexed asset,\\n    uint256 amount,\\n    uint256 premium,\\n    uint16 referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted when the pause is triggered.\\n   */\\n  event Paused();\\n\\n  /**\\n   * @dev Emitted when the pause is lifted.\\n   */\\n  event Unpaused();\\n\\n  /**\\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n   * LendingPoolCollateral manager using a DELEGATECALL\\n   * This allows to have the events in the generated ABI for LendingPool.\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n   * @param liquidator The address of the liquidator\\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  event LiquidationCall(\\n    address indexed collateralAsset,\\n    address indexed debtAsset,\\n    address indexed user,\\n    uint256 debtToCover,\\n    uint256 liquidatedCollateralAmount,\\n    address liquidator,\\n    bool receiveAToken\\n  );\\n\\n  /**\\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n   * gets added to the LendingPool ABI\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param liquidityRate The new liquidity rate\\n   * @param stableBorrowRate The new stable borrow rate\\n   * @param variableBorrowRate The new variable borrow rate\\n   * @param liquidityIndex The new liquidity index\\n   * @param variableBorrowIndex The new variable borrow index\\n   **/\\n  event ReserveDataUpdated(\\n    address indexed reserve,\\n    uint256 liquidityRate,\\n    uint256 stableBorrowRate,\\n    uint256 variableBorrowRate,\\n    uint256 liquidityIndex,\\n    uint256 variableBorrowIndex\\n  );\\n\\n  /**\\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n   * @param asset The address of the underlying asset to deposit\\n   * @param amount The amount to be deposited\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function deposit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n   * @param asset The address of the underlying asset to withdraw\\n   * @param amount The underlying amount to be withdrawn\\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n   * @param to Address that will receive the underlying, same as msg.sender if the user\\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n   *   different wallet\\n   * @return The final amount withdrawn\\n   **/\\n  function withdraw(\\n    address asset,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n   * @param asset The address of the underlying asset to borrow\\n   * @param amount The amount to be borrowed\\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n   * if he has been given credit delegation allowance\\n   **/\\n  function borrow(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    uint16 referralCode,\\n    address onBehalfOf\\n  ) external;\\n\\n  /**\\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n   * other borrower whose debt should be removed\\n   * @return The final amount repaid\\n   **/\\n  function repay(\\n    address asset,\\n    uint256 amount,\\n    uint256 rateMode,\\n    address onBehalfOf\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n   * @param asset The address of the underlying asset borrowed\\n   * @param rateMode The rate mode that the user wants to swap to\\n   **/\\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\\n\\n  /**\\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n   * - Users can be rebalanced if the following conditions are satisfied:\\n   *     1. Usage ratio is above 95%\\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n   *        borrowed at a stable rate and depositors are not earning enough\\n   * @param asset The address of the underlying asset borrowed\\n   * @param user The address of the user to be rebalanced\\n   **/\\n  function rebalanceStableBorrowRate(address asset, address user) external;\\n\\n  /**\\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n   * @param asset The address of the underlying asset deposited\\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n   **/\\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\\n\\n  /**\\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  function liquidationCall(\\n    address collateralAsset,\\n    address debtAsset,\\n    address user,\\n    uint256 debtToCover,\\n    bool receiveAToken\\n  ) external;\\n\\n  /**\\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n   * as long as the amount taken plus a fee is returned.\\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n   * For further details please visit https://developers.aave.com\\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n   * @param assets The addresses of the assets being flash-borrowed\\n   * @param amounts The amounts amounts being flash-borrowed\\n   * @param modes Types of the debt to open if the flash loan is not returned:\\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n   * @param params Variadic packed params to pass to the receiver as extra information\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function flashLoan(\\n    address receiverAddress,\\n    address[] calldata assets,\\n    uint256[] calldata amounts,\\n    uint256[] calldata modes,\\n    address onBehalfOf,\\n    bytes calldata params,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Returns the user account data across all the reserves\\n   * @param user The address of the user\\n   * @return totalCollateralETH the total collateral in ETH of the user\\n   * @return totalDebtETH the total debt in ETH of the user\\n   * @return availableBorrowsETH the borrowing power left of the user\\n   * @return currentLiquidationThreshold the liquidation threshold of the user\\n   * @return ltv the loan to value of the user\\n   * @return healthFactor the current health factor of the user\\n   **/\\n  function getUserAccountData(address user)\\n    external\\n    view\\n    returns (\\n      uint256 totalCollateralETH,\\n      uint256 totalDebtETH,\\n      uint256 availableBorrowsETH,\\n      uint256 currentLiquidationThreshold,\\n      uint256 ltv,\\n      uint256 healthFactor\\n    );\\n\\n  function initReserve(\\n    address reserve,\\n    address aTokenAddress,\\n    address stableDebtAddress,\\n    address variableDebtAddress,\\n    address interestRateStrategyAddress\\n  ) external;\\n\\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\\n    external;\\n\\n  function setConfiguration(address reserve, uint256 configuration) external;\\n\\n  /**\\n   * @dev Returns the configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The configuration of the reserve\\n   **/\\n  function getConfiguration(address asset)\\n    external\\n    view\\n    returns (DataTypes.ReserveConfigurationMap memory);\\n\\n  /**\\n   * @dev Returns the configuration of the user across all the reserves\\n   * @param user The user address\\n   * @return The configuration of the user\\n   **/\\n  function getUserConfiguration(address user)\\n    external\\n    view\\n    returns (DataTypes.UserConfigurationMap memory);\\n\\n  /**\\n   * @dev Returns the normalized income normalized income of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve's normalized income\\n   */\\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the normalized variable debt per unit of asset\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve normalized variable debt\\n   */\\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the state and configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The state of the reserve\\n   **/\\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\\n\\n  function finalizeTransfer(\\n    address asset,\\n    address from,\\n    address to,\\n    uint256 amount,\\n    uint256 balanceFromAfter,\\n    uint256 balanceToBefore\\n  ) external;\\n\\n  function getReservesList() external view returns (address[] memory);\\n\\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\\n\\n  function setPause(bool val) external;\\n\\n  function paused() external view returns (bool);\\n}\",\"keccak256\":\"0xff3efa2f83eabd93b693633ebfe32fc2bc2b6f2cc31bee31506c258602ae082f\",\"license\":\"agpl-3.0\"},\"contracts/Aave/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n  event MarketIdSet(string newMarketId);\\n  event LendingPoolUpdated(address indexed newAddress);\\n  event ConfigurationAdminUpdated(address indexed newAddress);\\n  event EmergencyAdminUpdated(address indexed newAddress);\\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n  event PriceOracleUpdated(address indexed newAddress);\\n  event LendingRateOracleUpdated(address indexed newAddress);\\n  event ProxyCreated(bytes32 id, address indexed newAddress);\\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n  function getMarketId() external view returns (string memory);\\n\\n  function setMarketId(string calldata marketId) external;\\n\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  function getLendingPool() external view returns (address);\\n\\n  function setLendingPoolImpl(address pool) external;\\n\\n  function getLendingPoolConfigurator() external view returns (address);\\n\\n  function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n  function getLendingPoolCollateralManager() external view returns (address);\\n\\n  function setLendingPoolCollateralManager(address manager) external;\\n\\n  function getPoolAdmin() external view returns (address);\\n\\n  function setPoolAdmin(address admin) external;\\n\\n  function getEmergencyAdmin() external view returns (address);\\n\\n  function setEmergencyAdmin(address admin) external;\\n\\n  function getPriceOracle() external view returns (address);\\n\\n  function setPriceOracle(address priceOracle) external;\\n\\n  function getLendingRateOracle() external view returns (address);\\n\\n  function setLendingRateOracle(address lendingRateOracle) external;\\n}\",\"keccak256\":\"0xd7b04a3de502b4da5022668bf6a6820c3d2505ec9a5c37e0a50b3b6e3981637f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"repay(address,uint256,uint256,address)":{"notice":"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"}},"version":1}}},"contracts/Aave/ILendingPoolAddressesProvider.sol":{"ILendingPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"hasProxy","type":"bool"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ConfigurationAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"EmergencyAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolCollateralManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingPoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"LendingRateOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEmergencyAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolCollateralManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLendingRateOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"impl","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setEmergencyAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"manager","type":"address"}],"name":"setLendingPoolCollateralManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"configurator","type":"address"}],"name":"setLendingPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"setLendingPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lendingRateOracle","type":"address"}],"name":"setLendingRateOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"marketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"setPoolAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"priceOracle","type":"address"}],"name":"setPriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave*","details":"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance","kind":"dev","methods":{},"title":"LendingPoolAddressesProvider contract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAddress(bytes32)":"21f8a721","getEmergencyAdmin()":"ddcaa9ea","getLendingPool()":"0261bf8b","getLendingPoolCollateralManager()":"712d9171","getLendingPoolConfigurator()":"85c858b1","getLendingRateOracle()":"3618abba","getMarketId()":"568ef470","getPoolAdmin()":"aecda378","getPriceOracle()":"fca513a8","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setEmergencyAdmin(address)":"35da3394","setLendingPoolCollateralManager(address)":"398e5553","setLendingPoolConfiguratorImpl(address)":"c12542df","setLendingPoolImpl(address)":"5aef021f","setLendingRateOracle(address)":"820d1274","setMarketId(string)":"f67b1847","setPoolAdmin(address)":"283d62ad","setPriceOracle(address)":"530e784f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasProxy\",\"type\":\"bool\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ConfigurationAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"EmergencyAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolCollateralManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingPoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LendingRateOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCollateralManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingRateOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setEmergencyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"setLendingPoolCollateralManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"configurator\",\"type\":\"address\"}],\"name\":\"setLendingPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"setLendingPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingRateOracle\",\"type\":\"address\"}],\"name\":\"setLendingRateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setPoolAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LendingPoolAddressesProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aave/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Aave/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n  event MarketIdSet(string newMarketId);\\n  event LendingPoolUpdated(address indexed newAddress);\\n  event ConfigurationAdminUpdated(address indexed newAddress);\\n  event EmergencyAdminUpdated(address indexed newAddress);\\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n  event PriceOracleUpdated(address indexed newAddress);\\n  event LendingRateOracleUpdated(address indexed newAddress);\\n  event ProxyCreated(bytes32 id, address indexed newAddress);\\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n  function getMarketId() external view returns (string memory);\\n\\n  function setMarketId(string calldata marketId) external;\\n\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  function getLendingPool() external view returns (address);\\n\\n  function setLendingPoolImpl(address pool) external;\\n\\n  function getLendingPoolConfigurator() external view returns (address);\\n\\n  function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n  function getLendingPoolCollateralManager() external view returns (address);\\n\\n  function setLendingPoolCollateralManager(address manager) external;\\n\\n  function getPoolAdmin() external view returns (address);\\n\\n  function setPoolAdmin(address admin) external;\\n\\n  function getEmergencyAdmin() external view returns (address);\\n\\n  function setEmergencyAdmin(address admin) external;\\n\\n  function getPriceOracle() external view returns (address);\\n\\n  function setPriceOracle(address priceOracle) external;\\n\\n  function getLendingRateOracle() external view returns (address);\\n\\n  function setLendingRateOracle(address lendingRateOracle) external;\\n}\",\"keccak256\":\"0xd7b04a3de502b4da5022668bf6a6820c3d2505ec9a5c37e0a50b3b6e3981637f\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Aave/IScaledBalanceToken.sol":{"IScaledBalanceToken":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getScaledUserBalanceAndSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"scaledBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scaledTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getScaledUserBalanceAndSupply(address)":{"details":"Returns the scaled balance of the user and the scaled total supply.","params":{"user":"The address of the user"},"returns":{"_0":"The scaled balance of the user","_1":"The scaled balance and the scaled total supply*"}},"scaledBalanceOf(address)":{"details":"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update","params":{"user":"The user whose balance is calculated"},"returns":{"_0":"The scaled balance of the user*"}},"scaledTotalSupply()":{"details":"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)","returns":{"_0":"The scaled total supply*"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getScaledUserBalanceAndSupply(address)":"0afbcdc9","scaledBalanceOf(address)":"1da24f3e","scaledTotalSupply()":"b1bf962d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aave/IScaledBalanceToken.sol\":\"IScaledBalanceToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Aave/IScaledBalanceToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IScaledBalanceToken {\\n  /**\\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\\n   * @param user The user whose balance is calculated\\n   * @return The scaled balance of the user\\n   **/\\n  function scaledBalanceOf(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the scaled balance of the user and the scaled total supply.\\n   * @param user The address of the user\\n   * @return The scaled balance of the user\\n   * @return The scaled balance and the scaled total supply\\n   **/\\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\\n   * @return The scaled total supply\\n   **/\\n  function scaledTotalSupply() external view returns (uint256);\\n}\",\"keccak256\":\"0xbf69758953378a1cd8d52e7af8f63bb352be5508c0d5194d18a109ef10a25f81\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Aave/IStableDebtToken.sol":{"IStableDebtToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balanceIncrease","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"avgStableRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotalSupply","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"currentBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balanceIncrease","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"avgStableRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotalSupply","type":"uint256"}],"name":"Mint","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAverageStableRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSupplyData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint40","name":"","type":"uint40"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSupplyAndAvgRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSupplyLastUpdated","outputs":[{"internalType":"uint40","name":"","type":"uint40"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserLastUpdated","outputs":[{"internalType":"uint40","name":"","type":"uint40"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserStableRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"principalBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Aave*","details":"It does not inherit from IERC20 to save in code size","events":{"Burn(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when new stable debt is burned","params":{"amount":"The amount being burned","avgStableRate":"The new average stable rate after the burning","balanceIncrease":"The the increase in balance since the last action of the user","currentBalance":"The current balance of the user","newTotalSupply":"The new total supply of the stable debt token after the action*","user":"The address of the user"}},"Mint(address,address,uint256,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when new stable debt is minted","params":{"amount":"The amount minted","avgStableRate":"The new average stable rate after the minting","balanceIncrease":"The increase in balance since the last action of the user","currentBalance":"The current balance of the user","newRate":"The rate of the debt after the minting","newTotalSupply":"The new total supply of the stable debt token after the action*","onBehalfOf":"The recipient of stable debt tokens","user":"The address of the user who triggered the minting"}}},"kind":"dev","methods":{"burn(address,uint256)":{"details":"Burns debt of `user` - The resulting rate is the weighted average between the rate of the new debt and the rate of the previous debt","params":{"amount":"The amount of debt tokens getting burned*","user":"The address of the user getting his debt burned"}},"getAverageStableRate()":{"details":"Returns the average rate of all the stable rate loans.","returns":{"_0":"The average stable rate*"}},"getSupplyData()":{"details":"Returns the principal, the total supply and the average stable rate*"},"getTotalSupplyAndAvgRate()":{"details":"Returns the total supply and the average stable rate*"},"getTotalSupplyLastUpdated()":{"details":"Returns the timestamp of the last update of the total supply","returns":{"_0":"The timestamp*"}},"getUserLastUpdated(address)":{"details":"Returns the timestamp of the last update of the user","returns":{"_0":"The timestamp*"}},"getUserStableRate(address)":{"details":"Returns the stable rate of the user debt","returns":{"_0":"The stable rate of the user*"}},"mint(address,address,uint256,uint256)":{"details":"Mints debt token to the `onBehalfOf` address. - The resulting rate is the weighted average between the rate of the new debt and the rate of the previous debt","params":{"amount":"The amount of debt tokens to mint","onBehalfOf":"The address receiving the debt tokens","rate":"The rate of the debt being minted*","user":"The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise"}},"principalBalanceOf(address)":{"details":"Returns the principal debt balance of the user","returns":{"_0":"The debt balance of the user since the last burn/mint action*"}}},"title":"IStableDebtToken","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint256)":"9dc29fac","getAverageStableRate()":"90f6fcf2","getSupplyData()":"79774338","getTotalSupplyAndAvgRate()":"f731e9be","getTotalSupplyLastUpdated()":"e7484890","getUserLastUpdated(address)":"79ce6b8c","getUserStableRate(address)":"e78c9b3b","mint(address,address,uint256,uint256)":"b3f1c93d","principalBalanceOf(address)":"c634dfaa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgStableRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceIncrease\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avgStableRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAverageStableRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupplyData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupplyAndAvgRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupplyLastUpdated\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserLastUpdated\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStableRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"principalBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave*\",\"details\":\"It does not inherit from IERC20 to save in code size\",\"events\":{\"Burn(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when new stable debt is burned\",\"params\":{\"amount\":\"The amount being burned\",\"avgStableRate\":\"The new average stable rate after the burning\",\"balanceIncrease\":\"The the increase in balance since the last action of the user\",\"currentBalance\":\"The current balance of the user\",\"newTotalSupply\":\"The new total supply of the stable debt token after the action*\",\"user\":\"The address of the user\"}},\"Mint(address,address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when new stable debt is minted\",\"params\":{\"amount\":\"The amount minted\",\"avgStableRate\":\"The new average stable rate after the minting\",\"balanceIncrease\":\"The increase in balance since the last action of the user\",\"currentBalance\":\"The current balance of the user\",\"newRate\":\"The rate of the debt after the minting\",\"newTotalSupply\":\"The new total supply of the stable debt token after the action*\",\"onBehalfOf\":\"The recipient of stable debt tokens\",\"user\":\"The address of the user who triggered the minting\"}}},\"kind\":\"dev\",\"methods\":{\"burn(address,uint256)\":{\"details\":\"Burns debt of `user` - The resulting rate is the weighted average between the rate of the new debt and the rate of the previous debt\",\"params\":{\"amount\":\"The amount of debt tokens getting burned*\",\"user\":\"The address of the user getting his debt burned\"}},\"getAverageStableRate()\":{\"details\":\"Returns the average rate of all the stable rate loans.\",\"returns\":{\"_0\":\"The average stable rate*\"}},\"getSupplyData()\":{\"details\":\"Returns the principal, the total supply and the average stable rate*\"},\"getTotalSupplyAndAvgRate()\":{\"details\":\"Returns the total supply and the average stable rate*\"},\"getTotalSupplyLastUpdated()\":{\"details\":\"Returns the timestamp of the last update of the total supply\",\"returns\":{\"_0\":\"The timestamp*\"}},\"getUserLastUpdated(address)\":{\"details\":\"Returns the timestamp of the last update of the user\",\"returns\":{\"_0\":\"The timestamp*\"}},\"getUserStableRate(address)\":{\"details\":\"Returns the stable rate of the user debt\",\"returns\":{\"_0\":\"The stable rate of the user*\"}},\"mint(address,address,uint256,uint256)\":{\"details\":\"Mints debt token to the `onBehalfOf` address. - The resulting rate is the weighted average between the rate of the new debt and the rate of the previous debt\",\"params\":{\"amount\":\"The amount of debt tokens to mint\",\"onBehalfOf\":\"The address receiving the debt tokens\",\"rate\":\"The rate of the debt being minted*\",\"user\":\"The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise\"}},\"principalBalanceOf(address)\":{\"details\":\"Returns the principal debt balance of the user\",\"returns\":{\"_0\":\"The debt balance of the user since the last burn/mint action*\"}}},\"title\":\"IStableDebtToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the interface for the stable debt token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aave/IStableDebtToken.sol\":\"IStableDebtToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Aave/IStableDebtToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title IStableDebtToken\\n * @notice Defines the interface for the stable debt token\\n * @dev It does not inherit from IERC20 to save in code size\\n * @author Aave\\n **/\\n\\ninterface IStableDebtToken {\\n  /**\\n   * @dev Emitted when new stable debt is minted\\n   * @param user The address of the user who triggered the minting\\n   * @param onBehalfOf The recipient of stable debt tokens\\n   * @param amount The amount minted\\n   * @param currentBalance The current balance of the user\\n   * @param balanceIncrease The increase in balance since the last action of the user\\n   * @param newRate The rate of the debt after the minting\\n   * @param avgStableRate The new average stable rate after the minting\\n   * @param newTotalSupply The new total supply of the stable debt token after the action\\n   **/\\n  event Mint(\\n    address indexed user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint256 currentBalance,\\n    uint256 balanceIncrease,\\n    uint256 newRate,\\n    uint256 avgStableRate,\\n    uint256 newTotalSupply\\n  );\\n\\n  /**\\n   * @dev Emitted when new stable debt is burned\\n   * @param user The address of the user\\n   * @param amount The amount being burned\\n   * @param currentBalance The current balance of the user\\n   * @param balanceIncrease The the increase in balance since the last action of the user\\n   * @param avgStableRate The new average stable rate after the burning\\n   * @param newTotalSupply The new total supply of the stable debt token after the action\\n   **/\\n  event Burn(\\n    address indexed user,\\n    uint256 amount,\\n    uint256 currentBalance,\\n    uint256 balanceIncrease,\\n    uint256 avgStableRate,\\n    uint256 newTotalSupply\\n  );\\n\\n  /**\\n   * @dev Mints debt token to the `onBehalfOf` address.\\n   * - The resulting rate is the weighted average between the rate of the new debt\\n   * and the rate of the previous debt\\n   * @param user The address receiving the borrowed underlying, being the delegatee in case\\n   * of credit delegate, or same as `onBehalfOf` otherwise\\n   * @param onBehalfOf The address receiving the debt tokens\\n   * @param amount The amount of debt tokens to mint\\n   * @param rate The rate of the debt being minted\\n   **/\\n  function mint(\\n    address user,\\n    address onBehalfOf,\\n    uint256 amount,\\n    uint256 rate\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Burns debt of `user`\\n   * - The resulting rate is the weighted average between the rate of the new debt\\n   * and the rate of the previous debt\\n   * @param user The address of the user getting his debt burned\\n   * @param amount The amount of debt tokens getting burned\\n   **/\\n  function burn(address user, uint256 amount) external;\\n\\n  /**\\n   * @dev Returns the average rate of all the stable rate loans.\\n   * @return The average stable rate\\n   **/\\n  function getAverageStableRate() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the stable rate of the user debt\\n   * @return The stable rate of the user\\n   **/\\n  function getUserStableRate(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the timestamp of the last update of the user\\n   * @return The timestamp\\n   **/\\n  function getUserLastUpdated(address user) external view returns (uint40);\\n\\n  /**\\n   * @dev Returns the principal, the total supply and the average stable rate\\n   **/\\n  function getSupplyData()\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint40\\n    );\\n\\n  /**\\n   * @dev Returns the timestamp of the last update of the total supply\\n   * @return The timestamp\\n   **/\\n  function getTotalSupplyLastUpdated() external view returns (uint40);\\n\\n  /**\\n   * @dev Returns the total supply and the average stable rate\\n   **/\\n  function getTotalSupplyAndAvgRate() external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the principal debt balance of the user\\n   * @return The debt balance of the user since the last burn/mint action\\n   **/\\n  function principalBalanceOf(address user) external view returns (uint256);\\n}\",\"keccak256\":\"0xe2aad84b992e77023a36035849b19d1f4d8876607efa42a531249e4e3d8c57ca\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Defines the interface for the stable debt token","version":1}}},"contracts/Aave/IVariableDebtToken.sol":{"IVariableDebtToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"Mint","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getScaledUserBalanceAndSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"scaledBalanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scaledTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Aave","events":{"Burn(address,uint256,uint256)":{"details":"Emitted when variable debt is burnt","params":{"amount":"The amount of debt being burned","index":"The index of the user*","user":"The user which debt has been burned"}},"Mint(address,address,uint256,uint256)":{"details":"Emitted after the mint action","params":{"from":"The address performing the mint","index":"The last index of the reserve*","onBehalfOf":"The address of the user on which behalf minting has been performed","value":"The amount to be minted"}}},"kind":"dev","methods":{"burn(address,uint256,uint256)":{"details":"Burns user variable debt","params":{"index":"The variable debt index of the reserve*","user":"The user which debt is burnt"}},"getScaledUserBalanceAndSupply(address)":{"details":"Returns the scaled balance of the user and the scaled total supply.","params":{"user":"The address of the user"},"returns":{"_0":"The scaled balance of the user","_1":"The scaled balance and the scaled total supply*"}},"mint(address,address,uint256,uint256)":{"details":"Mints debt token to the `onBehalfOf` address","params":{"amount":"The amount of debt being minted","index":"The variable debt index of the reserve","onBehalfOf":"The address receiving the debt tokens","user":"The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise"},"returns":{"_0":"`true` if the the previous balance of the user is 0*"}},"scaledBalanceOf(address)":{"details":"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update","params":{"user":"The user whose balance is calculated"},"returns":{"_0":"The scaled balance of the user*"}},"scaledTotalSupply()":{"details":"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)","returns":{"_0":"The scaled total supply*"}}},"title":"IVariableDebtToken","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint256,uint256)":"f5298aca","getScaledUserBalanceAndSupply(address)":"0afbcdc9","mint(address,address,uint256,uint256)":"b3f1c93d","scaledBalanceOf(address)":"1da24f3e","scaledTotalSupply()":"b1bf962d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getScaledUserBalanceAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaledTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"Burn(address,uint256,uint256)\":{\"details\":\"Emitted when variable debt is burnt\",\"params\":{\"amount\":\"The amount of debt being burned\",\"index\":\"The index of the user*\",\"user\":\"The user which debt has been burned\"}},\"Mint(address,address,uint256,uint256)\":{\"details\":\"Emitted after the mint action\",\"params\":{\"from\":\"The address performing the mint\",\"index\":\"The last index of the reserve*\",\"onBehalfOf\":\"The address of the user on which behalf minting has been performed\",\"value\":\"The amount to be minted\"}}},\"kind\":\"dev\",\"methods\":{\"burn(address,uint256,uint256)\":{\"details\":\"Burns user variable debt\",\"params\":{\"index\":\"The variable debt index of the reserve*\",\"user\":\"The user which debt is burnt\"}},\"getScaledUserBalanceAndSupply(address)\":{\"details\":\"Returns the scaled balance of the user and the scaled total supply.\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The scaled balance of the user\",\"_1\":\"The scaled balance and the scaled total supply*\"}},\"mint(address,address,uint256,uint256)\":{\"details\":\"Mints debt token to the `onBehalfOf` address\",\"params\":{\"amount\":\"The amount of debt being minted\",\"index\":\"The variable debt index of the reserve\",\"onBehalfOf\":\"The address receiving the debt tokens\",\"user\":\"The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise\"},\"returns\":{\"_0\":\"`true` if the the previous balance of the user is 0*\"}},\"scaledBalanceOf(address)\":{\"details\":\"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update\",\"params\":{\"user\":\"The user whose balance is calculated\"},\"returns\":{\"_0\":\"The scaled balance of the user*\"}},\"scaledTotalSupply()\":{\"details\":\"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\",\"returns\":{\"_0\":\"The scaled total supply*\"}}},\"title\":\"IVariableDebtToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the basic interface for a variable debt token.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Aave/IVariableDebtToken.sol\":\"IVariableDebtToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Aave/IScaledBalanceToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IScaledBalanceToken {\\n  /**\\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\\n   * @param user The user whose balance is calculated\\n   * @return The scaled balance of the user\\n   **/\\n  function scaledBalanceOf(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the scaled balance of the user and the scaled total supply.\\n   * @param user The address of the user\\n   * @return The scaled balance of the user\\n   * @return The scaled balance and the scaled total supply\\n   **/\\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\\n   * @return The scaled total supply\\n   **/\\n  function scaledTotalSupply() external view returns (uint256);\\n}\",\"keccak256\":\"0xbf69758953378a1cd8d52e7af8f63bb352be5508c0d5194d18a109ef10a25f81\",\"license\":\"agpl-3.0\"},\"contracts/Aave/IVariableDebtToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IScaledBalanceToken} from './IScaledBalanceToken.sol';\\n\\n/**\\n * @title IVariableDebtToken\\n * @author Aave\\n * @notice Defines the basic interface for a variable debt token.\\n **/\\ninterface IVariableDebtToken is IScaledBalanceToken {\\n  /**\\n   * @dev Emitted after the mint action\\n   * @param from The address performing the mint\\n   * @param onBehalfOf The address of the user on which behalf minting has been performed\\n   * @param value The amount to be minted\\n   * @param index The last index of the reserve\\n   **/\\n  event Mint(address indexed from, address indexed onBehalfOf, uint256 value, uint256 index);\\n\\n  /**\\n   * @dev Mints debt token to the `onBehalfOf` address\\n   * @param user The address receiving the borrowed underlying, being the delegatee in case\\n   * of credit delegate, or same as `onBehalfOf` otherwise\\n   * @param onBehalfOf The address receiving the debt tokens\\n   * @param amount The amount of debt being minted\\n   * @param index The variable debt index of the reserve\\n   * @return `true` if the the previous balance of the user is 0\\n   **/\\n  function mint(\\n    address user,\\n    address onBehalfOf,\\n    uint256 amount,\\n    uint256 index\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when variable debt is burnt\\n   * @param user The user which debt has been burned\\n   * @param amount The amount of debt being burned\\n   * @param index The index of the user\\n   **/\\n  event Burn(address indexed user, uint256 amount, uint256 index);\\n\\n  /**\\n   * @dev Burns user variable debt\\n   * @param user The user which debt is burnt\\n   * @param index The variable debt index of the reserve\\n   **/\\n  function burn(\\n    address user,\\n    uint256 amount,\\n    uint256 index\\n  ) external;\\n}\",\"keccak256\":\"0x9892b6bd31a50c430d04199d8aa1072b9a5795da38368642798a0d02675d3466\",\"license\":\"agpl-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Defines the basic interface for a variable debt token.*","version":1}}},"contracts/L1/Vault.sol":{"Vault":{"abi":[{"inputs":[{"internalType":"address","name":"lendingPool_","type":"address"},{"internalType":"address","name":"lzEndpoint_","type":"address"},{"internalType":"uint16","name":"dstChainId_","type":"uint16"},{"internalType":"address","name":"usdt_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user_","type":"address"},{"indexed":false,"internalType":"address","name":"coin_","type":"address"},{"indexed":false,"internalType":"uint256","name":"interest_","type":"uint256"}],"name":"eventCheckOutInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"type_","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"},{"indexed":false,"internalType":"address","name":"sender_","type":"address"}],"name":"eventDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"},{"indexed":false,"internalType":"address","name":"sender_","type":"address"}],"name":"eventDepositETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address[]","name":"coinAdd_","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"capitalValues_","type":"uint256[]"},{"indexed":false,"internalType":"uint8","name":"checkOutType","type":"uint8"}],"name":"eventReceive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user_","type":"address"},{"indexed":false,"internalType":"bool","name":"re_","type":"bool"}],"name":"eventSetWhilLlist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"type_","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amount_","type":"uint256[]"},{"indexed":false,"internalType":"address","name":"sender_","type":"address"}],"name":"eventWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"coinType","type":"address"},{"indexed":false,"internalType":"uint256","name":"interestBalance","type":"uint256"}],"name":"eventWithdrawInterest","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NODE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWENER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"_roles","outputs":[{"internalType":"bytes32","name":"adminRole","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aave","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"accounts","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes32","name":"capitalMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"capitalNonce","type":"uint256"},{"internalType":"bytes32","name":"tradingMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"tradingNonce","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adapterParams","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deCoinList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"type_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"dstChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user_","type":"address"}],"name":"estimateFee","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add_","type":"address"}],"name":"getATokenWithToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllFee","outputs":[{"internalType":"address[]","name":"coin","type":"address[]"},{"internalType":"uint256[]","name":"amount","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"address_","type":"address"}],"name":"getBalance","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"type_","type":"address"},{"internalType":"address","name":"fromAdd_","type":"address"}],"name":"getBalanceFromAAVE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user_","type":"address"}],"name":"getInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user_","type":"address"}],"name":"getNativeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"remoteChainId","type":"uint16"}],"name":"getOracle","outputs":[{"internalType":"address","name":"_oracle","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user_","type":"address"}],"name":"getSize","outputs":[{"internalType":"bytes","name":"encoded","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getTotalValue","outputs":[{"internalType":"uint256","name":"currentATokenBalance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserReserveData","outputs":[{"internalType":"uint256","name":"currentATokenBalance","type":"uint256"},{"internalType":"uint256","name":"currentStableDebt","type":"uint256"},{"internalType":"uint256","name":"currentVariableDebt","type":"uint256"},{"internalType":"uint256","name":"principalStableDebt","type":"uint256"},{"internalType":"uint256","name":"scaledVariableDebt","type":"uint256"},{"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"internalType":"uint40","name":"stableRateLastUpdated","type":"uint40"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"message","type":"bytes32"}],"name":"hashMessage","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"interest","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"interestAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isSupDe","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTrueForCoin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"version","type":"uint16"},{"internalType":"uint256","name":"gasForDestinationLzReceive","type":"uint256"}],"name":"setAdapterParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"coin_","type":"address[]"},{"internalType":"bool","name":"re_","type":"bool"}],"name":"setDeCoinList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"re_","type":"bool"}],"name":"setIsOpen","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"dstChainId","type":"uint16"},{"internalType":"address","name":"oracle","type":"address"}],"name":"setOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add_","type":"address"},{"internalType":"bool","name":"re","type":"bool"}],"name":"setSupDe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add","type":"address"},{"internalType":"uint256","name":"type_","type":"uint256"}],"name":"setWhilLlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"totalFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"verifyEcrecover","outputs":[{"internalType":"address","name":"recoveredAddress","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whlieList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amount_","type":"uint256[]"},{"internalType":"address[]","name":"coinType_","type":"address[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"add_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"withdrawFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount_","type":"uint256"},{"internalType":"address","name":"coinType_","type":"address"}],"name":"withdrawInterest","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1148":{"entryPoint":null,"id":1148,"parameterSlots":4,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_3116":{"entryPoint":null,"id":3116,"parameterSlots":1,"returnSlots":0},"@_3590":{"entryPoint":null,"id":3590,"parameterSlots":1,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":204,"id":111,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_172":{"entryPoint":162,"id":172,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":286,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint16t_address_fromMemory":{"entryPoint":315,"id":null,"parameterSlots":2,"returnSlots":4}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:730:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:21"},"nodeType":"YulFunctionCall","src":"171:12:21"},"nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:21"},"nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:21"},"nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:21"},"nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:21"},"nodeType":"YulFunctionCall","src":"118:50:21"},"nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"327:401:21","statements":[{"body":{"nodeType":"YulBlock","src":"374:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"383:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"386:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"376:6:21"},"nodeType":"YulFunctionCall","src":"376:12:21"},"nodeType":"YulExpressionStatement","src":"376:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"348:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"357:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"344:3:21"},"nodeType":"YulFunctionCall","src":"344:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"369:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"340:3:21"},"nodeType":"YulFunctionCall","src":"340:33:21"},"nodeType":"YulIf","src":"337:53:21"},{"nodeType":"YulAssignment","src":"399:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"439:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"409:29:21"},"nodeType":"YulFunctionCall","src":"409:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"399:6:21"}]},{"nodeType":"YulAssignment","src":"458:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"502:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"513:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:21"},"nodeType":"YulFunctionCall","src":"498:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"468:29:21"},"nodeType":"YulFunctionCall","src":"468:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"458:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"526:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"549:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"560:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:21"},"nodeType":"YulFunctionCall","src":"545:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"539:5:21"},"nodeType":"YulFunctionCall","src":"539:25:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"530:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"614:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"623:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"626:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"616:6:21"},"nodeType":"YulFunctionCall","src":"616:12:21"},"nodeType":"YulExpressionStatement","src":"616:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"586:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"597:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"604:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"593:3:21"},"nodeType":"YulFunctionCall","src":"593:18:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"583:2:21"},"nodeType":"YulFunctionCall","src":"583:29:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"576:6:21"},"nodeType":"YulFunctionCall","src":"576:37:21"},"nodeType":"YulIf","src":"573:57:21"},{"nodeType":"YulAssignment","src":"639:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"649:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"639:6:21"}]},{"nodeType":"YulAssignment","src":"663:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"718:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"703:3:21"},"nodeType":"YulFunctionCall","src":"703:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"673:29:21"},"nodeType":"YulFunctionCall","src":"673:49:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"663:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint16t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"269:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"280:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"292:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"300:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"308:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"316:6:21","type":""}],"src":"196:532:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value2 := value\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162005e5238038062005e5283398101604081905262000034916200013b565b82806200004133620000a2565b6001600160a01b03908116608052600180546001600160a01b03199081169783169790971781556000805461ffff191661ffff96909616959095179094556006805460ff191690941790935550600a805490941691161790915550620001a0565b600c80546001600160a01b0319169055620000c981620000cc602090811b6200370e17901c565b50565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200013657600080fd5b919050565b600080600080608085870312156200015257600080fd5b6200015d856200011e565b93506200016d602086016200011e565b9250604085015161ffff811681146200018557600080fd5b915062000195606086016200011e565b905092959194509250565b608051615c3b6200021760003960008181610a9d01528181610d830152818161104f015281816111770152818161121801528181611b6f015281816120bf015281816123520152818161296c01528181612b3e01528181613075015281816130a4015281816132cf015261435f0152615c3b6000f3fe6080604052600436106103095760003560e01c80621d35671461030e578063021b9359146103305780630707a0f01461036657806307e0db17146103ad578063083118d5146103cd578063085a10cf146103ef5780630eaf6ea61461040f57806310ddb1371461042f5780631210aac21461044f57806316e576521461046f57806319fc2e611461048f57806328dd2d01146104c357806329e26b10146105255780632a0276f8146105655780632f48ab7d1461058757806330c593f7146105a75780633d8b38f6146105d557806342d65a8d146105f557806347535d7b1461061557806347e7ef241461062f5780634893c26a14610642578063492e527e14610672578063504f1671146106925780635358fbda146106b257806357463d35146106c55780635b8c41e6146106fa5780635e5c06e21461074957806366ad5c8a146107dc57806368637549146107fc5780636d1daa281461081c578063715018a61461083c5780637533d7881461085157806379ba5097146108715780637a4fda3d146108865780637aaa3470146108b3578063806b834d146108e9578063819faf7b146109095780638cfd8f5c146109295780638da5cb5b1461096157806391d1485414610976578063950c8a74146109965780639f38369a146109b6578063a217fddf146109d6578063a304dcf4146109eb578063a4ca74db14610a0b578063a6c3d16514610a2b578063aaff5f1614610a4b578063b273f20714610a6b578063b353aaa714610a8b578063b3cb890f14610abf578063b7a745c614610adf578063baf3292d14610b0f578063bd99d7e114610b2f578063c392f76614610b5f578063c779c1c314610b85578063cbed8b9c14610bb2578063d1deba1f14610bd2578063d667a5da14610be5578063df2a5b3b14610c08578063e2f2882414610c28578063e30c397814610c48578063e52249e314610c5d578063eb8d72b714610c7d578063f2fde38b14610c9d578063f5ecbdbc14610cbd578063f8b2cb4f14610cdd578063fb89573314610d0e578063fd9be52214610d30578063ff464d3f14610d50575b600080fd5b34801561031a57600080fd5b5061032e610329366004614598565b610d80565b005b34801561033c57600080fd5b5061035061034b366004614642565b610fb1565b60405161035d919061465f565b60405180910390f35b34801561037257600080fd5b5061039f610381366004614642565b6001600160a01b031660009081526003602052604090206007015490565b60405190815260200161035d565b3480156103b957600080fd5b5061032e6103c8366004614673565b61102e565b3480156103d957600080fd5b506103e26110b7565b60405161035d91906146e0565b3480156103fb57600080fd5b5061032e61040a366004614701565b611145565b34801561041b57600080fd5b5061032e61042a36600461471e565b611160565b34801561043b57600080fd5b5061032e61044a366004614673565b6111f7565b34801561045b57600080fd5b5061032e61046a366004614772565b61124f565b34801561047b57600080fd5b5061032e61048a3660046148cb565b61137a565b34801561049b57600080fd5b5061039f7f52941335797217779ab62cf10a3ae2b6d453b5f3a1285e7a816eb9f63a58d66981565b3480156104cf57600080fd5b506104e36104de366004614983565b6116b0565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015264ffffffffff1660e08201526101000161035d565b34801561053157600080fd5b50610555610540366004614642565b60126020526000908152604090205460ff1681565b604051901515815260200161035d565b34801561057157600080fd5b5061039f600080516020615bc683398151915281565b34801561059357600080fd5b50600a54610350906001600160a01b031681565b3480156105b357600080fd5b506000546105c29061ffff1681565b60405161ffff909116815260200161035d565b3480156105e157600080fd5b506105556105f036600461471e565b611a84565b34801561060157600080fd5b5061032e61061036600461471e565b611b50565b34801561062157600080fd5b506006546105559060ff1681565b61032e61063d3660046149b1565b611bd6565b34801561064e57600080fd5b5061055561065d366004614642565b60096020526000908152604090205460ff1681565b34801561067e57600080fd5b5061032e61068d3660046149dd565b61209d565b34801561069e57600080fd5b506103e26106ad366004614642565b61217e565b61032e6106c03660046149fb565b612212565b3480156106d157600080fd5b506106e56106e0366004614642565b61233e565b6040805192835260208301919091520161035d565b34801561070657600080fd5b5061039f610715366004614a8c565b6010602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b34801561075557600080fd5b506107a5610764366004614642565b60036020819052600091825260409091208054600182015492820154600483015460068401546007909401546001600160a01b039093169493919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c00161035d565b3480156107e857600080fd5b5061032e6107f7366004614598565b6123f7565b34801561080857600080fd5b5061039f610817366004614642565b6124d3565b34801561082857600080fd5b5061032e610837366004614aeb565b6125c5565b34801561084857600080fd5b5061032e612610565b34801561085d57600080fd5b506103e261086c366004614673565b612624565b34801561087d57600080fd5b5061032e61263d565b34801561089257600080fd5b5061039f6108a1366004614642565b60136020526000908152604090205481565b3480156108bf57600080fd5b5061039f6108ce366004614642565b6001600160a01b031660009081526011602052604090205490565b3480156108f557600080fd5b5061039f610904366004614983565b6126bb565b34801561091557600080fd5b50600154610350906001600160a01b031681565b34801561093557600080fd5b5061039f610944366004614b09565b600e60209081526000928352604080842090915290825290205481565b34801561096d57600080fd5b506103506126ee565b34801561098257600080fd5b50610555610991366004614772565b6126fd565b3480156109a257600080fd5b50600f54610350906001600160a01b031681565b3480156109c257600080fd5b506103e26109d1366004614673565b612728565b3480156109e257600080fd5b5061039f600081565b3480156109f757600080fd5b5061032e610a06366004614b37565b612837565b348015610a1757600080fd5b5061032e610a26366004614b65565b61286a565b348015610a3757600080fd5b5061032e610a4636600461471e565b6128d9565b348015610a5757600080fd5b5061032e610a66366004614bab565b612955565b348015610a7757600080fd5b50610350610a86366004614c2d565b6129e2565b348015610a9757600080fd5b506103507f000000000000000000000000000000000000000000000000000000000000000081565b348015610acb57600080fd5b5061039f610ada3660046149fb565b612a6f565b348015610aeb57600080fd5b50610555610afa366004614642565b60146020526000908152604090205460ff1681565b348015610b1b57600080fd5b5061032e610b2a366004614642565b612ac1565b348015610b3b57600080fd5b5061039f610b4a3660046149fb565b60076020526000908152604090206001015481565b348015610b6b57600080fd5b50600054610350906201000090046001600160a01b031681565b348015610b9157600080fd5b5061039f610ba0366004614642565b60116020526000908152604090205481565b348015610bbe57600080fd5b5061032e610bcd366004614c69565b612b1f565b61032e610be0366004614598565b612b7b565b348015610bf157600080fd5b50610bfa612d91565b60405161035d929190614d3e565b348015610c1457600080fd5b5061032e610c23366004614d63565b612fbe565b348015610c3457600080fd5b50610350610c43366004614673565b613070565b348015610c5457600080fd5b506103506131a2565b348015610c6957600080fd5b5061032e610c783660046149b1565b6131b1565b348015610c8957600080fd5b5061032e610c9836600461471e565b6131f5565b348015610ca957600080fd5b5061032e610cb8366004614642565b61324f565b348015610cc957600080fd5b506103e2610cd8366004614da4565b6132b5565b348015610ce957600080fd5b50610cfd610cf8366004614642565b613358565b60405161035d959493929190614df5565b348015610d1a57600080fd5b5061039f600080516020615be683398151915281565b348015610d3c57600080fd5b5061032e610d4b3660046149b1565b6135d3565b348015610d5c57600080fd5b50610555610d6b366004614642565b60046020526000908152604090205460ff1681565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610dfd5760405162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572000060448201526064015b60405180910390fd5b61ffff86166000908152600d602052604081208054610e1b90614e41565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4790614e41565b8015610e945780601f10610e6957610100808354040283529160200191610e94565b820191906000526020600020905b815481529060010190602001808311610e7757829003601f168201915b50505050509050805186869050148015610eaf575060008151115b8015610ed7575080516020820120604051610ecd9088908890614e7b565b6040518091039020145b610f325760405162461bcd60e51b815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6044820152651b9d1c9858dd60d21b6064820152608401610df4565b610fa88787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061376092505050565b50505050505050565b6001546040516335ea6a7560e01b81526000916001600160a01b0316906335ea6a7590610fe290859060040161465f565b61018060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190614f14565b60e0015192915050565b6110366137d9565b6040516307e0db1760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307e0db17906024015b600060405180830381600087803b15801561109c57600080fd5b505af11580156110b0573d6000803e3d6000fd5b5050505050565b600280546110c490614e41565b80601f01602080910402602001604051908101604052809291908181526020018280546110f090614e41565b801561113d5780601f106111125761010080835404028352916020019161113d565b820191906000526020600020905b81548152906001019060200180831161112057829003601f168201915b505050505081565b61114d6137d9565b6006805460ff1916911515919091179055565b604051630757b75360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630eaf6ea6906111b09086908690869060040161502a565b602060405180830381865afa1580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f19190615053565b50505050565b6111ff6137d9565b6040516310ddb13760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906310ddb13790602401611082565b60065460ff1615156001146112765760405162461bcd60e51b8152600401610df490615070565b336000908152601160205260409020548211156112a55760405162461bcd60e51b8152600401610df490615091565b33600090815260116020526040812080548492906112c49084906150d5565b909155505060405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb906112f790339086906004016150e8565b6020604051808303816000875af1158015611316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133a9190615053565b507fbb992170d0382feeb939a59875390a636bd942134e6e58925caf64c99432820a33828460405161136e93929190615101565b60405180910390a15050565b60065460ff1615156001146113a15760405162461bcd60e51b8152600401610df490615070565b33600090815260036020526040902081518351146113f25760405162461bcd60e51b815260206004820152600e60248201526d082e4e4c2f240dad2e6dac2e8c6d60931b6044820152606401610df4565b60005b835181101561166f57600082600201600085848151811061141857611418615125565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905084828151811061145557611455615125565b602002602001015181101561147c5760405162461bcd60e51b8152600401610df49061513b565b84828151811061148e5761148e615125565b60200260200101518360020160008685815181106114ae576114ae615125565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114e591906150d5565b9091555050835160009085908490811061150157611501615125565b60200260200101516001600160a01b03160361156f57336001600160a01b03166108fc86848151811061153657611536615125565b60200260200101519081150290604051600060405180830381858888f19350505050158015611569573d6000803e3d6000fd5b5061165c565b600084838151811061158357611583615125565b60200260200101516001600160a01b031663a9059cbb338886815181106115ac576115ac615125565b60200260200101516040518363ffffffff1660e01b81526004016115d19291906150e8565b6020604051808303816000875af11580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116149190615053565b905060018115151461165a5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606401610df4565b505b508061166781615169565b9150506113f5565b507fd4de851ae1bdf4ea540c1d68657b95bdc9710e532c03bf807c1a7107d238706b8284336040516116a393929190615182565b60405180910390a1505050565b6001546040516335ea6a7560e01b8152600091829182918291829182918291829182916001600160a01b0316906335ea6a75906116f1908e9060040161465f565b61018060405180830381865afa15801561170f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117339190614f14565b60e08101516040516370a0823160e01b81529192506001600160a01b0316906370a0823190611766908d9060040161465f565b602060405180830381865afa158015611783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a791906151c0565b6101208201516040516370a0823160e01b8152919a506001600160a01b0316906370a08231906117db908d9060040161465f565b602060405180830381865afa1580156117f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181c91906151c0565b6101008201516040516370a0823160e01b81529198506001600160a01b0316906370a0823190611850908d9060040161465f565b602060405180830381865afa15801561186d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189191906151c0565b61010082015160405163631a6fd560e11b81529199506001600160a01b03169063c634dfaa906118c5908d9060040161465f565b602060405180830381865afa1580156118e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190691906151c0565b610120820151604051630ed1279f60e11b81529197506001600160a01b031690631da24f3e9061193a908d9060040161465f565b602060405180830381865afa158015611957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197b91906151c0565b945080606001516001600160801b031692508061010001516001600160a01b031663e78c9b3b8b6040518263ffffffff1660e01b81526004016119be919061465f565b602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff91906151c0565b610100820151604051631e739ae360e21b81529195506001600160a01b0316906379ce6b8c90611a33908d9060040161465f565b602060405180830381865afa158015611a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7491906151d9565b9150509295985092959890939650565b61ffff83166000908152600d602052604081208054829190611aa590614e41565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad190614e41565b8015611b1e5780601f10611af357610100808354040283529160200191611b1e565b820191906000526020600020905b815481529060010190602001808311611b0157829003601f168201915b505050505090508383604051611b35929190614e7b565b60405180910390208180519060200120149150509392505050565b611b586137d9565b6040516342d65a8d60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d90611ba89086908690869060040161502a565b600060405180830381600087803b158015611bc257600080fd5b505af1158015610fa8573d6000803e3d6000fd5b600654600090819060ff161515600114611c1c5760405162461bcd60e51b8152602060048201526007602482015266436c6f73696e6760c81b6044820152606401610df4565b6001600160a01b03841660009081526012602052604090205460ff161515600114611c9c5760405162461bcd60e51b815260206004820152602a60248201527f526563686172676520696e20746869732063757272656e6379206973206e6f74604482015269081cdd5c1c1bdc9d195960b21b6064820152608401610df4565b6040516370a0823160e01b815283906001600160a01b038616906370a0823190611cca90339060040161465f565b602060405180830381865afa158015611ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0b91906151c0565b1015611d295760405162461bcd60e51b8152600401610df49061513b565b604051636eb1769f60e11b815283906001600160a01b0386169063dd62ed3e90611d5990339030906004016151f4565b602060405180830381865afa158015611d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9a91906151c0565b1015611db85760405162461bcd60e51b8152600401610df49061520e565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190611de790339060040161465f565b602060405180830381865afa158015611e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2891906151c0565b6040516323b872dd60e01b81529091506001600160a01b038616906323b872dd90611e5b90339030908990600401615101565b6020604051808303816000875af1158015611e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9e9190615053565b50611ea984826150d5565b6040516370a0823160e01b81526001600160a01b038716906370a0823190611ed590339060040161465f565b602060405180830381865afa158015611ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1691906151c0565b14611f335760405162461bcd60e51b8152600401610df49061513b565b6000611f3e3361233e565b50905034811115611f615760405162461bcd60e51b8152600401610df490615238565b6001600160a01b03861660009081526004602052604090205460ff16151560010361200357600a5460019450600090611fa2906001600160a01b03166124d3565b9050611fae8787613838565b600a54611fc3906001600160a01b03166124d3565b611fcd828861526c565b611fd791906150d5565b60010361200157600a54611ff3906001600160a01b03166124d3565b611ffe90600161526c565b93505b505b600a54612018906001600160a01b03166124d3565b60005460405191945061205a9161ffff909116906120459033908a908a908a906001908b9060200161527f565b604051602081830303815290604052346139b3565b7f448d2b6792a74a21bfa5114f7cd01a036f36236f4e3687339032e97103e653ce86863360405161208d939291906152d8565b60405180910390a1505050505050565b6120a56137d9565b6040516304b2b47b60e11b81526006906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c90829063096568f6906120fc90309060040161465f565b602060405180830381865afa158015612119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213d91906152fb565b858486604051602001612150919061465f565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401611ba89493929190615318565b6060816000806127106000600a6121a9600a60009054906101000a90046001600160a01b03166124d3565b604080516001600160a01b03909816602089015260ff96871690880152938516606087015261ffff9092166080860152831660a08501529190911660c083015260e0820152620f4240610100820152610120016040516020818303038152906040529050919050565b60065460ff1615156001146122395760405162461bcd60e51b8152600401610df490615070565b60006122443361233e565b50905034612252828461526c565b11156122925760405162461bcd60e51b815260206004820152600f60248201526e0c2dadeeadce840dcde40dac2e8c6d608b1b6044820152606401610df4565b348111156122b25760405162461bcd60e51b8152600401610df490615238565b60008054600a546123099261ffff909216913391869082906002906122df906001600160a01b03166124d3565b6040516020016122f49695949392919061527f565b604051602081830303815290604052836139b3565b604080518381523360208201527f0f007803da765bf8bfb79898e5892989976c0f6b9f69dd946cb8b949c781587a910161136e565b600080548190819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340a7bb109061ffff16306123878961217e565b600060026040518663ffffffff1660e01b81526004016123ab95949392919061534f565b6040805180830381865afa1580156123c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123eb919061540d565b90969095509350505050565b3330146124555760405162461bcd60e51b815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d7573742062656044820152650204c7a4170760d41b6064820152608401610df4565b6124cb8686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f890181900481028201810190925287815289935091508790879081908401838280828437600092019190915250613a4c92505050565b505050505050565b6001546040516335ea6a7560e01b815260009182916001600160a01b03909116906335ea6a759061250890869060040161465f565b61018060405180830381865afa158015612526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254a9190614f14565b60e08101516040516370a0823160e01b81529192506001600160a01b0316906370a082319061257d90309060040161465f565b602060405180830381865afa15801561259a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125be91906151c0565b9392505050565b6125cd6137d9565b6040516001600160f01b031960f084901b166020820152602281018290526042016040516020818303038152906040526002908161260b919061548c565b505050565b6126186137d9565b6126226000613f78565b565b600d60205260009081526040902080546110c490614e41565b33806126476131a2565b6001600160a01b0316146126af5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610df4565b6126b881613f78565b50565b60008060006126ca85856116b0565b50505050509250509150600081836126e291906150d5565b93505050505b92915050565b600b546001600160a01b031690565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61ffff81166000908152600d602052604081208054606092919061274b90614e41565b80601f016020809104026020016040519081016040528092919081815260200182805461277790614e41565b80156127c45780601f10612799576101008083540402835291602001916127c4565b820191906000526020600020905b8154815290600101906020018083116127a757829003601f168201915b50505050509050805160000361281c5760405162461bcd60e51b815260206004820152601d60248201527f4c7a4170703a206e6f20747275737465642070617468207265636f72640000006044820152606401610df4565b6125be60006014835161282f91906150d5565b839190613f91565b61283f6137d9565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6128726137d9565b60005b825181101561260b57816012600085848151811061289557612895615125565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806128d181615169565b915050612875565b6128e16137d9565b8181306040516020016128f693929190615545565b60408051601f1981840301815291815261ffff85166000908152600d6020522090612921908261548c565b507f8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce8383836040516116a39392919061502a565b60405163557faf8b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063aaff5f16906129a99088908890889088908890600401615566565b600060405180830381600087803b1580156129c357600080fd5b505af11580156129d7573d6000803e3d6000fd5b505050505050505050565b6000806129ee84612a6f565b905060008060006129fe8661409e565b60408051600081526020810180835289905260ff8516918101919091526060810183905260808101829052929550909350915060019060a0016020604051602081039080840390855afa158015612a59573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b6040517b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b612ac96137d9565b600f80546001600160a01b0319166001600160a01b0383161790556040517f5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b90612b1490839061465f565b60405180910390a150565b612b276137d9565b6040516332fb62e760e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906129a990889088908890889088906004016155a3565b61ffff86166000908152601060205260408082209051612b9e9088908890614e7b565b90815260408051602092819003830190206001600160401b03871660009081529252902054905080612c1e5760405162461bcd60e51b815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201526261676560e81b6064820152608401610df4565b808383604051612c2f929190614e7b565b604051809103902014612c8e5760405162461bcd60e51b815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f616044820152601960fa1b6064820152608401610df4565b61ffff87166000908152601060205260408082209051612cb19089908990614e7b565b90815260408051602092819003830181206001600160401b038916600090815290845282902093909355601f88018290048202830182019052868252612d49918991899089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a935091508890889081908401838280828437600092019190915250613a4c92505050565b7fc264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e58787878785604051612d809594939291906155dc565b60405180910390a150505050505050565b6060806000805b600854811015612e065760006013600060088481548110612dbb57612dbb615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020541115612df45781612df081615169565b9250505b80612dfe81615169565b915050612d98565b506000816001600160401b03811115612e2157612e216147a2565b604051908082528060200260200182016040528015612e4a578160200160208202803683370190505b5090506000826001600160401b03811115612e6757612e676147a2565b604051908082528060200260200182016040528015612e90578160200160208202803683370190505b50905060005b600854811015612fb65760006013600060088481548110612eb957612eb9615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020541115612fa45760088181548110612ef757612ef7615125565b9060005260206000200160009054906101000a90046001600160a01b0316838281518110612f2757612f27615125565b60200260200101906001600160a01b031690816001600160a01b0316815250506013600060088381548110612f5e57612f5e615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020548251839083908110612f9757612f97615125565b6020026020010181815250505b80612fae81615169565b915050612e96565b505050509091565b612fc66137d9565b6000811161300e5760405162461bcd60e51b81526020600482015260156024820152744c7a4170703a20696e76616c6964206d696e47617360581b6044820152606401610df4565b61ffff8381166000818152600e602090815260408083209487168084529482529182902085905581519283528201929092529081018290527f9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0906060016116a3565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5ecbdbc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663096568f6306040518263ffffffff1660e01b81526004016130ee919061465f565b602060405180830381865afa15801561310b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312f91906152fb565b853060066040518563ffffffff1660e01b81526004016131529493929190615617565b600060405180830381865afa15801561316f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131979190810190615689565b602001519392505050565b600c546001600160a01b031690565b6131b96137d9565b806001036131dd576131d9600080516020615be683398151915283614110565b5050565b6131d9600080516020615bc683398151915283614110565b6131fd6137d9565b61ffff83166000908152600d6020526040902061321b8284836156bd565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab8383836040516116a39392919061502a565b6132576137d9565b600c80546001600160a01b0319166001600160a01b03831690811790915561327d6126ee565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b604051633d7b2f6f60e21b81526060906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f5ecbdbc9061330a908890889030908890600401615617565b600060405180830381865afa158015613327573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261334f9190810190615689565b95945050505050565b6001600160a01b038116600090815260036020526040812081906060908190839081805b6008548110156133e9578260020160006008838154811061339f5761339f615125565b60009182526020808320909101546001600160a01b03168352820192909252604001902054156133d757816133d381615169565b9250505b806133e181615169565b91505061337c565b506000816001600160401b03811115613404576134046147a2565b60405190808252806020026020018201604052801561342d578160200160208202803683370190505b5090506000826001600160401b0381111561344a5761344a6147a2565b604051908082528060200260200182016040528015613473578160200160208202803683370190505b5090506000805b6008548110156135a7578560020160006008838154811061349d5761349d615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020541561359557600881815481106134da576134da615125565b9060005260206000200160009054906101000a90046001600160a01b031684838151811061350a5761350a615125565b60200260200101906001600160a01b031690816001600160a01b0316815250508560020160006008838154811061354357613543615125565b60009182526020808320909101546001600160a01b03168352820192909252604001902054835184908490811061357c5761357c615125565b60209081029190910101528161359181615169565b9250505b8061359f81615169565b91505061347a565b5050835460018501546003909501546001600160a01b039091169b949a50919850965094509092505050565b6135db6137d9565b6001600160a01b0382166000908152601360205260409020548111156136135760405162461bcd60e51b8152600401610df490615091565b61362b600080516020615bc6833981519152336126fd565b15156001146136705760405162461bcd60e51b815260206004820152601160248201527014195c9b5a5cdcda5bdb8811195b9a5959607a1b6044820152606401610df4565b6001600160a01b038216600090815260136020526040812080548392906136989084906150d5565b909155505060405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906136cb90339085906004016150e8565b6020604051808303816000875af11580156136ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260b9190615053565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806137c35a60966366ad5c8a60e01b898989896040516024016137889493929190615776565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091523092919061411a565b91509150816124cb576124cb86868686856141a4565b336137e26126ee565b6001600160a01b0316146126225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610df4565b60015460405163095ea7b360e01b81526001600160a01b038481169263095ea7b39261386c929091169085906004016150e8565b6020604051808303816000875af115801561388b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138af9190615053565b50600154604051636eb1769f60e11b815282916001600160a01b038086169263dd62ed3e926138e59230929116906004016151f4565b602060405180830381865afa158015613902573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061392691906151c0565b10156139445760405162461bcd60e51b8152600401610df49061520e565b60015460405163e8eda9df60e01b81526001600160a01b03848116600483015260248201849052306044830152600060648301529091169063e8eda9df90608401600060405180830381600087803b15801561399f57600080fd5b505af11580156124cb573d6000803e3d6000fd5b61260b8383336000600280546139c890614e41565b80601f01602080910402602001604051908101604052809291908181526020018280546139f490614e41565b8015613a415780601f10613a1657610100808354040283529160200191613a41565b820191906000526020600020905b815481529060010190602001808311613a2457829003601f168201915b505050505086614241565b60008060008060008086806020019051810190613a699190615873565b945094509450945094506000856000015186602001518760400151604051602001613a9491906159cd565b6040516020818303038152906040528860600151604051602001613ab89190615a0c565b60408051601f198184030181529082905260808b015160a08c0151613ae296959493602001615a36565b60405160208183030381529060405290508315613bb657613b1d600080516020615be68339815191526109918860c001518960e001516129e2565b1515600114613b695760405162461bcd60e51b8152602060048201526018602482015277546865207369676e6572206973206e6f742061206e6f646560401b6044820152606401610df4565b8051602082012060c08701518114613bb45760405162461bcd60e51b815260206004820152600e60248201526d496e636f7272656374206461746160901b6044820152606401610df4565b505b85516001600160a01b0390811660009081526003602090815260408220895181546001600160a01b03191694169390931783558801516001830155608088015160078301555b8451811015613cf457838181518110613c1757613c17615125565b602002602001015160136000878481518110613c3557613c35615125565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555060046000868381518110613c7757613c77615125565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615613ce2576000848281518110613cb757613cb7615125565b60200260200101511115613ce257838181518110613cd757613cd7615125565b602002602001015198505b80613cec81615169565b915050613bfc565b506000805b886040015151811015613ebe57613d2c89604001518281518110613d1f57613d1f615125565b60200260200101516143db565b88606001518181518110613d4257613d42615125565b60200260200101518360020160008b604001518481518110613d6657613d66615125565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254613d9d919061526c565b92505081905550600460008a604001518381518110613dbe57613dbe615125565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615613eac5760019150600089606001518281518110613e0657613e06615125565b602002602001015189613e19919061526c565b1115613eac5788516001600160a01b0316600090815260116020526040812080548a9290613e4890849061526c565b92505081905550613eaa89604001518281518110613e6857613e68615125565b60200260200101518b8b606001518481518110613e8757613e87615125565b60200260200101518b613e9a919061526c565b613ea4919061526c565b30614465565b505b80613eb681615169565b915050613cf9565b5080158015613ecd5750600087115b15613f1c5787516001600160a01b031660009081526011602052604081208054899290613efb90849061526c565b9091555050600a54613f1a906001600160a01b0316613ea48b8a61526c565b505b7fc53f0aae5ad30d5251e6054a1874116c45eaf54274cdb1940ee106d67c10b3a5886000015189604001518a606001518b60a00151604051613f619493929190615aa5565b60405180910390a150505050505050505050505050565b600c80546001600160a01b03191690556126b88161370e565b606081613f9f81601f61526c565b1015613fde5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610df4565b613fe8828461526c565b8451101561402c5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610df4565b60608215801561404b5760405191506000825260208201604052614095565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561408457805183526020928301920161406c565b5050858452601f01601f1916604052505b50949350505050565b600080600083516041146140f45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610df4565b5050506020810151604082015160609092015160001a92909190565b6131d982826144e5565b6000606060008060008661ffff166001600160401b0381111561413f5761413f6147a2565b6040519080825280601f01601f191660200182016040528015614169576020820181803683370190505b50905060008087516020890160008d8df191503d92508683111561418b578692505b828152826000602083013e909890975095505050505050565b8180519060200120601060008761ffff1661ffff168152602001908152602001600020856040516141d59190615af0565b9081526040805191829003602090810183206001600160401b0388166000908152915220919091557fe183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c906142329087908790879087908790615b0c565b60405180910390a15050505050565b61ffff86166000908152600d60205260408120805461425f90614e41565b80601f016020809104026020016040519081016040528092919081815260200182805461428b90614e41565b80156142d85780601f106142ad576101008083540402835291602001916142d8565b820191906000526020600020905b8154815290600101906020018083116142bb57829003601f168201915b5050505050905080516000036143495760405162461bcd60e51b815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201526f61207472757374656420736f7572636560801b6064820152608401610df4565b60405162c5803160e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c58031009084906143a0908b9086908c908c908c908c90600401615b5e565b6000604051808303818588803b1580156143b957600080fd5b505af11580156143cd573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b03811660009081526009602052604081205460ff16151590036126b8576001600160a01b03166000818152600960205260408120805460ff191660019081179091556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319169091179055565b600154604051631a4ca37b60e21b81526000916001600160a01b0316906369328dec9061449a908790879087906004016152d8565b6020604051808303816000875af11580156144b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144dd91906151c0565b949350505050565b6144ef82826126fd565b6131d95760008281526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790555050565b61ffff811681146126b857600080fd5b60008083601f84011261454657600080fd5b5081356001600160401b0381111561455d57600080fd5b60208301915083602082850101111561457557600080fd5b9250929050565b80356001600160401b038116811461459357600080fd5b919050565b600080600080600080608087890312156145b157600080fd5b86356145bc81614524565b955060208701356001600160401b03808211156145d857600080fd5b6145e48a838b01614534565b90975095508591506145f860408a0161457c565b9450606089013591508082111561460e57600080fd5b5061461b89828a01614534565b979a9699509497509295939492505050565b6001600160a01b03811681146126b857600080fd5b60006020828403121561465457600080fd5b81356125be8161462d565b6001600160a01b0391909116815260200190565b60006020828403121561468557600080fd5b81356125be81614524565b60005b838110156146ab578181015183820152602001614693565b50506000910152565b600081518084526146cc816020860160208601614690565b601f01601f19169290920160200192915050565b6020815260006125be60208301846146b4565b80151581146126b857600080fd5b60006020828403121561471357600080fd5b81356125be816146f3565b60008060006040848603121561473357600080fd5b833561473e81614524565b925060208401356001600160401b0381111561475957600080fd5b61476586828701614534565b9497909650939450505050565b6000806040838503121561478557600080fd5b8235915060208301356147978161462d565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b03811182821017156147db576147db6147a2565b60405290565b60405161010081016001600160401b03811182821017156147db576147db6147a2565b604051601f8201601f191681016001600160401b038111828210171561482c5761482c6147a2565b604052919050565b60006001600160401b0382111561484d5761484d6147a2565b5060051b60200190565b600082601f83011261486857600080fd5b8135602061487d61487883614834565b614804565b82815260059290921b8401810191818101908684111561489c57600080fd5b8286015b848110156148c05780356148b38161462d565b83529183019183016148a0565b509695505050505050565b600080604083850312156148de57600080fd5b82356001600160401b03808211156148f557600080fd5b818501915085601f83011261490957600080fd5b8135602061491961487883614834565b82815260059290921b8401810191818101908984111561493857600080fd5b948201945b838610156149565785358252948201949082019061493d565b9650508601359250508082111561496c57600080fd5b5061497985828601614857565b9150509250929050565b6000806040838503121561499657600080fd5b82356149a18161462d565b915060208301356147978161462d565b600080604083850312156149c457600080fd5b82356149cf8161462d565b946020939093013593505050565b600080604083850312156149f057600080fd5b82356149a181614524565b600060208284031215614a0d57600080fd5b5035919050565b60006001600160401b03821115614a2d57614a2d6147a2565b50601f01601f191660200190565b600082601f830112614a4c57600080fd5b8135614a5a61487882614a14565b818152846020838601011115614a6f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215614aa157600080fd5b8335614aac81614524565b925060208401356001600160401b03811115614ac757600080fd5b614ad386828701614a3b565b925050614ae26040850161457c565b90509250925092565b60008060408385031215614afe57600080fd5b82356149cf81614524565b60008060408385031215614b1c57600080fd5b8235614b2781614524565b9150602083013561479781614524565b60008060408385031215614b4a57600080fd5b8235614b558161462d565b91506020830135614797816146f3565b60008060408385031215614b7857600080fd5b82356001600160401b03811115614b8e57600080fd5b614b9a85828601614857565b9250506020830135614797816146f3565b600080600080600060608688031215614bc357600080fd5b8535614bce81614524565b945060208601356001600160401b0380821115614bea57600080fd5b614bf689838a01614534565b90965094506040880135915080821115614c0f57600080fd5b50614c1c88828901614534565b969995985093965092949392505050565b60008060408385031215614c4057600080fd5b8235915060208301356001600160401b03811115614c5d57600080fd5b61497985828601614a3b565b600080600080600060808688031215614c8157600080fd5b8535614c8c81614524565b94506020860135614c9c81614524565b93506040860135925060608601356001600160401b03811115614cbe57600080fd5b614c1c88828901614534565b600081518084526020808501945080840160005b83811015614d035781516001600160a01b031687529582019590820190600101614cde565b509495945050505050565b600081518084526020808501945080840160005b83811015614d0357815187529582019590820190600101614d22565b604081526000614d516040830185614cca565b828103602084015261334f8185614d0e565b600080600060608486031215614d7857600080fd5b8335614d8381614524565b92506020840135614d9381614524565b929592945050506040919091013590565b60008060008060808587031215614dba57600080fd5b8435614dc581614524565b93506020850135614dd581614524565b92506040850135614de58161462d565b9396929550929360600135925050565b60018060a01b038616815284602082015260a060408201526000614e1c60a0830186614cca565b8281036060840152614e2e8186614d0e565b9150508260808301529695505050505050565b600181811c90821680614e5557607f821691505b602082108103614e7557634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b600060208284031215614e9d57600080fd5b604051602081016001600160401b0381118282101715614ebf57614ebf6147a2565b6040529151825250919050565b80516001600160801b038116811461459357600080fd5b805164ffffffffff8116811461459357600080fd5b80516145938161462d565b805160ff8116811461459357600080fd5b60006101808284031215614f2757600080fd5b614f2f6147b8565b614f398484614e8b565b8152614f4760208401614ecc565b6020820152614f5860408401614ecc565b6040820152614f6960608401614ecc565b6060820152614f7a60808401614ecc565b6080820152614f8b60a08401614ecc565b60a0820152614f9c60c08401614ee3565b60c0820152614fad60e08401614ef8565b60e0820152610100614fc0818501614ef8565b90820152610120614fd2848201614ef8565b90820152610140614fe4848201614ef8565b90820152610160614ff6848201614f03565b908201529392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff8416815260406020820152600061334f604083018486615001565b8051614593816146f3565b60006020828403121561506557600080fd5b81516125be816146f3565b602080825260079082015266636c6f73696e6760c81b604082015260600190565b6020808252601490820152734e6f742073756666696369656e742066756e647360601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156126e8576126e86150bf565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526014908201527310985b185b98d9481a5b9cdd59999a58da595b9d60621b604082015260600190565b60006001820161517b5761517b6150bf565b5060010190565b6060815260006151956060830186614cca565b82810360208401526151a78186614d0e565b91505060018060a01b0383166040830152949350505050565b6000602082840312156151d257600080fd5b5051919050565b6000602082840312156151eb57600080fd5b6125be82614ee3565b6001600160a01b0392831681529116602082015260400190565b60208082526010908201526f27379030baba3437b934bd30ba34b7b760811b604082015260600190565b6020808252601a90820152796e6f7420656e6f756768206e617469766520666f72206665657360301b604082015260600190565b808201808211156126e8576126e86150bf565b6001600160a01b0387811682528616602082015260408101859052831515606082015260c08101600584106152c457634e487b7160e01b600052602160045260246000fd5b608082019390935260a00152949350505050565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60006020828403121561530d57600080fd5b81516125be81614524565b600061ffff80871683528086166020840152508360408301526080606083015261534560808301846146b4565b9695505050505050565b61ffff861681526000602060018060a01b0387168184015260a0604084015261537b60a08401876146b4565b851515606085015283810360808501526000855461539881614e41565b808452600182811680156153b357600181146153cd576153fb565b60ff1984168688015282151560051b8601870194506153fb565b896000528660002060005b848110156153f35781548882018a01529083019088016153d8565b870188019550505b50929c9b505050505050505050505050565b6000806040838503121561542057600080fd5b505080516020909101519092909150565b601f82111561260b57600081815260208120601f850160051c810160208610156154585750805b601f850160051c820191505b818110156124cb57828155600101615464565b600019600383901b1c191660019190911b1790565b81516001600160401b038111156154a5576154a56147a2565b6154b9816154b38454614e41565b84615431565b602080601f8311600181146154e857600084156154d65750858301515b6154e08582615477565b8655506124cb565b600085815260208120601f198616915b82811015615517578886015182559484019460019091019084016154f8565b50858210156155355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8284823760609190911b6001600160601b0319169101908152601401919050565b61ffff86168152606060208201526000615584606083018688615001565b8281036040840152615597818587615001565b98975050505050505050565b600061ffff8088168352808716602084015250846040830152608060608301526155d1608083018486615001565b979650505050505050565b61ffff861681526080602082015260006155fa608083018688615001565b6001600160401b0394909416604083015250606001529392505050565b61ffff94851681529290931660208301526001600160a01b03166040820152606081019190915260800190565b600082601f83011261565557600080fd5b815161566361487882614a14565b81815284602083860101111561567857600080fd5b6144dd826020830160208701614690565b60006020828403121561569b57600080fd5b81516001600160401b038111156156b157600080fd5b6144dd84828501615644565b6001600160401b038311156156d4576156d46147a2565b6156e8836156e28354614e41565b83615431565b6000601f84116001811461571657600085156157045750838201355b61570e8682615477565b8455506110b0565b600083815260209020601f19861690835b828110156157475786850135825560209485019460019092019101615727565b50868210156157645760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b61ffff8516815260806020820152600061579360808301866146b4565b6001600160401b038516604084015282810360608401526155d181856146b4565b600082601f8301126157c557600080fd5b815160206157d561487883614834565b82815260059290921b840181019181810190868411156157f457600080fd5b8286015b848110156148c057805161580b8161462d565b83529183019183016157f8565b600082601f83011261582957600080fd5b8151602061583961487883614834565b82815260059290921b8401810191818101908684111561585857600080fd5b8286015b848110156148c0578051835291830191830161585c565b600080600080600060a0868803121561588b57600080fd5b85516001600160401b03808211156158a257600080fd5b90870190610100828a0312156158b757600080fd5b6158bf6147e1565b6158c883614ef8565b8152602083015160208201526040830151828111156158e657600080fd5b6158f28b8286016157b4565b60408301525060608301518281111561590a57600080fd5b6159168b828601615818565b6060830152506080830151608082015261593260a08401614f03565b60a082015260c083015160c082015260e08301518281111561595357600080fd5b61595f8b828601615644565b60e0830152506020890151909750955061597b60408901615048565b9450606088015191508082111561599157600080fd5b61599d89838a016157b4565b935060808801519150808211156159b357600080fd5b506159c088828901615818565b9150509295509295909350565b815160009082906020808601845b83811015615a005781516001600160a01b0316855293820193908201906001016159db565b50929695505050505050565b815160009082906020808601845b83811015615a0057815185529382019390820190600101615a1a565b606087901b6001600160601b0319168152601481018690528451600090615a64816034850160208a01614690565b855190830190615a7b816034840160208a01614690565b6034910190810194909452505060f81b6001600160f81b0319166054820152605501949350505050565b6001600160a01b0385168152608060208201819052600090615ac990830186614cca565b8281036040840152615adb8186614d0e565b91505060ff8316606083015295945050505050565b60008251615b02818460208701614690565b9190910192915050565b61ffff8616815260a060208201526000615b2960a08301876146b4565b6001600160401b03861660408401528281036060840152615b4a81866146b4565b9050828103608084015261559781856146b4565b61ffff8716815260c060208201526000615b7b60c08301886146b4565b8281036040840152615b8d81886146b4565b6001600160a01b0387811660608601528616608085015283810360a08501529050615bb881856146b4565b999850505050505050505056fef33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df1557c872046f094b8a493ec5eb6ea374eafbc3c05951e40de3c4302a41f3f127baa2646970667358221220e7879c436a9da870317fc799e00fdd3394d53b0532d2b806f362206f43f5b98e64736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5E52 CODESIZE SUB DUP1 PUSH3 0x5E52 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x13B JUMP JUMPDEST DUP3 DUP1 PUSH3 0x41 CALLER PUSH3 0xA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP8 DUP4 AND SWAP8 SWAP1 SWAP8 OR DUP2 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP PUSH1 0xA DUP1 SLOAD SWAP1 SWAP5 AND SWAP2 AND OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1A0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH3 0xC9 DUP2 PUSH3 0xCC PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x370E OR SWAP1 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP6 PUSH3 0x11E JUMP JUMPDEST SWAP4 POP PUSH3 0x16D PUSH1 0x20 DUP7 ADD PUSH3 0x11E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH3 0x195 PUSH1 0x60 DUP7 ADD PUSH3 0x11E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x5C3B PUSH3 0x217 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xA9D ADD MSTORE DUP2 DUP2 PUSH2 0xD83 ADD MSTORE DUP2 DUP2 PUSH2 0x104F ADD MSTORE DUP2 DUP2 PUSH2 0x1177 ADD MSTORE DUP2 DUP2 PUSH2 0x1218 ADD MSTORE DUP2 DUP2 PUSH2 0x1B6F ADD MSTORE DUP2 DUP2 PUSH2 0x20BF ADD MSTORE DUP2 DUP2 PUSH2 0x2352 ADD MSTORE DUP2 DUP2 PUSH2 0x296C ADD MSTORE DUP2 DUP2 PUSH2 0x2B3E ADD MSTORE DUP2 DUP2 PUSH2 0x3075 ADD MSTORE DUP2 DUP2 PUSH2 0x30A4 ADD MSTORE DUP2 DUP2 PUSH2 0x32CF ADD MSTORE PUSH2 0x435F ADD MSTORE PUSH2 0x5C3B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x309 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x1D3567 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x21B9359 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x707A0F0 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x83118D5 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x85A10CF EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xEAF6EA6 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x1210AAC2 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x16E57652 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x19FC2E61 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x28DD2D01 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x29E26B10 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x2A0276F8 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x30C593F7 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0x4893C26A EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0x492E527E EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x504F1671 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x57463D35 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x5E5C06E2 EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0x68637549 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0x6D1DAA28 EQ PUSH2 0x81C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x83C JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x851 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x871 JUMPI DUP1 PUSH4 0x7A4FDA3D EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0x7AAA3470 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x806B834D EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0x819FAF7B EQ PUSH2 0x909 JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x929 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x976 JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xA304DCF4 EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xA4CA74DB EQ PUSH2 0xA0B JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0xA2B JUMPI DUP1 PUSH4 0xAAFF5F16 EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0xB273F207 EQ PUSH2 0xA6B JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0xA8B JUMPI DUP1 PUSH4 0xB3CB890F EQ PUSH2 0xABF JUMPI DUP1 PUSH4 0xB7A745C6 EQ PUSH2 0xADF JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0xB0F JUMPI DUP1 PUSH4 0xBD99D7E1 EQ PUSH2 0xB2F JUMPI DUP1 PUSH4 0xC392F766 EQ PUSH2 0xB5F JUMPI DUP1 PUSH4 0xC779C1C3 EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0xBB2 JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0xBD2 JUMPI DUP1 PUSH4 0xD667A5DA EQ PUSH2 0xBE5 JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0xC08 JUMPI DUP1 PUSH4 0xE2F28824 EQ PUSH2 0xC28 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xC48 JUMPI DUP1 PUSH4 0xE52249E3 EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0xC7D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC9D JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0xCBD JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0xCDD JUMPI DUP1 PUSH4 0xFB895733 EQ PUSH2 0xD0E JUMPI DUP1 PUSH4 0xFD9BE522 EQ PUSH2 0xD30 JUMPI DUP1 PUSH4 0xFF464D3F EQ PUSH2 0xD50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x4598 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x46E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x4701 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x11F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x4772 JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x48CB JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH32 0x52941335797217779AB62CF10A3AE2B6D453B5F3A1285E7A816EB9F63A58D669 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x4983 JUMP JUMPDEST PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH5 0xFFFFFFFFFF AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BC6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x350 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x5C2 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x5F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x1B50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x555 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x32E PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x49B1 JUMP JUMPDEST PUSH2 0x1BD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x65D CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x49DD JUMP JUMPDEST PUSH2 0x209D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x217E JUMP JUMPDEST PUSH2 0x32E PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x49FB JUMP JUMPDEST PUSH2 0x2212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E5 PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x233E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x715 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A5 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x7F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4598 JUMP JUMPDEST PUSH2 0x23F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x817 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x24D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AEB JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x2610 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x86C CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x2624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x263D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x8A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x8CE CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x904 CALLDATASIZE PUSH1 0x4 PUSH2 0x4983 JUMP JUMPDEST PUSH2 0x26BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x350 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x944 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B09 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x26EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x991 CALLDATASIZE PUSH1 0x4 PUSH2 0x4772 JUMP JUMPDEST PUSH2 0x26FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x350 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x9D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x2728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA06 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B37 JUMP JUMPDEST PUSH2 0x2837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA26 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B65 JUMP JUMPDEST PUSH2 0x286A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA46 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x28D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA66 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BAB JUMP JUMPDEST PUSH2 0x2955 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0xA86 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C2D JUMP JUMPDEST PUSH2 0x29E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xADA CALLDATASIZE PUSH1 0x4 PUSH2 0x49FB JUMP JUMPDEST PUSH2 0x2A6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0xAFA CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xB2A CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x2AC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xB4A CALLDATASIZE PUSH1 0x4 PUSH2 0x49FB JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x350 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xBA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xBCD CALLDATASIZE PUSH1 0x4 PUSH2 0x4C69 JUMP JUMPDEST PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x32E PUSH2 0xBE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4598 JUMP JUMPDEST PUSH2 0x2B7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBFA PUSH2 0x2D91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP3 SWAP2 SWAP1 PUSH2 0x4D3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xC23 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D63 JUMP JUMPDEST PUSH2 0x2FBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0xC43 CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x3070 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x31A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xC78 CALLDATASIZE PUSH1 0x4 PUSH2 0x49B1 JUMP JUMPDEST PUSH2 0x31B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xC98 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x31F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xCB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x324F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DA4 JUMP JUMPDEST PUSH2 0x32B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCFD PUSH2 0xCF8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x3358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xD4B CALLDATASIZE PUSH1 0x4 PUSH2 0x49B1 JUMP JUMPDEST PUSH2 0x35D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0xD6B CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xE1B SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE47 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0xEAF JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xED7 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xECD SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFA8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3760 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH2 0xFE2 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1000 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x4F14 JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1036 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x10C4 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1112 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x113D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1120 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x114D PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x757B753 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xEAF6EA6 SWAP1 PUSH2 0x11B0 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x502A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11FF PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5070 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5091 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x12C4 SWAP1 DUP5 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x12F7 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP PUSH32 0xBB992170D0382FEEB939A59875390A636BD942134E6E58925CAF64C99432820A CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x136E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5070 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x13F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x82E4E4C2F240DAD2E6DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1455 JUMPI PUSH2 0x1455 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x513B JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x14AE JUMPI PUSH2 0x14AE PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP4 MLOAD PUSH1 0x0 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x156F JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1536 JUMPI PUSH2 0x1536 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1569 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x165C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D1 SWAP3 SWAP2 SWAP1 PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x15DA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x1667 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F5 JUMP JUMPDEST POP PUSH32 0xD4DE851AE1BDF4EA540C1D68657B95BDC9710E532C03BF807C1A7107D238706B DUP3 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0x16A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH2 0x16F1 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x4F14 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1766 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1783 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A7 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x17DB SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP9 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1850 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1891 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x631A6FD5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC634DFAA SWAP1 PUSH2 0x18C5 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xED1279F PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1DA24F3E SWAP1 PUSH2 0x193A SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE78C9B3B DUP12 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x1E739AE3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79CE6B8C SWAP1 PUSH2 0x1A33 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x51D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1AA5 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD1 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B1E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B1E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B01 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B35 SWAP3 SWAP2 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B58 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x1BA8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x502A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1C1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x436C6F73696E67 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1C9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563686172676520696E20746869732063757272656E6379206973206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x81CDD5C1C1BDC9D1959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1CCA SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST LT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x513B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x1D59 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x51F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9A SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST LT ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x520E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1DE7 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E28 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1E5B SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5101 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9E SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP PUSH2 0x1EA9 DUP5 DUP3 PUSH2 0x50D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1ED5 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F16 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST EQ PUSH2 0x1F33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x513B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E CALLER PUSH2 0x233E JUMP JUMPDEST POP SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0x1F61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5238 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x2003 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 SWAP5 POP PUSH1 0x0 SWAP1 PUSH2 0x1FA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAE DUP8 DUP8 PUSH2 0x3838 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FC3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH2 0x1FCD DUP3 DUP9 PUSH2 0x526C JUMP JUMPDEST PUSH2 0x1FD7 SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST PUSH1 0x1 SUB PUSH2 0x2001 JUMPI PUSH1 0xA SLOAD PUSH2 0x1FF3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH2 0x1FFE SWAP1 PUSH1 0x1 PUSH2 0x526C JUMP JUMPDEST SWAP4 POP JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2018 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP5 POP PUSH2 0x205A SWAP2 PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x2045 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x1 SWAP1 DUP12 SWAP1 PUSH1 0x20 ADD PUSH2 0x527F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x39B3 JUMP JUMPDEST PUSH32 0x448D2B6792A74A21BFA5114F7CD01A036F36236F4E3687339032E97103E653CE DUP7 DUP7 CALLER PUSH1 0x40 MLOAD PUSH2 0x208D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20A5 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B2B47B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 DUP3 SWAP1 PUSH4 0x96568F6 SWAP1 PUSH2 0x20FC SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x213D SWAP2 SWAP1 PUSH2 0x52FB JUMP JUMPDEST DUP6 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5318 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH1 0x0 PUSH1 0xA PUSH2 0x21A9 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xFF SWAP7 DUP8 AND SWAP1 DUP9 ADD MSTORE SWAP4 DUP6 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x80 DUP7 ADD MSTORE DUP4 AND PUSH1 0xA0 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH3 0xF4240 PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5070 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2244 CALLER PUSH2 0x233E JUMP JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x2252 DUP3 DUP5 PUSH2 0x526C JUMP JUMPDEST GT ISZERO PUSH2 0x2292 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xC2DADEEADCE840DCDE40DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST CALLVALUE DUP2 GT ISZERO PUSH2 0x22B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5238 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xA SLOAD PUSH2 0x2309 SWAP3 PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 DUP7 SWAP1 DUP3 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x22DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22F4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x527F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF007803DA765BF8BFB79898E5892989976C0F6B9F69DD946CB8B949C781587A SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x40A7BB10 SWAP1 PUSH2 0xFFFF AND ADDRESS PUSH2 0x2387 DUP10 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23AB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x534F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23EB SWAP2 SWAP1 PUSH2 0x540D JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x2455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x24CB DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3A4C SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH2 0x2508 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x4F14 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x257D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x259A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25CD PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x42 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP2 PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x548C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2618 PUSH2 0x37D9 JUMP JUMPDEST PUSH2 0x2622 PUSH1 0x0 PUSH2 0x3F78 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x10C4 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST CALLER DUP1 PUSH2 0x2647 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x26AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x26B8 DUP2 PUSH2 0x3F78 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x26CA DUP6 DUP6 PUSH2 0x16B0 JUMP JUMPDEST POP POP POP POP POP SWAP3 POP POP SWAP2 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x26E2 SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x274B SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2777 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2799 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x281C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x25BE PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0x282F SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x3F91 JUMP JUMPDEST PUSH2 0x283F PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2872 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x260B JUMPI DUP2 PUSH1 0x12 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2895 JUMPI PUSH2 0x2895 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x28D1 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2875 JUMP JUMPDEST PUSH2 0x28E1 PUSH2 0x37D9 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5545 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x2921 SWAP1 DUP3 PUSH2 0x548C JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x502A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x557FAF8B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xAAFF5F16 SWAP1 PUSH2 0x29A9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5566 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29EE DUP5 PUSH2 0x2A6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x29FE DUP7 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH28 0xCA2BA3432B932BAB69029B4B3B732B21026B2B9B9B0B3B29D051999 PUSH1 0x21 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC9 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0x2B14 SWAP1 DUP4 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2B27 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0x29A9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x55A3 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x2B9E SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x2C1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C2F SWAP3 SWAP2 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x2CB1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x2D49 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3A4C SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2D80 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x0 PUSH1 0x13 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2DBB JUMPI PUSH2 0x2DBB PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x2DF4 JUMPI DUP2 PUSH2 0x2DF0 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x2DFE DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D98 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E21 JUMPI PUSH2 0x2E21 PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E4A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E67 JUMPI PUSH2 0x2E67 PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E90 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2FB6 JUMPI PUSH1 0x0 PUSH1 0x13 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2EB9 JUMPI PUSH2 0x2EB9 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x2FA4 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2EF7 JUMPI PUSH2 0x2EF7 PUSH2 0x5125 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F27 JUMPI PUSH2 0x2F27 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x13 PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F5E JUMPI PUSH2 0x2F5E PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2F97 JUMPI PUSH2 0x2F97 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH2 0x2FAE DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E96 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x2FC6 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x300E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C7A4170703A20696E76616C6964206D696E476173 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF5ECBDBC PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x96568F6 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30EE SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x310B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x312F SWAP2 SWAP1 PUSH2 0x52FB JUMP JUMPDEST DUP6 ADDRESS PUSH1 0x6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3152 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3197 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5689 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x31B9 PUSH2 0x37D9 JUMP JUMPDEST DUP1 PUSH1 0x1 SUB PUSH2 0x31DD JUMPI PUSH2 0x31D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x4110 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x31D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BC6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x4110 JUMP JUMPDEST PUSH2 0x31FD PUSH2 0x37D9 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x321B DUP3 DUP5 DUP4 PUSH2 0x56BD JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x502A JUMP JUMPDEST PUSH2 0x3257 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x327D PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH2 0x330A SWAP1 DUP9 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3327 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x334F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5689 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP4 SWAP1 DUP2 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x33E9 JUMPI DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x339F JUMPI PUSH2 0x339F PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x33D7 JUMPI DUP2 PUSH2 0x33D3 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x33E1 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x337C JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3404 JUMPI PUSH2 0x3404 PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x342D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x344A JUMPI PUSH2 0x344A PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3473 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x35A7 JUMPI DUP6 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x349D JUMPI PUSH2 0x349D PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3595 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x34DA JUMPI PUSH2 0x34DA PUSH2 0x5125 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x350A JUMPI PUSH2 0x350A PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP6 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3543 JUMPI PUSH2 0x3543 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x357C JUMPI PUSH2 0x357C PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x3591 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x359F DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x347A JUMP JUMPDEST POP POP DUP4 SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP12 SWAP5 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x35DB PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x3613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5091 JUMP JUMPDEST PUSH2 0x362B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BC6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x26FD JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14195C9B5A5CDCDA5BDB8811195B9A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3698 SWAP1 DUP5 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x36CB SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37C3 GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3788 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5776 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x411A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24CB JUMPI PUSH2 0x24CB DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x41A4 JUMP JUMPDEST CALLER PUSH2 0x37E2 PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x386C SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x388B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38AF SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x38E5 SWAP3 ADDRESS SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x51F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3926 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST LT ISZERO PUSH2 0x3944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x520E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x399F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x260B DUP4 DUP4 CALLER PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD PUSH2 0x39C8 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39F4 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A16 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 PUSH2 0x4241 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3A69 SWAP2 SWAP1 PUSH2 0x5873 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3A94 SWAP2 SWAP1 PUSH2 0x59CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AB8 SWAP2 SWAP1 PUSH2 0x5A0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH2 0x3AE2 SWAP7 SWAP6 SWAP5 SWAP4 PUSH1 0x20 ADD PUSH2 0x5A36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP4 ISZERO PUSH2 0x3BB6 JUMPI PUSH2 0x3B1D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x991 DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD PUSH2 0x29E2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3B69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x546865207369676E6572206973206E6F742061206E6F6465 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0xC0 DUP8 ADD MLOAD DUP2 EQ PUSH2 0x3BB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E636F72726563742064617461 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST POP JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP10 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE DUP9 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3CF4 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3C17 JUMPI PUSH2 0x3C17 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x13 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3C35 JUMPI PUSH2 0x3C35 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3C77 JUMPI PUSH2 0x3C77 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3CE2 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CB7 JUMPI PUSH2 0x3CB7 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3CE2 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3CD7 JUMPI PUSH2 0x3CD7 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP9 POP JUMPDEST DUP1 PUSH2 0x3CEC DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3BFC JUMP JUMPDEST POP PUSH1 0x0 DUP1 JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x3EBE JUMPI PUSH2 0x3D2C DUP10 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D1F JUMPI PUSH2 0x3D1F PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x43DB JUMP JUMPDEST DUP9 PUSH1 0x60 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3D42 JUMPI PUSH2 0x3D42 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP12 PUSH1 0x40 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3D66 JUMPI PUSH2 0x3D66 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D9D SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DBE JUMPI PUSH2 0x3DBE PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3EAC JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x0 DUP10 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E06 JUMPI PUSH2 0x3E06 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH2 0x3E19 SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST GT ISZERO PUSH2 0x3EAC JUMPI DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP11 SWAP3 SWAP1 PUSH2 0x3E48 SWAP1 DUP5 SWAP1 PUSH2 0x526C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3EAA DUP10 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E68 JUMPI PUSH2 0x3E68 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP12 PUSH1 0x60 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3E87 JUMPI PUSH2 0x3E87 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH2 0x3E9A SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST PUSH2 0x3EA4 SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST ADDRESS PUSH2 0x4465 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x3EB6 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3CF9 JUMP JUMPDEST POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x3ECD JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST ISZERO PUSH2 0x3F1C JUMPI DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP3 SWAP1 PUSH2 0x3EFB SWAP1 DUP5 SWAP1 PUSH2 0x526C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x3F1A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3EA4 DUP12 DUP11 PUSH2 0x526C JUMP JUMPDEST POP JUMPDEST PUSH32 0xC53F0AAE5AD30D5251E6054A1874116C45EAF54274CDB1940EE106D67C10B3A5 DUP9 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3F61 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x26B8 DUP2 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x3F9F DUP2 PUSH1 0x1F PUSH2 0x526C JUMP JUMPDEST LT ISZERO PUSH2 0x3FDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x3FE8 DUP3 DUP5 PUSH2 0x526C JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x402C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x404B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4095 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x4084 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x406C JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x40F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x31D9 DUP3 DUP3 PUSH2 0x44E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x413F JUMPI PUSH2 0x413F PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4169 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x418B JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x41D5 SWAP2 SWAP1 PUSH2 0x5AF0 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x4232 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x5B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x425F SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428B SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x4349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x43A0 SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP1 SUB PUSH2 0x26B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0x449A SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x52D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44DD SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x44EF DUP3 DUP3 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x31D9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x455D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x45B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x45BC DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x45D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45E4 DUP11 DUP4 DUP12 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x45F8 PUSH1 0x40 DUP11 ADD PUSH2 0x457C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x460E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461B DUP10 DUP3 DUP11 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BE DUP2 PUSH2 0x462D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BE DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x46AB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4693 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x46CC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4690 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x46B4 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BE DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x473E DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4765 DUP7 DUP3 DUP8 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x462D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x47DB JUMPI PUSH2 0x47DB PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x47DB JUMPI PUSH2 0x47DB PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x482C JUMPI PUSH2 0x482C PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x484D JUMPI PUSH2 0x484D PUSH2 0x47A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x487D PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST PUSH2 0x4804 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x489C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x48C0 JUMPI DUP1 CALLDATALOAD PUSH2 0x48B3 DUP2 PUSH2 0x462D JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x48A0 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x48F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4919 PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x4938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4956 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x493D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x496C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4979 DUP6 DUP3 DUP7 ADD PUSH2 0x4857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49A1 DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x462D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49CF DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49A1 DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4A2D JUMPI PUSH2 0x4A2D PUSH2 0x47A2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4A5A PUSH2 0x4878 DUP3 PUSH2 0x4A14 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4AAC DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4AC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AD3 DUP7 DUP3 DUP8 ADD PUSH2 0x4A3B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4AE2 PUSH1 0x40 DUP6 ADD PUSH2 0x457C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49CF DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B27 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B55 DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B9A DUP6 DUP3 DUP7 ADD PUSH2 0x4857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4BCE DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BF6 DUP10 DUP4 DUP11 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1C DUP9 DUP3 DUP10 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4979 DUP6 DUP3 DUP7 ADD PUSH2 0x4A3B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4C8C DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4C9C DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C1C DUP9 DUP3 DUP10 ADD PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D03 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4CDE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D03 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4D22 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4D51 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x334F DUP2 DUP6 PUSH2 0x4D0E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4D83 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4D93 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x4DC5 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x4DD5 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x4DE5 DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4E1C PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4E2E DUP2 DUP7 PUSH2 0x4D0E JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4E55 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4E75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4EBF JUMPI PUSH2 0x4EBF PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4593 DUP2 PUSH2 0x462D JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F2F PUSH2 0x47B8 JUMP JUMPDEST PUSH2 0x4F39 DUP5 DUP5 PUSH2 0x4E8B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4F47 PUSH1 0x20 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4F58 PUSH1 0x40 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4F69 PUSH1 0x60 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x4F7A PUSH1 0x80 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x4F8B PUSH1 0xA0 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4F9C PUSH1 0xC0 DUP5 ADD PUSH2 0x4EE3 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4FAD PUSH1 0xE0 DUP5 ADD PUSH2 0x4EF8 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x4FC0 DUP2 DUP6 ADD PUSH2 0x4EF8 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x4FD2 DUP5 DUP3 ADD PUSH2 0x4EF8 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x4FE4 DUP5 DUP3 ADD PUSH2 0x4EF8 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x4FF6 DUP5 DUP3 ADD PUSH2 0x4F03 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x334F PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x5001 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4593 DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x25BE DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x636C6F73696E67 PUSH1 0xC8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F742073756666696369656E742066756E6473 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26E8 JUMPI PUSH2 0x26E8 PUSH2 0x50BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10985B185B98D9481A5B9CDD59999A58DA595B9D PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x517B JUMPI PUSH2 0x517B PUSH2 0x50BF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5195 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x51A7 DUP2 DUP7 PUSH2 0x4D0E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25BE DUP3 PUSH2 0x4EE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x27379030BABA3437B934BD30BA34B7B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH26 0x6E6F7420656E6F756768206E617469766520666F722066656573 PUSH1 0x30 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E8 JUMPI PUSH2 0x26E8 PUSH2 0x50BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP4 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x5 DUP5 LT PUSH2 0x52C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x530D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x25BE DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5345 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x46B4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x537B PUSH1 0xA0 DUP5 ADD DUP8 PUSH2 0x46B4 JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 DUP6 SLOAD PUSH2 0x5398 DUP2 PUSH2 0x4E41 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x53B3 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x53CD JUMPI PUSH2 0x53FB JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP7 DUP9 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD DUP8 ADD SWAP5 POP PUSH2 0x53FB JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x53F3 JUMPI DUP2 SLOAD DUP9 DUP3 ADD DUP11 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x53D8 JUMP JUMPDEST DUP8 ADD DUP9 ADD SWAP6 POP POP JUMPDEST POP SWAP3 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x5458 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24CB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5464 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x54A5 JUMPI PUSH2 0x54A5 PUSH2 0x47A2 JUMP JUMPDEST PUSH2 0x54B9 DUP2 PUSH2 0x54B3 DUP5 SLOAD PUSH2 0x4E41 JUMP JUMPDEST DUP5 PUSH2 0x5431 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x54E8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x54D6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x54E0 DUP6 DUP3 PUSH2 0x5477 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5517 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x54F8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5535 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5584 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x5001 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5597 DUP2 DUP6 DUP8 PUSH2 0x5001 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x55D1 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x5001 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x55FA PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x5001 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5663 PUSH2 0x4878 DUP3 PUSH2 0x4A14 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x5678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44DD DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4690 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x569B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x56B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44DD DUP5 DUP3 DUP6 ADD PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x56D4 JUMPI PUSH2 0x56D4 PUSH2 0x47A2 JUMP JUMPDEST PUSH2 0x56E8 DUP4 PUSH2 0x56E2 DUP4 SLOAD PUSH2 0x4E41 JUMP JUMPDEST DUP4 PUSH2 0x5431 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5716 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x5704 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x570E DUP7 DUP3 PUSH2 0x5477 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5747 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5727 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x5764 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5793 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x55D1 DUP2 DUP6 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x57D5 PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x57F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x48C0 JUMPI DUP1 MLOAD PUSH2 0x580B DUP2 PUSH2 0x462D JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x57F8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x5839 PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x5858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x48C0 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x585C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x588B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x58A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP8 ADD SWAP1 PUSH2 0x100 DUP3 DUP11 SUB SLT ISZERO PUSH2 0x58B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58BF PUSH2 0x47E1 JUMP JUMPDEST PUSH2 0x58C8 DUP4 PUSH2 0x4EF8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x58E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58F2 DUP12 DUP3 DUP7 ADD PUSH2 0x57B4 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x590A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5916 DUP12 DUP3 DUP7 ADD PUSH2 0x5818 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x5932 PUSH1 0xA0 DUP5 ADD PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x5953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x595F DUP12 DUP3 DUP7 ADD PUSH2 0x5644 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP SWAP6 POP PUSH2 0x597B PUSH1 0x40 DUP10 ADD PUSH2 0x5048 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x599D DUP10 DUP4 DUP11 ADD PUSH2 0x57B4 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x59B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C0 DUP9 DUP3 DUP10 ADD PUSH2 0x5818 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A00 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x59DB JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A00 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5A1A JUMP JUMPDEST PUSH1 0x60 DUP8 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x14 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x5A64 DUP2 PUSH1 0x34 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4690 JUMP JUMPDEST DUP6 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5A7B DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4690 JUMP JUMPDEST PUSH1 0x34 SWAP2 ADD SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE POP POP PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5AC9 SWAP1 DUP4 ADD DUP7 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5ADB DUP2 DUP7 PUSH2 0x4D0E JUMP JUMPDEST SWAP2 POP POP PUSH1 0xFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5B02 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4690 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5B29 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5B4A DUP2 DUP7 PUSH2 0x46B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5597 DUP2 DUP6 PUSH2 0x46B4 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5B7B PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x46B4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5B8D DUP2 DUP9 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x5BB8 DUP2 DUP6 PUSH2 0x46B4 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP INVALID RETURN EXTCODEHASH 0xE7 DUP15 0xB7 0xC8 BLOCKHASH 0xE8 0xBF PUSH9 0x670029904B6F0DA8E7 SWAP4 CHAINID SWAP5 SHR 0x27 DUP11 0x4E PUSH23 0x76D473DF1557C872046F094B8A493EC5EB6EA374EAFBC3 0xC0 MSIZE MLOAD 0xE4 0xD 0xE3 0xC4 ADDRESS 0x2A COINBASE RETURN CALL 0x27 0xBA LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP8 SWAP13 NUMBER PUSH11 0x9DA870317FC799E00FDD33 SWAP5 0xD5 EXTCODESIZE SDIV ORIGIN 0xD2 0xB8 MOD RETURN PUSH3 0x206F43 CREATE2 0xB9 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"444:14610:11:-:0;;;704:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;809:11;;936:32:0;719:10:4;936:18:0;:32::i;:::-;-1:-1:-1;;;;;985:42:14;;;;;831:4:11::1;:19:::0;;-1:-1:-1;;;;;;831:19:11;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;859:23:11;;-1:-1:-1;;859:23:11::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;891:6:::1;:13:::0;;-1:-1:-1;;891:13:11::1;::::0;;::::1;::::0;;;-1:-1:-1;913:4:11::1;:11:::0;;;;::::1;::::0;::::1;;::::0;;;-1:-1:-1;444:14610:11;;1501:153:1;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:1;;;1613:34;1638:8;1613:24;;;;;;;:34;;:::i;:::-;1501:153;:::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:532::-;292:6;300;308;316;369:3;357:9;348:7;344:23;340:33;337:53;;;386:1;383;376:12;337:53;409:40;439:9;409:40;:::i;:::-;399:50;;468:49;513:2;502:9;498:18;468:49;:::i;:::-;458:59;;560:2;549:9;545:18;539:25;604:6;597:5;593:18;586:5;583:29;573:57;;626:1;623;616:12;573:57;649:5;-1:-1:-1;673:49:21;718:2;703:18;;673:49;:::i;:::-;663:59;;196:532;;;;;;;:::o;:::-;444:14610:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_2957":{"entryPoint":null,"id":2957,"parameterSlots":0,"returnSlots":0},"@FEE_ROLE_2879":{"entryPoint":null,"id":2879,"parameterSlots":0,"returnSlots":0},"@NODE_ROLE_2874":{"entryPoint":null,"id":2874,"parameterSlots":0,"returnSlots":0},"@OWENER_ROLE_2869":{"entryPoint":null,"id":2869,"parameterSlots":0,"returnSlots":0},"@_blockingLzReceive_3669":{"entryPoint":14176,"id":3669,"parameterSlots":4,"returnSlots":0},"@_checkOwner_54":{"entryPoint":14297,"id":54,"parameterSlots":0,"returnSlots":0},"@_depositToAAVE_2194":{"entryPoint":14392,"id":2194,"parameterSlots":2,"returnSlots":0},"@_grantRole_2252":{"entryPoint":17637,"id":2252,"parameterSlots":2,"returnSlots":0},"@_lzSend_3229":{"entryPoint":16961,"id":3229,"parameterSlots":6,"returnSlots":0},"@_msgSender_310":{"entryPoint":null,"id":310,"parameterSlots":0,"returnSlots":1},"@_nonblockingLzReceive_2599":{"entryPoint":14924,"id":2599,"parameterSlots":4,"returnSlots":0},"@_roles_2954":{"entryPoint":null,"id":2954,"parameterSlots":0,"returnSlots":0},"@_sentToL1_2149":{"entryPoint":14771,"id":2149,"parameterSlots":3,"returnSlots":0},"@_setupRole_2228":{"entryPoint":16656,"id":2228,"parameterSlots":2,"returnSlots":0},"@_storeFailedMessage_3703":{"entryPoint":16804,"id":3703,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":14094,"id":111,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_172":{"entryPoint":16248,"id":172,"parameterSlots":1,"returnSlots":0},"@_withdrawFromAAVE_2215":{"entryPoint":17509,"id":2215,"parameterSlots":3,"returnSlots":1},"@aave_2885":{"entryPoint":null,"id":2885,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_194":{"entryPoint":9789,"id":194,"parameterSlots":0,"returnSlots":0},"@accounts_2913":{"entryPoint":null,"id":2913,"parameterSlots":0,"returnSlots":0},"@adapterParams_2887":{"entryPoint":4279,"id":2887,"parameterSlots":0,"returnSlots":0},"@deCoinList_1109":{"entryPoint":null,"id":1109,"parameterSlots":0,"returnSlots":0},"@depositETH_1399":{"entryPoint":8722,"id":1399,"parameterSlots":1,"returnSlots":0},"@deposit_1333":{"entryPoint":7126,"id":1333,"parameterSlots":2,"returnSlots":0},"@dstChainId_2881":{"entryPoint":null,"id":2881,"parameterSlots":0,"returnSlots":0},"@estimateFee_2111":{"entryPoint":9022,"id":2111,"parameterSlots":1,"returnSlots":2},"@excessivelySafeCall_4376":{"entryPoint":16666,"id":4376,"parameterSlots":4,"returnSlots":2},"@failedMessages_3598":{"entryPoint":null,"id":3598,"parameterSlots":0,"returnSlots":0},"@forceResumeReceive_3418":{"entryPoint":6992,"id":3418,"parameterSlots":3,"returnSlots":0},"@getATokenWithToken_2027":{"entryPoint":4017,"id":2027,"parameterSlots":1,"returnSlots":1},"@getAllFee_2822":{"entryPoint":11665,"id":2822,"parameterSlots":0,"returnSlots":2},"@getBalanceFromAAVE_1900":{"entryPoint":9915,"id":1900,"parameterSlots":2,"returnSlots":1},"@getBalance_1855":{"entryPoint":13144,"id":1855,"parameterSlots":1,"returnSlots":5},"@getConfig_3313":{"entryPoint":12981,"id":3313,"parameterSlots":4,"returnSlots":1},"@getInterest_1645":{"entryPoint":null,"id":1645,"parameterSlots":1,"returnSlots":1},"@getNativeFee_1633":{"entryPoint":null,"id":1633,"parameterSlots":1,"returnSlots":1},"@getOracle_2055":{"entryPoint":12400,"id":2055,"parameterSlots":1,"returnSlots":1},"@getSize_2079":{"entryPoint":8574,"id":2079,"parameterSlots":1,"returnSlots":1},"@getTotalValue_2855":{"entryPoint":9427,"id":2855,"parameterSlots":1,"returnSlots":1},"@getTrustedRemoteAddress_3498":{"entryPoint":10024,"id":3498,"parameterSlots":1,"returnSlots":1},"@getUserReserveData_2011":{"entryPoint":5808,"id":2011,"parameterSlots":2,"returnSlots":8},"@hasRole_2301":{"entryPoint":9981,"id":2301,"parameterSlots":2,"returnSlots":1},"@hasStoredPayload_3346":{"entryPoint":4448,"id":3346,"parameterSlots":3,"returnSlots":0},"@hashMessage_2651":{"entryPoint":10863,"id":2651,"parameterSlots":1,"returnSlots":1},"@interestAmount_1105":{"entryPoint":null,"id":1105,"parameterSlots":0,"returnSlots":0},"@interest_2883":{"entryPoint":null,"id":2883,"parameterSlots":0,"returnSlots":0},"@isCoinList_2676":{"entryPoint":17371,"id":2676,"parameterSlots":1,"returnSlots":0},"@isOpen_2923":{"entryPoint":null,"id":2923,"parameterSlots":0,"returnSlots":0},"@isSupDe_2917":{"entryPoint":null,"id":2917,"parameterSlots":0,"returnSlots":0},"@isTrueForCoin_2964":{"entryPoint":null,"id":2964,"parameterSlots":0,"returnSlots":0},"@isTrustedRemote_3571":{"entryPoint":6788,"id":3571,"parameterSlots":3,"returnSlots":1},"@lzEndpoint_3068":{"entryPoint":null,"id":3068,"parameterSlots":0,"returnSlots":0},"@lzReceive_3175":{"entryPoint":3456,"id":3175,"parameterSlots":6,"returnSlots":0},"@minDstGasLookup_3078":{"entryPoint":null,"id":3078,"parameterSlots":0,"returnSlots":0},"@nonblockingLzReceive_3733":{"entryPoint":9207,"id":3733,"parameterSlots":6,"returnSlots":0},"@owner_40":{"entryPoint":9966,"id":40,"parameterSlots":0,"returnSlots":1},"@pendingOwner_135":{"entryPoint":12706,"id":135,"parameterSlots":0,"returnSlots":1},"@precrime_3080":{"entryPoint":null,"id":3080,"parameterSlots":0,"returnSlots":0},"@recover_1614":{"entryPoint":16542,"id":1614,"parameterSlots":1,"returnSlots":3},"@renounceOwnership_68":{"entryPoint":9744,"id":68,"parameterSlots":0,"returnSlots":0},"@retryMessage_3812":{"entryPoint":11131,"id":3812,"parameterSlots":6,"returnSlots":0},"@retryPayload_3331":{"entryPoint":10581,"id":3331,"parameterSlots":5,"returnSlots":0},"@setAdapterParams_1873":{"entryPoint":9669,"id":1873,"parameterSlots":2,"returnSlots":0},"@setConfig_3370":{"entryPoint":11039,"id":3370,"parameterSlots":5,"returnSlots":0},"@setDeCoinList_2284":{"entryPoint":10346,"id":2284,"parameterSlots":2,"returnSlots":0},"@setIsOpen_2123":{"entryPoint":4421,"id":2123,"parameterSlots":1,"returnSlots":0},"@setMinDstGas_3547":{"entryPoint":12222,"id":3547,"parameterSlots":3,"returnSlots":0},"@setOracle_2631":{"entryPoint":8349,"id":2631,"parameterSlots":2,"returnSlots":0},"@setPrecrime_3514":{"entryPoint":10945,"id":3514,"parameterSlots":1,"returnSlots":0},"@setReceiveVersion_3400":{"entryPoint":4599,"id":3400,"parameterSlots":1,"returnSlots":0},"@setSendVersion_3385":{"entryPoint":4142,"id":3385,"parameterSlots":1,"returnSlots":0},"@setSupDe_1415":{"entryPoint":10295,"id":1415,"parameterSlots":2,"returnSlots":0},"@setTrustedRemoteAddress_3467":{"entryPoint":10457,"id":3467,"parameterSlots":3,"returnSlots":0},"@setTrustedRemote_3439":{"entryPoint":12789,"id":3439,"parameterSlots":3,"returnSlots":0},"@setWhilLlist_1671":{"entryPoint":12721,"id":1671,"parameterSlots":2,"returnSlots":0},"@slice_4067":{"entryPoint":16273,"id":4067,"parameterSlots":3,"returnSlots":1},"@totalFee_1113":{"entryPoint":null,"id":1113,"parameterSlots":0,"returnSlots":0},"@transferOwnership_155":{"entryPoint":12879,"id":155,"parameterSlots":1,"returnSlots":0},"@trustedRemoteLookup_3072":{"entryPoint":9764,"id":3072,"parameterSlots":0,"returnSlots":0},"@usdt_2966":{"entryPoint":null,"id":2966,"parameterSlots":0,"returnSlots":0},"@verifyEcrecover_1577":{"entryPoint":10722,"id":1577,"parameterSlots":2,"returnSlots":1},"@whlieList_1117":{"entryPoint":null,"id":1117,"parameterSlots":0,"returnSlots":0},"@withdrawFee_2721":{"entryPoint":13779,"id":2721,"parameterSlots":2,"returnSlots":0},"@withdrawInterest_1719":{"entryPoint":4687,"id":1719,"parameterSlots":2,"returnSlots":0},"@withdraw_1544":{"entryPoint":4986,"id":1544,"parameterSlots":2,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":20216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":18519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":22452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":22552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":20552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":19003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":17716,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_fromMemory":{"entryPoint":22084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_ReserveConfigurationMap_fromMemory":{"entryPoint":20107,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":17986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18819,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bool":{"entryPoint":19255,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":18865,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bool":{"entryPoint":19301,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr":{"entryPoint":18635,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":18177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":20563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":19501,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":22153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_InData_$2942_memory_ptrt_uint256t_boolt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":22643,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_ReserveData_$348_memory_ptr_fromMemory":{"entryPoint":20244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16":{"entryPoint":18035,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16_fromMemory":{"entryPoint":21243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_address":{"entryPoint":18909,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":18206,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":19371,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr":{"entryPoint":17816,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64":{"entryPoint":19084,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16":{"entryPoint":19209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":19876,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256":{"entryPoint":19811,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr":{"entryPoint":19561,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_uint256":{"entryPoint":19179,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":18939,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":20928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":18290,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":21517,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint40_fromMemory":{"entryPoint":20953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint128_fromMemory":{"entryPoint":20172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint40_fromMemory":{"entryPoint":20195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":17788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":20227,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":19658,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":19726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":18100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":20481,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr_t_uint256_t_uint8__to_t_address_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr_t_uint256_t_uint8__nonPadded_inplace_fromStack_reversed":{"entryPoint":23094,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20091,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":21829,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":23280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":18015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":20980,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":20737,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_enum$_OperateType_$2864_t_uint256__to_t_address_t_address_t_uint256_t_bool_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":21119,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint8__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint8__fromStack_reversed":{"entryPoint":23205,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_address_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":19957,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__to_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1_t_rational_0_by_1_t_rational_10000_by_1_t_rational_0_by_1_t_rational_10_by_1_t_uint256_t_rational_1000000_by_1__to_t_address_t_uint8_t_uint8_t_uint16_t_uint8_t_uint8_t_uint256_t_uint24__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":20712,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":21208,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":19774,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__fromStack_reversed":{"entryPoint":20866,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$3958__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_170b524e2f6dce4d59ce169fe07ac17c10010b9aa611a4f22b7dd0fbb2a8548e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3aaf93234d216cebcce57886fad754bf0073b69b286cb61509139d78484b29de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b9c1d6526fc79efecb5cefdba06d4442123c71d0ed2cef80c90cd0c2c119053__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7796ca3cfdc653c566dc65a58dc36b8e618ca503d2ee6999fe37fad5ffd51b7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7d82add7da9835f45caeca9f9666cefc6420bd09cf07042e2ce1137ba818d93c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20625,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae6b4065ed04618d5c5f96ed834dfa4d8fe0c4420df59d41e47522953dc8000b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21048,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b8dfc848030fefb271d113eec61f68c652b0dff1d9b95a4ce008309efe2f09f1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_storage__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21327,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20522,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21862,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed":{"entryPoint":21980,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":23390,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":22390,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":23308,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_address_t_rational_6_by_1__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed":{"entryPoint":22039,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21923,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21272,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint40__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint40__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"allocate_memory":{"entryPoint":18436,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_6904":{"entryPoint":18360,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_6906":{"entryPoint":18401,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":18484,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":18964,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":21100,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":20693,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":21553,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage":{"entryPoint":22205,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":21644,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":18064,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":20033,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":21623,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":20841,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":20671,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20773,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":18338,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":17965,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":18163,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint16":{"entryPoint":17700,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:57648:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:73:21","statements":[{"body":{"nodeType":"YulBlock","src":"109:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"118:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"121:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"111:6:21"},"nodeType":"YulFunctionCall","src":"111:12:21"},"nodeType":"YulExpressionStatement","src":"111:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"99:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:21"},"nodeType":"YulFunctionCall","src":"88:18:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:21"},"nodeType":"YulFunctionCall","src":"78:29:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:21"},"nodeType":"YulFunctionCall","src":"71:37:21"},"nodeType":"YulIf","src":"68:57:21"}]},"name":"validator_revert_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:21","type":""}],"src":"14:117:21"},{"body":{"nodeType":"YulBlock","src":"208:275:21","statements":[{"body":{"nodeType":"YulBlock","src":"257:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"266:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"269:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"259:6:21"},"nodeType":"YulFunctionCall","src":"259:12:21"},"nodeType":"YulExpressionStatement","src":"259:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"244:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"232:3:21"},"nodeType":"YulFunctionCall","src":"232:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"251:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"228:3:21"},"nodeType":"YulFunctionCall","src":"228:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"221:6:21"},"nodeType":"YulFunctionCall","src":"221:35:21"},"nodeType":"YulIf","src":"218:55:21"},{"nodeType":"YulAssignment","src":"282:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"305:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"292:12:21"},"nodeType":"YulFunctionCall","src":"292:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"282:6:21"}]},{"body":{"nodeType":"YulBlock","src":"355:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"364:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"367:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"357:6:21"},"nodeType":"YulFunctionCall","src":"357:12:21"},"nodeType":"YulExpressionStatement","src":"357:12:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"327:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"347:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"339:3:21"},"nodeType":"YulFunctionCall","src":"339:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"351:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"335:3:21"},"nodeType":"YulFunctionCall","src":"335:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"324:2:21"},"nodeType":"YulFunctionCall","src":"324:30:21"},"nodeType":"YulIf","src":"321:50:21"},{"nodeType":"YulAssignment","src":"380:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"396:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"404:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"392:3:21"},"nodeType":"YulFunctionCall","src":"392:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"380:8:21"}]},{"body":{"nodeType":"YulBlock","src":"461:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"470:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"473:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"463:6:21"},"nodeType":"YulFunctionCall","src":"463:12:21"},"nodeType":"YulExpressionStatement","src":"463:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"432:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"440:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:21"},"nodeType":"YulFunctionCall","src":"428:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"449:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"424:3:21"},"nodeType":"YulFunctionCall","src":"424:30:21"},{"name":"end","nodeType":"YulIdentifier","src":"456:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"421:2:21"},"nodeType":"YulFunctionCall","src":"421:39:21"},"nodeType":"YulIf","src":"418:59:21"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"171:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"179:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"187:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"197:6:21","type":""}],"src":"136:347:21"},{"body":{"nodeType":"YulBlock","src":"536:123:21","statements":[{"nodeType":"YulAssignment","src":"546:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"568:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"555:12:21"},"nodeType":"YulFunctionCall","src":"555:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"546:5:21"}]},{"body":{"nodeType":"YulBlock","src":"637:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"646:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"649:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"639:6:21"},"nodeType":"YulFunctionCall","src":"639:12:21"},"nodeType":"YulExpressionStatement","src":"639:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"597:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"608:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"623:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"627:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"619:3:21"},"nodeType":"YulFunctionCall","src":"619:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"631:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"615:3:21"},"nodeType":"YulFunctionCall","src":"615:18:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"604:3:21"},"nodeType":"YulFunctionCall","src":"604:30:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"594:2:21"},"nodeType":"YulFunctionCall","src":"594:41:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"587:6:21"},"nodeType":"YulFunctionCall","src":"587:49:21"},"nodeType":"YulIf","src":"584:69:21"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"515:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"526:5:21","type":""}],"src":"488:171:21"},{"body":{"nodeType":"YulBlock","src":"821:766:21","statements":[{"body":{"nodeType":"YulBlock","src":"868:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"877:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"880:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"870:6:21"},"nodeType":"YulFunctionCall","src":"870:12:21"},"nodeType":"YulExpressionStatement","src":"870:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"842:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"851:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"838:3:21"},"nodeType":"YulFunctionCall","src":"838:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"863:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"834:3:21"},"nodeType":"YulFunctionCall","src":"834:33:21"},"nodeType":"YulIf","src":"831:53:21"},{"nodeType":"YulVariableDeclaration","src":"893:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"919:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"906:12:21"},"nodeType":"YulFunctionCall","src":"906:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"897:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"962:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"938:23:21"},"nodeType":"YulFunctionCall","src":"938:30:21"},"nodeType":"YulExpressionStatement","src":"938:30:21"},{"nodeType":"YulAssignment","src":"977:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"987:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"977:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1001:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1032:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1043:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:21"},"nodeType":"YulFunctionCall","src":"1028:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1015:12:21"},"nodeType":"YulFunctionCall","src":"1015:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1005:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1056:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1078:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1070:3:21"},"nodeType":"YulFunctionCall","src":"1070:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1082:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1066:3:21"},"nodeType":"YulFunctionCall","src":"1066:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1060:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1111:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1120:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1123:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1113:6:21"},"nodeType":"YulFunctionCall","src":"1113:12:21"},"nodeType":"YulExpressionStatement","src":"1113:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1107:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1096:2:21"},"nodeType":"YulFunctionCall","src":"1096:14:21"},"nodeType":"YulIf","src":"1093:34:21"},{"nodeType":"YulVariableDeclaration","src":"1136:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1192:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1203:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1188:3:21"},"nodeType":"YulFunctionCall","src":"1188:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1212:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1162:25:21"},"nodeType":"YulFunctionCall","src":"1162:58:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1140:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1150:8:21","type":""}]},{"nodeType":"YulAssignment","src":"1229:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1239:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1229:6:21"}]},{"nodeType":"YulAssignment","src":"1256:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1266:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1256:6:21"}]},{"nodeType":"YulAssignment","src":"1283:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1326:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:21"},"nodeType":"YulFunctionCall","src":"1311:18:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"1293:17:21"},"nodeType":"YulFunctionCall","src":"1293:37:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1283:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1339:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1372:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1383:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1368:3:21"},"nodeType":"YulFunctionCall","src":"1368:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1355:12:21"},"nodeType":"YulFunctionCall","src":"1355:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1343:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1416:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1425:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1428:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1418:6:21"},"nodeType":"YulFunctionCall","src":"1418:12:21"},"nodeType":"YulExpressionStatement","src":"1418:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1402:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1412:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1399:2:21"},"nodeType":"YulFunctionCall","src":"1399:16:21"},"nodeType":"YulIf","src":"1396:36:21"},{"nodeType":"YulVariableDeclaration","src":"1441:86:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1497:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1508:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1493:3:21"},"nodeType":"YulFunctionCall","src":"1493:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1519:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1467:25:21"},"nodeType":"YulFunctionCall","src":"1467:60:21"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"1445:8:21","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"1455:8:21","type":""}]},{"nodeType":"YulAssignment","src":"1536:18:21","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1546:8:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1536:6:21"}]},{"nodeType":"YulAssignment","src":"1563:18:21","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"1573:8:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1563:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"747:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"758:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"770:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"778:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"786:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"794:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"802:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"810:6:21","type":""}],"src":"664:923:21"},{"body":{"nodeType":"YulBlock","src":"1637:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:21"},"nodeType":"YulFunctionCall","src":"1703:12:21"},"nodeType":"YulExpressionStatement","src":"1703:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1660:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1671:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1686:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1691:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1682:3:21"},"nodeType":"YulFunctionCall","src":"1682:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"1695:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1678:3:21"},"nodeType":"YulFunctionCall","src":"1678:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1667:3:21"},"nodeType":"YulFunctionCall","src":"1667:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1657:2:21"},"nodeType":"YulFunctionCall","src":"1657:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1650:6:21"},"nodeType":"YulFunctionCall","src":"1650:50:21"},"nodeType":"YulIf","src":"1647:70:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1626:5:21","type":""}],"src":"1592:131:21"},{"body":{"nodeType":"YulBlock","src":"1798:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"1844:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1853:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1856:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1846:6:21"},"nodeType":"YulFunctionCall","src":"1846:12:21"},"nodeType":"YulExpressionStatement","src":"1846:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1819:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1828:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1815:3:21"},"nodeType":"YulFunctionCall","src":"1815:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1840:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1811:3:21"},"nodeType":"YulFunctionCall","src":"1811:32:21"},"nodeType":"YulIf","src":"1808:52:21"},{"nodeType":"YulVariableDeclaration","src":"1869:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1895:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1882:12:21"},"nodeType":"YulFunctionCall","src":"1882:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1873:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1914:24:21"},"nodeType":"YulFunctionCall","src":"1914:31:21"},"nodeType":"YulExpressionStatement","src":"1914:31:21"},{"nodeType":"YulAssignment","src":"1954:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1964:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1954:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1764:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1775:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1787:6:21","type":""}],"src":"1728:247:21"},{"body":{"nodeType":"YulBlock","src":"2081:102:21","statements":[{"nodeType":"YulAssignment","src":"2091:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2103:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2114:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2099:3:21"},"nodeType":"YulFunctionCall","src":"2099:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2091:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2133:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2148:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2164:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2169:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2160:3:21"},"nodeType":"YulFunctionCall","src":"2160:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2173:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2156:3:21"},"nodeType":"YulFunctionCall","src":"2156:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2144:3:21"},"nodeType":"YulFunctionCall","src":"2144:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2126:6:21"},"nodeType":"YulFunctionCall","src":"2126:51:21"},"nodeType":"YulExpressionStatement","src":"2126:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2050:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2061:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2072:4:21","type":""}],"src":"1980:203:21"},{"body":{"nodeType":"YulBlock","src":"2289:76:21","statements":[{"nodeType":"YulAssignment","src":"2299:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2311:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2322:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:21"},"nodeType":"YulFunctionCall","src":"2307:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2299:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2341:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"2352:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2334:6:21"},"nodeType":"YulFunctionCall","src":"2334:25:21"},"nodeType":"YulExpressionStatement","src":"2334:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2258:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2269:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2280:4:21","type":""}],"src":"2188:177:21"},{"body":{"nodeType":"YulBlock","src":"2439:176:21","statements":[{"body":{"nodeType":"YulBlock","src":"2485:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2494:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2497:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2487:6:21"},"nodeType":"YulFunctionCall","src":"2487:12:21"},"nodeType":"YulExpressionStatement","src":"2487:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2460:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2469:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2456:3:21"},"nodeType":"YulFunctionCall","src":"2456:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2481:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2452:3:21"},"nodeType":"YulFunctionCall","src":"2452:32:21"},"nodeType":"YulIf","src":"2449:52:21"},{"nodeType":"YulVariableDeclaration","src":"2510:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2536:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2523:12:21"},"nodeType":"YulFunctionCall","src":"2523:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2514:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2579:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"2555:23:21"},"nodeType":"YulFunctionCall","src":"2555:30:21"},"nodeType":"YulExpressionStatement","src":"2555:30:21"},{"nodeType":"YulAssignment","src":"2594:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2604:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2594:6:21"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2405:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2416:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2428:6:21","type":""}],"src":"2370:245:21"},{"body":{"nodeType":"YulBlock","src":"2686:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2696:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2705:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2700:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2765:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2790:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2795:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2786:3:21"},"nodeType":"YulFunctionCall","src":"2786:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2809:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2814:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2805:3:21"},"nodeType":"YulFunctionCall","src":"2805:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2799:5:21"},"nodeType":"YulFunctionCall","src":"2799:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2779:6:21"},"nodeType":"YulFunctionCall","src":"2779:39:21"},"nodeType":"YulExpressionStatement","src":"2779:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2726:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2729:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2723:2:21"},"nodeType":"YulFunctionCall","src":"2723:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2737:19:21","statements":[{"nodeType":"YulAssignment","src":"2739:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2748:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"2751:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2744:3:21"},"nodeType":"YulFunctionCall","src":"2744:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2739:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2719:3:21","statements":[]},"src":"2715:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2848:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2853:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2844:3:21"},"nodeType":"YulFunctionCall","src":"2844:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2862:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2837:6:21"},"nodeType":"YulFunctionCall","src":"2837:27:21"},"nodeType":"YulExpressionStatement","src":"2837:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2664:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2669:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2674:6:21","type":""}],"src":"2620:250:21"},{"body":{"nodeType":"YulBlock","src":"2924:221:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2934:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2954:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2948:5:21"},"nodeType":"YulFunctionCall","src":"2948:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2938:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2976:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2981:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2969:6:21"},"nodeType":"YulFunctionCall","src":"2969:19:21"},"nodeType":"YulExpressionStatement","src":"2969:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3036:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3032:3:21"},"nodeType":"YulFunctionCall","src":"3032:16:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3054:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3059:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3050:3:21"},"nodeType":"YulFunctionCall","src":"3050:14:21"},{"name":"length","nodeType":"YulIdentifier","src":"3066:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2997:34:21"},"nodeType":"YulFunctionCall","src":"2997:76:21"},"nodeType":"YulExpressionStatement","src":"2997:76:21"},{"nodeType":"YulAssignment","src":"3082:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3097:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3110:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3118:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3106:3:21"},"nodeType":"YulFunctionCall","src":"3106:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3127:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3123:3:21"},"nodeType":"YulFunctionCall","src":"3123:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3102:3:21"},"nodeType":"YulFunctionCall","src":"3102:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3093:3:21"},"nodeType":"YulFunctionCall","src":"3093:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"3134:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3089:3:21"},"nodeType":"YulFunctionCall","src":"3089:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3082:3:21"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2901:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2908:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2916:3:21","type":""}],"src":"2875:270:21"},{"body":{"nodeType":"YulBlock","src":"3269:98:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3286:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3297:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3279:6:21"},"nodeType":"YulFunctionCall","src":"3279:21:21"},"nodeType":"YulExpressionStatement","src":"3279:21:21"},{"nodeType":"YulAssignment","src":"3309:52:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3334:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3346:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3357:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3342:3:21"},"nodeType":"YulFunctionCall","src":"3342:18:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"3317:16:21"},"nodeType":"YulFunctionCall","src":"3317:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3309:4:21"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3238:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3249:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3260:4:21","type":""}],"src":"3150:217:21"},{"body":{"nodeType":"YulBlock","src":"3414:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"3468:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3477:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3480:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3470:6:21"},"nodeType":"YulFunctionCall","src":"3470:12:21"},"nodeType":"YulExpressionStatement","src":"3470:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3437:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3458:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3451:6:21"},"nodeType":"YulFunctionCall","src":"3451:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3444:6:21"},"nodeType":"YulFunctionCall","src":"3444:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3434:2:21"},"nodeType":"YulFunctionCall","src":"3434:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3427:6:21"},"nodeType":"YulFunctionCall","src":"3427:40:21"},"nodeType":"YulIf","src":"3424:60:21"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3403:5:21","type":""}],"src":"3372:118:21"},{"body":{"nodeType":"YulBlock","src":"3562:174:21","statements":[{"body":{"nodeType":"YulBlock","src":"3608:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3617:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3620:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3610:6:21"},"nodeType":"YulFunctionCall","src":"3610:12:21"},"nodeType":"YulExpressionStatement","src":"3610:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3583:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3592:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3579:3:21"},"nodeType":"YulFunctionCall","src":"3579:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3604:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3575:3:21"},"nodeType":"YulFunctionCall","src":"3575:32:21"},"nodeType":"YulIf","src":"3572:52:21"},{"nodeType":"YulVariableDeclaration","src":"3633:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3659:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3646:12:21"},"nodeType":"YulFunctionCall","src":"3646:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3637:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3700:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"3678:21:21"},"nodeType":"YulFunctionCall","src":"3678:28:21"},"nodeType":"YulExpressionStatement","src":"3678:28:21"},{"nodeType":"YulAssignment","src":"3715:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3725:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3715:6:21"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3528:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3539:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3551:6:21","type":""}],"src":"3495:241:21"},{"body":{"nodeType":"YulBlock","src":"3846:437:21","statements":[{"body":{"nodeType":"YulBlock","src":"3892:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3901:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3904:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3894:6:21"},"nodeType":"YulFunctionCall","src":"3894:12:21"},"nodeType":"YulExpressionStatement","src":"3894:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3867:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3876:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3863:3:21"},"nodeType":"YulFunctionCall","src":"3863:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3888:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3859:3:21"},"nodeType":"YulFunctionCall","src":"3859:32:21"},"nodeType":"YulIf","src":"3856:52:21"},{"nodeType":"YulVariableDeclaration","src":"3917:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3943:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3930:12:21"},"nodeType":"YulFunctionCall","src":"3930:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3921:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3986:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"3962:23:21"},"nodeType":"YulFunctionCall","src":"3962:30:21"},"nodeType":"YulExpressionStatement","src":"3962:30:21"},{"nodeType":"YulAssignment","src":"4001:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4011:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4001:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4025:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4067:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:21"},"nodeType":"YulFunctionCall","src":"4052:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4039:12:21"},"nodeType":"YulFunctionCall","src":"4039:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4029:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4114:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4123:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4126:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4116:6:21"},"nodeType":"YulFunctionCall","src":"4116:12:21"},"nodeType":"YulExpressionStatement","src":"4116:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4086:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4102:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4106:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4098:3:21"},"nodeType":"YulFunctionCall","src":"4098:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4110:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4094:3:21"},"nodeType":"YulFunctionCall","src":"4094:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4083:2:21"},"nodeType":"YulFunctionCall","src":"4083:30:21"},"nodeType":"YulIf","src":"4080:50:21"},{"nodeType":"YulVariableDeclaration","src":"4139:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4195:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4206:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4191:3:21"},"nodeType":"YulFunctionCall","src":"4191:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4215:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4165:25:21"},"nodeType":"YulFunctionCall","src":"4165:58:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"4143:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"4153:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4232:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4242:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4232:6:21"}]},{"nodeType":"YulAssignment","src":"4259:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4269:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4259:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3796:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3807:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3819:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3827:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3835:6:21","type":""}],"src":"3741:542:21"},{"body":{"nodeType":"YulBlock","src":"4375:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"4421:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4430:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4433:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4423:6:21"},"nodeType":"YulFunctionCall","src":"4423:12:21"},"nodeType":"YulExpressionStatement","src":"4423:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4396:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4405:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4392:3:21"},"nodeType":"YulFunctionCall","src":"4392:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4417:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4388:3:21"},"nodeType":"YulFunctionCall","src":"4388:32:21"},"nodeType":"YulIf","src":"4385:52:21"},{"nodeType":"YulAssignment","src":"4446:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4456:12:21"},"nodeType":"YulFunctionCall","src":"4456:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4446:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4488:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4518:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4529:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4514:3:21"},"nodeType":"YulFunctionCall","src":"4514:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4501:12:21"},"nodeType":"YulFunctionCall","src":"4501:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4492:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4567:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4542:24:21"},"nodeType":"YulFunctionCall","src":"4542:31:21"},"nodeType":"YulExpressionStatement","src":"4542:31:21"},{"nodeType":"YulAssignment","src":"4582:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"4592:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4582:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4344:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4356:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4364:6:21","type":""}],"src":"4288:315:21"},{"body":{"nodeType":"YulBlock","src":"4640:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4657:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4664:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4669:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4660:3:21"},"nodeType":"YulFunctionCall","src":"4660:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4650:6:21"},"nodeType":"YulFunctionCall","src":"4650:31:21"},"nodeType":"YulExpressionStatement","src":"4650:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4697:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4700:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4690:6:21"},"nodeType":"YulFunctionCall","src":"4690:15:21"},"nodeType":"YulExpressionStatement","src":"4690:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4721:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4724:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4714:6:21"},"nodeType":"YulFunctionCall","src":"4714:15:21"},"nodeType":"YulExpressionStatement","src":"4714:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4608:127:21"},{"body":{"nodeType":"YulBlock","src":"4786:206:21","statements":[{"nodeType":"YulAssignment","src":"4796:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4812:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4806:5:21"},"nodeType":"YulFunctionCall","src":"4806:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4796:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4824:34:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4846:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4854:3:21","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4842:3:21"},"nodeType":"YulFunctionCall","src":"4842:16:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4828:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4933:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4935:16:21"},"nodeType":"YulFunctionCall","src":"4935:18:21"},"nodeType":"YulExpressionStatement","src":"4935:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4876:10:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4896:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4900:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4892:3:21"},"nodeType":"YulFunctionCall","src":"4892:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4904:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4888:3:21"},"nodeType":"YulFunctionCall","src":"4888:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4873:2:21"},"nodeType":"YulFunctionCall","src":"4873:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4912:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4924:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4909:2:21"},"nodeType":"YulFunctionCall","src":"4909:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4870:2:21"},"nodeType":"YulFunctionCall","src":"4870:62:21"},"nodeType":"YulIf","src":"4867:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4971:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4975:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4964:6:21"},"nodeType":"YulFunctionCall","src":"4964:22:21"},"nodeType":"YulExpressionStatement","src":"4964:22:21"}]},"name":"allocate_memory_6904","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4775:6:21","type":""}],"src":"4740:252:21"},{"body":{"nodeType":"YulBlock","src":"5043:209:21","statements":[{"nodeType":"YulAssignment","src":"5053:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5069:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5063:5:21"},"nodeType":"YulFunctionCall","src":"5063:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5053:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5081:37:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5103:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5111:6:21","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5099:3:21"},"nodeType":"YulFunctionCall","src":"5099:19:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5085:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5193:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5195:16:21"},"nodeType":"YulFunctionCall","src":"5195:18:21"},"nodeType":"YulExpressionStatement","src":"5195:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5136:10:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5156:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5160:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5152:3:21"},"nodeType":"YulFunctionCall","src":"5152:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5164:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5148:3:21"},"nodeType":"YulFunctionCall","src":"5148:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5133:2:21"},"nodeType":"YulFunctionCall","src":"5133:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5172:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5184:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5169:2:21"},"nodeType":"YulFunctionCall","src":"5169:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5130:2:21"},"nodeType":"YulFunctionCall","src":"5130:62:21"},"nodeType":"YulIf","src":"5127:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5231:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5235:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5224:6:21"},"nodeType":"YulFunctionCall","src":"5224:22:21"},"nodeType":"YulExpressionStatement","src":"5224:22:21"}]},"name":"allocate_memory_6906","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5032:6:21","type":""}],"src":"4997:255:21"},{"body":{"nodeType":"YulBlock","src":"5302:230:21","statements":[{"nodeType":"YulAssignment","src":"5312:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5328:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5322:5:21"},"nodeType":"YulFunctionCall","src":"5322:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5312:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5340:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5362:6:21"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5378:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5384:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5374:3:21"},"nodeType":"YulFunctionCall","src":"5374:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5393:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5389:3:21"},"nodeType":"YulFunctionCall","src":"5389:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5370:3:21"},"nodeType":"YulFunctionCall","src":"5370:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5358:3:21"},"nodeType":"YulFunctionCall","src":"5358:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5344:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5473:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5475:16:21"},"nodeType":"YulFunctionCall","src":"5475:18:21"},"nodeType":"YulExpressionStatement","src":"5475:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5416:10:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5436:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5440:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5432:3:21"},"nodeType":"YulFunctionCall","src":"5432:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5444:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5428:3:21"},"nodeType":"YulFunctionCall","src":"5428:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5413:2:21"},"nodeType":"YulFunctionCall","src":"5413:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5452:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5464:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5449:2:21"},"nodeType":"YulFunctionCall","src":"5449:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5410:2:21"},"nodeType":"YulFunctionCall","src":"5410:62:21"},"nodeType":"YulIf","src":"5407:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5511:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5515:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5504:6:21"},"nodeType":"YulFunctionCall","src":"5504:22:21"},"nodeType":"YulExpressionStatement","src":"5504:22:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5282:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5291:6:21","type":""}],"src":"5257:275:21"},{"body":{"nodeType":"YulBlock","src":"5606:114:21","statements":[{"body":{"nodeType":"YulBlock","src":"5650:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5652:16:21"},"nodeType":"YulFunctionCall","src":"5652:18:21"},"nodeType":"YulExpressionStatement","src":"5652:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5622:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"5642:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5634:3:21"},"nodeType":"YulFunctionCall","src":"5634:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"5646:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5630:3:21"},"nodeType":"YulFunctionCall","src":"5630:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5619:2:21"},"nodeType":"YulFunctionCall","src":"5619:30:21"},"nodeType":"YulIf","src":"5616:56:21"},{"nodeType":"YulAssignment","src":"5681:33:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5697:1:21","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"5700:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5693:3:21"},"nodeType":"YulFunctionCall","src":"5693:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"5709:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5689:3:21"},"nodeType":"YulFunctionCall","src":"5689:25:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5681:4:21"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5586:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5597:4:21","type":""}],"src":"5537:183:21"},{"body":{"nodeType":"YulBlock","src":"5789:673:21","statements":[{"body":{"nodeType":"YulBlock","src":"5838:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5847:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5850:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5840:6:21"},"nodeType":"YulFunctionCall","src":"5840:12:21"},"nodeType":"YulExpressionStatement","src":"5840:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5817:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5825:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:21"},"nodeType":"YulFunctionCall","src":"5813:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"5832:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5809:3:21"},"nodeType":"YulFunctionCall","src":"5809:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5802:6:21"},"nodeType":"YulFunctionCall","src":"5802:35:21"},"nodeType":"YulIf","src":"5799:55:21"},{"nodeType":"YulVariableDeclaration","src":"5863:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5886:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5873:12:21"},"nodeType":"YulFunctionCall","src":"5873:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5867:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5902:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5912:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5906:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5925:71:21","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"5992:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"5952:39:21"},"nodeType":"YulFunctionCall","src":"5952:43:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5936:15:21"},"nodeType":"YulFunctionCall","src":"5936:60:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5929:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6005:16:21","value":{"name":"dst","nodeType":"YulIdentifier","src":"6018:3:21"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6009:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6037:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6042:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6030:6:21"},"nodeType":"YulFunctionCall","src":"6030:15:21"},"nodeType":"YulExpressionStatement","src":"6030:15:21"},{"nodeType":"YulAssignment","src":"6054:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6065:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6070:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6061:3:21"},"nodeType":"YulFunctionCall","src":"6061:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6054:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"6082:46:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6104:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6116:1:21","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"6119:2:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6112:3:21"},"nodeType":"YulFunctionCall","src":"6112:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6100:3:21"},"nodeType":"YulFunctionCall","src":"6100:23:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6125:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6096:3:21"},"nodeType":"YulFunctionCall","src":"6096:32:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6086:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6156:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6165:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6168:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6158:6:21"},"nodeType":"YulFunctionCall","src":"6158:12:21"},"nodeType":"YulExpressionStatement","src":"6158:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6143:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"6151:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6140:2:21"},"nodeType":"YulFunctionCall","src":"6140:15:21"},"nodeType":"YulIf","src":"6137:35:21"},{"nodeType":"YulVariableDeclaration","src":"6181:26:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6196:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6204:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:21"},"nodeType":"YulFunctionCall","src":"6192:15:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6185:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6272:161:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6286:30:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6312:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6299:12:21"},"nodeType":"YulFunctionCall","src":"6299:17:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6290:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6354:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6329:24:21"},"nodeType":"YulFunctionCall","src":"6329:31:21"},"nodeType":"YulExpressionStatement","src":"6329:31:21"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6380:3:21"},{"name":"value","nodeType":"YulIdentifier","src":"6385:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6373:6:21"},"nodeType":"YulFunctionCall","src":"6373:18:21"},"nodeType":"YulExpressionStatement","src":"6373:18:21"},{"nodeType":"YulAssignment","src":"6404:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6415:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6420:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6411:3:21"},"nodeType":"YulFunctionCall","src":"6411:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6404:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6227:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6232:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6224:2:21"},"nodeType":"YulFunctionCall","src":"6224:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6240:23:21","statements":[{"nodeType":"YulAssignment","src":"6242:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6253:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"6258:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6249:3:21"},"nodeType":"YulFunctionCall","src":"6249:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6242:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"6220:3:21","statements":[]},"src":"6216:217:21"},{"nodeType":"YulAssignment","src":"6442:14:21","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"6451:5:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6442:5:21"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5763:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5771:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5779:5:21","type":""}],"src":"5725:737:21"},{"body":{"nodeType":"YulBlock","src":"6604:1003:21","statements":[{"body":{"nodeType":"YulBlock","src":"6650:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6659:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6662:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6652:6:21"},"nodeType":"YulFunctionCall","src":"6652:12:21"},"nodeType":"YulExpressionStatement","src":"6652:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6625:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6634:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6621:3:21"},"nodeType":"YulFunctionCall","src":"6621:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6646:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6617:3:21"},"nodeType":"YulFunctionCall","src":"6617:32:21"},"nodeType":"YulIf","src":"6614:52:21"},{"nodeType":"YulVariableDeclaration","src":"6675:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6702:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6689:12:21"},"nodeType":"YulFunctionCall","src":"6689:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6679:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6721:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6739:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"6743:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6735:3:21"},"nodeType":"YulFunctionCall","src":"6735:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"6747:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6731:3:21"},"nodeType":"YulFunctionCall","src":"6731:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6725:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6776:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6785:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6788:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6778:6:21"},"nodeType":"YulFunctionCall","src":"6778:12:21"},"nodeType":"YulExpressionStatement","src":"6778:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6764:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"6772:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6761:2:21"},"nodeType":"YulFunctionCall","src":"6761:14:21"},"nodeType":"YulIf","src":"6758:34:21"},{"nodeType":"YulVariableDeclaration","src":"6801:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6815:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6826:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6811:3:21"},"nodeType":"YulFunctionCall","src":"6811:22:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6805:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6881:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6890:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6893:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6883:6:21"},"nodeType":"YulFunctionCall","src":"6883:12:21"},"nodeType":"YulExpressionStatement","src":"6883:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6860:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"6864:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6856:3:21"},"nodeType":"YulFunctionCall","src":"6856:13:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6871:7:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6852:3:21"},"nodeType":"YulFunctionCall","src":"6852:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6845:6:21"},"nodeType":"YulFunctionCall","src":"6845:35:21"},"nodeType":"YulIf","src":"6842:55:21"},{"nodeType":"YulVariableDeclaration","src":"6906:26:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6929:2:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6916:12:21"},"nodeType":"YulFunctionCall","src":"6916:16:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6910:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6941:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6951:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6945:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6964:71:21","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7031:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"6991:39:21"},"nodeType":"YulFunctionCall","src":"6991:43:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6975:15:21"},"nodeType":"YulFunctionCall","src":"6975:60:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6968:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7044:16:21","value":{"name":"dst","nodeType":"YulIdentifier","src":"7057:3:21"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7048:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7076:3:21"},{"name":"_3","nodeType":"YulIdentifier","src":"7081:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7069:6:21"},"nodeType":"YulFunctionCall","src":"7069:15:21"},"nodeType":"YulExpressionStatement","src":"7069:15:21"},{"nodeType":"YulAssignment","src":"7093:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7104:3:21"},{"name":"_4","nodeType":"YulIdentifier","src":"7109:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:21"},"nodeType":"YulFunctionCall","src":"7100:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7093:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"7121:42:21","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7143:2:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7151:1:21","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"7154:2:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7147:3:21"},"nodeType":"YulFunctionCall","src":"7147:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:21"},"nodeType":"YulFunctionCall","src":"7139:19:21"},{"name":"_4","nodeType":"YulIdentifier","src":"7160:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7135:3:21"},"nodeType":"YulFunctionCall","src":"7135:28:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7125:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7195:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7204:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7207:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7197:6:21"},"nodeType":"YulFunctionCall","src":"7197:12:21"},"nodeType":"YulExpressionStatement","src":"7197:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7178:6:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7186:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7175:2:21"},"nodeType":"YulFunctionCall","src":"7175:19:21"},"nodeType":"YulIf","src":"7172:39:21"},{"nodeType":"YulVariableDeclaration","src":"7220:22:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7235:2:21"},{"name":"_4","nodeType":"YulIdentifier","src":"7239:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7231:3:21"},"nodeType":"YulFunctionCall","src":"7231:11:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7224:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7307:86:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7328:3:21"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7346:3:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7333:12:21"},"nodeType":"YulFunctionCall","src":"7333:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7321:6:21"},"nodeType":"YulFunctionCall","src":"7321:30:21"},"nodeType":"YulExpressionStatement","src":"7321:30:21"},{"nodeType":"YulAssignment","src":"7364:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7375:3:21"},{"name":"_4","nodeType":"YulIdentifier","src":"7380:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7371:3:21"},"nodeType":"YulFunctionCall","src":"7371:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7364:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7262:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7267:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7259:2:21"},"nodeType":"YulFunctionCall","src":"7259:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7275:23:21","statements":[{"nodeType":"YulAssignment","src":"7277:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7288:3:21"},{"name":"_4","nodeType":"YulIdentifier","src":"7293:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7284:3:21"},"nodeType":"YulFunctionCall","src":"7284:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7277:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"7255:3:21","statements":[]},"src":"7251:142:21"},{"nodeType":"YulAssignment","src":"7402:15:21","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7412:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7402:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"7426:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7459:9:21"},{"name":"_4","nodeType":"YulIdentifier","src":"7470:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7455:3:21"},"nodeType":"YulFunctionCall","src":"7455:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7442:12:21"},"nodeType":"YulFunctionCall","src":"7442:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7430:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7503:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7512:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7515:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7505:6:21"},"nodeType":"YulFunctionCall","src":"7505:12:21"},"nodeType":"YulExpressionStatement","src":"7505:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7489:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"7499:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7486:2:21"},"nodeType":"YulFunctionCall","src":"7486:16:21"},"nodeType":"YulIf","src":"7483:36:21"},{"nodeType":"YulAssignment","src":"7528:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7571:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7582:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7567:3:21"},"nodeType":"YulFunctionCall","src":"7567:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7593:7:21"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"7538:28:21"},"nodeType":"YulFunctionCall","src":"7538:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7528:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6562:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6573:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6585:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6593:6:21","type":""}],"src":"6467:1140:21"},{"body":{"nodeType":"YulBlock","src":"7713:76:21","statements":[{"nodeType":"YulAssignment","src":"7723:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7735:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7746:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7731:3:21"},"nodeType":"YulFunctionCall","src":"7731:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7723:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"7776:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7758:6:21"},"nodeType":"YulFunctionCall","src":"7758:25:21"},"nodeType":"YulExpressionStatement","src":"7758:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7682:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7693:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7704:4:21","type":""}],"src":"7612:177:21"},{"body":{"nodeType":"YulBlock","src":"7881:301:21","statements":[{"body":{"nodeType":"YulBlock","src":"7927:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7936:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7939:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7929:6:21"},"nodeType":"YulFunctionCall","src":"7929:12:21"},"nodeType":"YulExpressionStatement","src":"7929:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7902:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7911:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7898:3:21"},"nodeType":"YulFunctionCall","src":"7898:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7923:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7894:3:21"},"nodeType":"YulFunctionCall","src":"7894:32:21"},"nodeType":"YulIf","src":"7891:52:21"},{"nodeType":"YulVariableDeclaration","src":"7952:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7978:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7965:12:21"},"nodeType":"YulFunctionCall","src":"7965:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7956:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8022:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7997:24:21"},"nodeType":"YulFunctionCall","src":"7997:31:21"},"nodeType":"YulExpressionStatement","src":"7997:31:21"},{"nodeType":"YulAssignment","src":"8037:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"8047:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8037:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"8061:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8093:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8104:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8089:3:21"},"nodeType":"YulFunctionCall","src":"8089:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8076:12:21"},"nodeType":"YulFunctionCall","src":"8076:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"8065:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"8142:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8117:24:21"},"nodeType":"YulFunctionCall","src":"8117:33:21"},"nodeType":"YulExpressionStatement","src":"8117:33:21"},{"nodeType":"YulAssignment","src":"8159:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"8169:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8159:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7839:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7850:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7862:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7870:6:21","type":""}],"src":"7794:388:21"},{"body":{"nodeType":"YulBlock","src":"8482:401:21","statements":[{"nodeType":"YulAssignment","src":"8492:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8504:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8515:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8500:3:21"},"nodeType":"YulFunctionCall","src":"8500:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8492:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8535:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"8546:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8528:6:21"},"nodeType":"YulFunctionCall","src":"8528:25:21"},"nodeType":"YulExpressionStatement","src":"8528:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8573:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8584:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:21"},"nodeType":"YulFunctionCall","src":"8569:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"8589:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8562:6:21"},"nodeType":"YulFunctionCall","src":"8562:34:21"},"nodeType":"YulExpressionStatement","src":"8562:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8616:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8627:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8612:3:21"},"nodeType":"YulFunctionCall","src":"8612:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"8632:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8605:6:21"},"nodeType":"YulFunctionCall","src":"8605:34:21"},"nodeType":"YulExpressionStatement","src":"8605:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8659:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8670:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8655:3:21"},"nodeType":"YulFunctionCall","src":"8655:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"8675:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8648:6:21"},"nodeType":"YulFunctionCall","src":"8648:34:21"},"nodeType":"YulExpressionStatement","src":"8648:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8713:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8698:3:21"},"nodeType":"YulFunctionCall","src":"8698:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"8719:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8691:6:21"},"nodeType":"YulFunctionCall","src":"8691:35:21"},"nodeType":"YulExpressionStatement","src":"8691:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8746:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8757:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8742:3:21"},"nodeType":"YulFunctionCall","src":"8742:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"8763:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8735:6:21"},"nodeType":"YulFunctionCall","src":"8735:35:21"},"nodeType":"YulExpressionStatement","src":"8735:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8790:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8801:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8786:3:21"},"nodeType":"YulFunctionCall","src":"8786:19:21"},{"name":"value6","nodeType":"YulIdentifier","src":"8807:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8779:6:21"},"nodeType":"YulFunctionCall","src":"8779:35:21"},"nodeType":"YulExpressionStatement","src":"8779:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8834:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8845:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8830:3:21"},"nodeType":"YulFunctionCall","src":"8830:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"8855:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8863:12:21","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8851:3:21"},"nodeType":"YulFunctionCall","src":"8851:25:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8823:6:21"},"nodeType":"YulFunctionCall","src":"8823:54:21"},"nodeType":"YulExpressionStatement","src":"8823:54:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint40__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint40__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8395:9:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"8406:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8414:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8422:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8430:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8438:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8446:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8454:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8462:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8473:4:21","type":""}],"src":"8187:696:21"},{"body":{"nodeType":"YulBlock","src":"8983:92:21","statements":[{"nodeType":"YulAssignment","src":"8993:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9016:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9001:3:21"},"nodeType":"YulFunctionCall","src":"9001:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8993:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9035:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9060:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9053:6:21"},"nodeType":"YulFunctionCall","src":"9053:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9046:6:21"},"nodeType":"YulFunctionCall","src":"9046:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9028:6:21"},"nodeType":"YulFunctionCall","src":"9028:41:21"},"nodeType":"YulExpressionStatement","src":"9028:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8952:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8963:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8974:4:21","type":""}],"src":"8888:187:21"},{"body":{"nodeType":"YulBlock","src":"9179:89:21","statements":[{"nodeType":"YulAssignment","src":"9189:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9201:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9212:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9197:3:21"},"nodeType":"YulFunctionCall","src":"9197:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9189:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9231:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9246:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9254:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9242:3:21"},"nodeType":"YulFunctionCall","src":"9242:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9224:6:21"},"nodeType":"YulFunctionCall","src":"9224:38:21"},"nodeType":"YulExpressionStatement","src":"9224:38:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9148:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9159:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9170:4:21","type":""}],"src":"9080:188:21"},{"body":{"nodeType":"YulBlock","src":"9360:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"9406:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9415:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9418:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9408:6:21"},"nodeType":"YulFunctionCall","src":"9408:12:21"},"nodeType":"YulExpressionStatement","src":"9408:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9381:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9390:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9377:3:21"},"nodeType":"YulFunctionCall","src":"9377:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9402:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9373:3:21"},"nodeType":"YulFunctionCall","src":"9373:32:21"},"nodeType":"YulIf","src":"9370:52:21"},{"nodeType":"YulVariableDeclaration","src":"9431:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9457:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9444:12:21"},"nodeType":"YulFunctionCall","src":"9444:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9435:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9501:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9476:24:21"},"nodeType":"YulFunctionCall","src":"9476:31:21"},"nodeType":"YulExpressionStatement","src":"9476:31:21"},{"nodeType":"YulAssignment","src":"9516:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"9526:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9516:6:21"}]},{"nodeType":"YulAssignment","src":"9540:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9567:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9578:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9563:3:21"},"nodeType":"YulFunctionCall","src":"9563:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9550:12:21"},"nodeType":"YulFunctionCall","src":"9550:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9540:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9318:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9329:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9341:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9349:6:21","type":""}],"src":"9273:315:21"},{"body":{"nodeType":"YulBlock","src":"9679:300:21","statements":[{"body":{"nodeType":"YulBlock","src":"9725:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9734:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9737:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9727:6:21"},"nodeType":"YulFunctionCall","src":"9727:12:21"},"nodeType":"YulExpressionStatement","src":"9727:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9700:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9709:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9696:3:21"},"nodeType":"YulFunctionCall","src":"9696:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9721:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9692:3:21"},"nodeType":"YulFunctionCall","src":"9692:32:21"},"nodeType":"YulIf","src":"9689:52:21"},{"nodeType":"YulVariableDeclaration","src":"9750:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9776:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:21"},"nodeType":"YulFunctionCall","src":"9763:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9754:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9819:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"9795:23:21"},"nodeType":"YulFunctionCall","src":"9795:30:21"},"nodeType":"YulExpressionStatement","src":"9795:30:21"},{"nodeType":"YulAssignment","src":"9834:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"9844:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9834:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"9858:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9890:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9901:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9886:3:21"},"nodeType":"YulFunctionCall","src":"9886:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9873:12:21"},"nodeType":"YulFunctionCall","src":"9873:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9862:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9939:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"9914:24:21"},"nodeType":"YulFunctionCall","src":"9914:33:21"},"nodeType":"YulExpressionStatement","src":"9914:33:21"},{"nodeType":"YulAssignment","src":"9956:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"9966:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9956:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9637:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9648:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9660:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9668:6:21","type":""}],"src":"9593:386:21"},{"body":{"nodeType":"YulBlock","src":"10054:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"10100:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10109:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10112:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10102:6:21"},"nodeType":"YulFunctionCall","src":"10102:12:21"},"nodeType":"YulExpressionStatement","src":"10102:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10075:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10084:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10071:3:21"},"nodeType":"YulFunctionCall","src":"10071:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10096:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10067:3:21"},"nodeType":"YulFunctionCall","src":"10067:32:21"},"nodeType":"YulIf","src":"10064:52:21"},{"nodeType":"YulAssignment","src":"10125:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10148:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10135:12:21"},"nodeType":"YulFunctionCall","src":"10135:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10125:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10020:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10031:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10043:6:21","type":""}],"src":"9984:180:21"},{"body":{"nodeType":"YulBlock","src":"10298:119:21","statements":[{"nodeType":"YulAssignment","src":"10308:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10320:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10331:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10316:3:21"},"nodeType":"YulFunctionCall","src":"10316:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10308:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10350:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"10361:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10343:6:21"},"nodeType":"YulFunctionCall","src":"10343:25:21"},"nodeType":"YulExpressionStatement","src":"10343:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10388:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10399:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10384:3:21"},"nodeType":"YulFunctionCall","src":"10384:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"10404:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10377:6:21"},"nodeType":"YulFunctionCall","src":"10377:34:21"},"nodeType":"YulExpressionStatement","src":"10377:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10259:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10270:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10278:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10289:4:21","type":""}],"src":"10169:248:21"},{"body":{"nodeType":"YulBlock","src":"10479:129:21","statements":[{"body":{"nodeType":"YulBlock","src":"10523:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10525:16:21"},"nodeType":"YulFunctionCall","src":"10525:18:21"},"nodeType":"YulExpressionStatement","src":"10525:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10495:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10511:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"10515:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10507:3:21"},"nodeType":"YulFunctionCall","src":"10507:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"10519:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10503:3:21"},"nodeType":"YulFunctionCall","src":"10503:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10492:2:21"},"nodeType":"YulFunctionCall","src":"10492:30:21"},"nodeType":"YulIf","src":"10489:56:21"},{"nodeType":"YulAssignment","src":"10554:48:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10574:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10582:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10570:3:21"},"nodeType":"YulFunctionCall","src":"10570:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10591:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10587:3:21"},"nodeType":"YulFunctionCall","src":"10587:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10566:3:21"},"nodeType":"YulFunctionCall","src":"10566:29:21"},{"kind":"number","nodeType":"YulLiteral","src":"10597:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10562:3:21"},"nodeType":"YulFunctionCall","src":"10562:40:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10554:4:21"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10459:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10470:4:21","type":""}],"src":"10422:186:21"},{"body":{"nodeType":"YulBlock","src":"10665:410:21","statements":[{"body":{"nodeType":"YulBlock","src":"10714:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10723:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10726:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10716:6:21"},"nodeType":"YulFunctionCall","src":"10716:12:21"},"nodeType":"YulExpressionStatement","src":"10716:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10693:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10701:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10689:3:21"},"nodeType":"YulFunctionCall","src":"10689:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"10708:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10685:3:21"},"nodeType":"YulFunctionCall","src":"10685:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10678:6:21"},"nodeType":"YulFunctionCall","src":"10678:35:21"},"nodeType":"YulIf","src":"10675:55:21"},{"nodeType":"YulVariableDeclaration","src":"10739:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10762:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10749:12:21"},"nodeType":"YulFunctionCall","src":"10749:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10743:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10778:63:21","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10837:2:21"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"10809:27:21"},"nodeType":"YulFunctionCall","src":"10809:31:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10793:15:21"},"nodeType":"YulFunctionCall","src":"10793:48:21"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"10782:7:21","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"10857:7:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10866:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10850:6:21"},"nodeType":"YulFunctionCall","src":"10850:19:21"},"nodeType":"YulExpressionStatement","src":"10850:19:21"},{"body":{"nodeType":"YulBlock","src":"10917:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10926:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10929:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10919:6:21"},"nodeType":"YulFunctionCall","src":"10919:12:21"},"nodeType":"YulExpressionStatement","src":"10919:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10892:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10900:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10888:3:21"},"nodeType":"YulFunctionCall","src":"10888:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10884:3:21"},"nodeType":"YulFunctionCall","src":"10884:26:21"},{"name":"end","nodeType":"YulIdentifier","src":"10912:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10881:2:21"},"nodeType":"YulFunctionCall","src":"10881:35:21"},"nodeType":"YulIf","src":"10878:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"10959:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"10968:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10955:3:21"},"nodeType":"YulFunctionCall","src":"10955:18:21"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10979:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10987:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10975:3:21"},"nodeType":"YulFunctionCall","src":"10975:17:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10994:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10942:12:21"},"nodeType":"YulFunctionCall","src":"10942:55:21"},"nodeType":"YulExpressionStatement","src":"10942:55:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"11021:7:21"},{"name":"_1","nodeType":"YulIdentifier","src":"11030:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11017:3:21"},"nodeType":"YulFunctionCall","src":"11017:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"11035:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:21"},"nodeType":"YulFunctionCall","src":"11013:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"11042:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11006:6:21"},"nodeType":"YulFunctionCall","src":"11006:38:21"},"nodeType":"YulExpressionStatement","src":"11006:38:21"},{"nodeType":"YulAssignment","src":"11053:16:21","value":{"name":"array_1","nodeType":"YulIdentifier","src":"11062:7:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11053:5:21"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10639:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"10647:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10655:5:21","type":""}],"src":"10613:462:21"},{"body":{"nodeType":"YulBlock","src":"11191:414:21","statements":[{"body":{"nodeType":"YulBlock","src":"11237:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11246:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11249:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11239:6:21"},"nodeType":"YulFunctionCall","src":"11239:12:21"},"nodeType":"YulExpressionStatement","src":"11239:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11212:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11221:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11208:3:21"},"nodeType":"YulFunctionCall","src":"11208:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11233:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11204:3:21"},"nodeType":"YulFunctionCall","src":"11204:32:21"},"nodeType":"YulIf","src":"11201:52:21"},{"nodeType":"YulVariableDeclaration","src":"11262:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11288:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11275:12:21"},"nodeType":"YulFunctionCall","src":"11275:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11266:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11331:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"11307:23:21"},"nodeType":"YulFunctionCall","src":"11307:30:21"},"nodeType":"YulExpressionStatement","src":"11307:30:21"},{"nodeType":"YulAssignment","src":"11346:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11356:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11346:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"11370:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11401:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11412:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11397:3:21"},"nodeType":"YulFunctionCall","src":"11397:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11384:12:21"},"nodeType":"YulFunctionCall","src":"11384:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11374:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11459:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11468:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11471:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11461:6:21"},"nodeType":"YulFunctionCall","src":"11461:12:21"},"nodeType":"YulExpressionStatement","src":"11461:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11431:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11447:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"11451:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11443:3:21"},"nodeType":"YulFunctionCall","src":"11443:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"11455:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11439:3:21"},"nodeType":"YulFunctionCall","src":"11439:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11428:2:21"},"nodeType":"YulFunctionCall","src":"11428:30:21"},"nodeType":"YulIf","src":"11425:50:21"},{"nodeType":"YulAssignment","src":"11484:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11515:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11526:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11511:3:21"},"nodeType":"YulFunctionCall","src":"11511:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11535:7:21"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"11494:16:21"},"nodeType":"YulFunctionCall","src":"11494:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11484:6:21"}]},{"nodeType":"YulAssignment","src":"11552:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11584:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11595:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11580:3:21"},"nodeType":"YulFunctionCall","src":"11580:18:21"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"11562:17:21"},"nodeType":"YulFunctionCall","src":"11562:37:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11552:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11141:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11152:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11164:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11172:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11180:6:21","type":""}],"src":"11080:525:21"},{"body":{"nodeType":"YulBlock","src":"11851:320:21","statements":[{"nodeType":"YulAssignment","src":"11861:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11873:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11884:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11869:3:21"},"nodeType":"YulFunctionCall","src":"11869:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11861:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11904:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11919:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11935:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11940:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11931:3:21"},"nodeType":"YulFunctionCall","src":"11931:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"11944:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11927:3:21"},"nodeType":"YulFunctionCall","src":"11927:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11915:3:21"},"nodeType":"YulFunctionCall","src":"11915:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11897:6:21"},"nodeType":"YulFunctionCall","src":"11897:51:21"},"nodeType":"YulExpressionStatement","src":"11897:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11968:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11979:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11964:3:21"},"nodeType":"YulFunctionCall","src":"11964:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"11984:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11957:6:21"},"nodeType":"YulFunctionCall","src":"11957:34:21"},"nodeType":"YulExpressionStatement","src":"11957:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12011:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12022:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12007:3:21"},"nodeType":"YulFunctionCall","src":"12007:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"12027:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12000:6:21"},"nodeType":"YulFunctionCall","src":"12000:34:21"},"nodeType":"YulExpressionStatement","src":"12000:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12054:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12065:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12050:3:21"},"nodeType":"YulFunctionCall","src":"12050:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"12070:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12043:6:21"},"nodeType":"YulFunctionCall","src":"12043:34:21"},"nodeType":"YulExpressionStatement","src":"12043:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12097:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12108:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12093:3:21"},"nodeType":"YulFunctionCall","src":"12093:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"12114:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12086:6:21"},"nodeType":"YulFunctionCall","src":"12086:35:21"},"nodeType":"YulExpressionStatement","src":"12086:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12141:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12152:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12137:3:21"},"nodeType":"YulFunctionCall","src":"12137:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"12158:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12130:6:21"},"nodeType":"YulFunctionCall","src":"12130:35:21"},"nodeType":"YulExpressionStatement","src":"12130:35:21"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__to_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11780:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11791:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11799:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11807:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11815:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11823:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11831:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11842:4:21","type":""}],"src":"11610:561:21"},{"body":{"nodeType":"YulBlock","src":"12262:227:21","statements":[{"body":{"nodeType":"YulBlock","src":"12308:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12310:6:21"},"nodeType":"YulFunctionCall","src":"12310:12:21"},"nodeType":"YulExpressionStatement","src":"12310:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12283:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12292:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12279:3:21"},"nodeType":"YulFunctionCall","src":"12279:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12304:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12275:3:21"},"nodeType":"YulFunctionCall","src":"12275:32:21"},"nodeType":"YulIf","src":"12272:52:21"},{"nodeType":"YulVariableDeclaration","src":"12333:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12346:12:21"},"nodeType":"YulFunctionCall","src":"12346:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12337:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12402:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"12378:23:21"},"nodeType":"YulFunctionCall","src":"12378:30:21"},"nodeType":"YulExpressionStatement","src":"12378:30:21"},{"nodeType":"YulAssignment","src":"12417:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"12427:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12417:6:21"}]},{"nodeType":"YulAssignment","src":"12441:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12468:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12479:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12464:3:21"},"nodeType":"YulFunctionCall","src":"12464:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12451:12:21"},"nodeType":"YulFunctionCall","src":"12451:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12441:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12220:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12231:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12243:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12251:6:21","type":""}],"src":"12176:313:21"},{"body":{"nodeType":"YulBlock","src":"12579:299:21","statements":[{"body":{"nodeType":"YulBlock","src":"12625:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12634:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12637:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12627:6:21"},"nodeType":"YulFunctionCall","src":"12627:12:21"},"nodeType":"YulExpressionStatement","src":"12627:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12600:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12609:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12596:3:21"},"nodeType":"YulFunctionCall","src":"12596:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12621:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12592:3:21"},"nodeType":"YulFunctionCall","src":"12592:32:21"},"nodeType":"YulIf","src":"12589:52:21"},{"nodeType":"YulVariableDeclaration","src":"12650:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12676:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12663:12:21"},"nodeType":"YulFunctionCall","src":"12663:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12654:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12719:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"12695:23:21"},"nodeType":"YulFunctionCall","src":"12695:30:21"},"nodeType":"YulExpressionStatement","src":"12695:30:21"},{"nodeType":"YulAssignment","src":"12734:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"12744:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12734:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"12758:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12790:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12801:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12786:3:21"},"nodeType":"YulFunctionCall","src":"12786:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12773:12:21"},"nodeType":"YulFunctionCall","src":"12773:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12762:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12838:7:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"12814:23:21"},"nodeType":"YulFunctionCall","src":"12814:32:21"},"nodeType":"YulExpressionStatement","src":"12814:32:21"},{"nodeType":"YulAssignment","src":"12855:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"12865:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12855:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12537:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12548:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12560:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12568:6:21","type":""}],"src":"12494:384:21"},{"body":{"nodeType":"YulBlock","src":"12970:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"13016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13018:6:21"},"nodeType":"YulFunctionCall","src":"13018:12:21"},"nodeType":"YulExpressionStatement","src":"13018:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12991:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13000:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12987:3:21"},"nodeType":"YulFunctionCall","src":"12987:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13012:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12983:3:21"},"nodeType":"YulFunctionCall","src":"12983:32:21"},"nodeType":"YulIf","src":"12980:52:21"},{"nodeType":"YulAssignment","src":"13041:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13064:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13051:12:21"},"nodeType":"YulFunctionCall","src":"13051:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13041:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"13083:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13113:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13124:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13109:3:21"},"nodeType":"YulFunctionCall","src":"13109:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13096:12:21"},"nodeType":"YulFunctionCall","src":"13096:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13087:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13162:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13137:24:21"},"nodeType":"YulFunctionCall","src":"13137:31:21"},"nodeType":"YulExpressionStatement","src":"13137:31:21"},{"nodeType":"YulAssignment","src":"13177:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"13187:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13177:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12928:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12939:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12951:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12959:6:21","type":""}],"src":"12883:315:21"},{"body":{"nodeType":"YulBlock","src":"13287:298:21","statements":[{"body":{"nodeType":"YulBlock","src":"13333:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13342:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13345:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13335:6:21"},"nodeType":"YulFunctionCall","src":"13335:12:21"},"nodeType":"YulExpressionStatement","src":"13335:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13308:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13317:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13304:3:21"},"nodeType":"YulFunctionCall","src":"13304:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13329:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13300:3:21"},"nodeType":"YulFunctionCall","src":"13300:32:21"},"nodeType":"YulIf","src":"13297:52:21"},{"nodeType":"YulVariableDeclaration","src":"13358:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13384:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13371:12:21"},"nodeType":"YulFunctionCall","src":"13371:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13362:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13428:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13403:24:21"},"nodeType":"YulFunctionCall","src":"13403:31:21"},"nodeType":"YulExpressionStatement","src":"13403:31:21"},{"nodeType":"YulAssignment","src":"13443:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"13453:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13443:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"13467:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13499:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13510:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13495:3:21"},"nodeType":"YulFunctionCall","src":"13495:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13482:12:21"},"nodeType":"YulFunctionCall","src":"13482:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"13471:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"13545:7:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"13523:21:21"},"nodeType":"YulFunctionCall","src":"13523:30:21"},"nodeType":"YulExpressionStatement","src":"13523:30:21"},{"nodeType":"YulAssignment","src":"13562:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"13572:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13562:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13245:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13256:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13268:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13276:6:21","type":""}],"src":"13203:382:21"},{"body":{"nodeType":"YulBlock","src":"13699:368:21","statements":[{"body":{"nodeType":"YulBlock","src":"13745:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13754:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13757:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13747:6:21"},"nodeType":"YulFunctionCall","src":"13747:12:21"},"nodeType":"YulExpressionStatement","src":"13747:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13720:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13729:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13716:3:21"},"nodeType":"YulFunctionCall","src":"13716:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13741:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13712:3:21"},"nodeType":"YulFunctionCall","src":"13712:32:21"},"nodeType":"YulIf","src":"13709:52:21"},{"nodeType":"YulVariableDeclaration","src":"13770:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13797:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13784:12:21"},"nodeType":"YulFunctionCall","src":"13784:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13774:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"13850:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13859:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13862:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13852:6:21"},"nodeType":"YulFunctionCall","src":"13852:12:21"},"nodeType":"YulExpressionStatement","src":"13852:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13822:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13838:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"13842:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13834:3:21"},"nodeType":"YulFunctionCall","src":"13834:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"13846:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13830:3:21"},"nodeType":"YulFunctionCall","src":"13830:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13819:2:21"},"nodeType":"YulFunctionCall","src":"13819:30:21"},"nodeType":"YulIf","src":"13816:50:21"},{"nodeType":"YulAssignment","src":"13875:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13918:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13929:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13914:3:21"},"nodeType":"YulFunctionCall","src":"13914:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13938:7:21"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"13885:28:21"},"nodeType":"YulFunctionCall","src":"13885:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13875:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"13955:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13996:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13981:3:21"},"nodeType":"YulFunctionCall","src":"13981:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13968:12:21"},"nodeType":"YulFunctionCall","src":"13968:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13959:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14031:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"14009:21:21"},"nodeType":"YulFunctionCall","src":"14009:28:21"},"nodeType":"YulExpressionStatement","src":"14009:28:21"},{"nodeType":"YulAssignment","src":"14046:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"14056:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14046:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13657:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13668:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13680:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13688:6:21","type":""}],"src":"13590:477:21"},{"body":{"nodeType":"YulBlock","src":"14213:709:21","statements":[{"body":{"nodeType":"YulBlock","src":"14259:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14268:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14261:6:21"},"nodeType":"YulFunctionCall","src":"14261:12:21"},"nodeType":"YulExpressionStatement","src":"14261:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14234:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14243:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14230:3:21"},"nodeType":"YulFunctionCall","src":"14230:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14255:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14226:3:21"},"nodeType":"YulFunctionCall","src":"14226:32:21"},"nodeType":"YulIf","src":"14223:52:21"},{"nodeType":"YulVariableDeclaration","src":"14284:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14310:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14297:12:21"},"nodeType":"YulFunctionCall","src":"14297:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14288:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14353:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"14329:23:21"},"nodeType":"YulFunctionCall","src":"14329:30:21"},"nodeType":"YulExpressionStatement","src":"14329:30:21"},{"nodeType":"YulAssignment","src":"14368:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"14378:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14368:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"14392:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14423:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14434:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14419:3:21"},"nodeType":"YulFunctionCall","src":"14419:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14406:12:21"},"nodeType":"YulFunctionCall","src":"14406:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14396:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14447:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14465:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"14469:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14461:3:21"},"nodeType":"YulFunctionCall","src":"14461:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"14473:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14457:3:21"},"nodeType":"YulFunctionCall","src":"14457:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14451:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14502:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14511:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14514:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14504:6:21"},"nodeType":"YulFunctionCall","src":"14504:12:21"},"nodeType":"YulExpressionStatement","src":"14504:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14490:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"14498:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14487:2:21"},"nodeType":"YulFunctionCall","src":"14487:14:21"},"nodeType":"YulIf","src":"14484:34:21"},{"nodeType":"YulVariableDeclaration","src":"14527:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14583:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14594:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14579:3:21"},"nodeType":"YulFunctionCall","src":"14579:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14603:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"14553:25:21"},"nodeType":"YulFunctionCall","src":"14553:58:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"14531:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"14541:8:21","type":""}]},{"nodeType":"YulAssignment","src":"14620:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"14630:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14620:6:21"}]},{"nodeType":"YulAssignment","src":"14647:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"14657:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14647:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"14674:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14718:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14703:3:21"},"nodeType":"YulFunctionCall","src":"14703:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14690:12:21"},"nodeType":"YulFunctionCall","src":"14690:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"14678:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14751:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14760:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14763:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14753:6:21"},"nodeType":"YulFunctionCall","src":"14753:12:21"},"nodeType":"YulExpressionStatement","src":"14753:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"14737:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"14747:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14734:2:21"},"nodeType":"YulFunctionCall","src":"14734:16:21"},"nodeType":"YulIf","src":"14731:36:21"},{"nodeType":"YulVariableDeclaration","src":"14776:86:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14832:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"14843:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14828:3:21"},"nodeType":"YulFunctionCall","src":"14828:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14854:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"14802:25:21"},"nodeType":"YulFunctionCall","src":"14802:60:21"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"14780:8:21","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"14790:8:21","type":""}]},{"nodeType":"YulAssignment","src":"14871:18:21","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"14881:8:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14871:6:21"}]},{"nodeType":"YulAssignment","src":"14898:18:21","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"14908:8:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14898:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14147:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14158:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14170:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14178:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14186:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14194:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14202:6:21","type":""}],"src":"14072:850:21"},{"body":{"nodeType":"YulBlock","src":"15023:292:21","statements":[{"body":{"nodeType":"YulBlock","src":"15069:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15078:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15081:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15071:6:21"},"nodeType":"YulFunctionCall","src":"15071:12:21"},"nodeType":"YulExpressionStatement","src":"15071:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15044:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15053:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15040:3:21"},"nodeType":"YulFunctionCall","src":"15040:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"15065:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15036:3:21"},"nodeType":"YulFunctionCall","src":"15036:32:21"},"nodeType":"YulIf","src":"15033:52:21"},{"nodeType":"YulAssignment","src":"15094:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15117:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15104:12:21"},"nodeType":"YulFunctionCall","src":"15104:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15094:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"15136:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15167:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15178:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15163:3:21"},"nodeType":"YulFunctionCall","src":"15163:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15150:12:21"},"nodeType":"YulFunctionCall","src":"15150:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15140:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15225:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15234:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15237:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15227:6:21"},"nodeType":"YulFunctionCall","src":"15227:12:21"},"nodeType":"YulExpressionStatement","src":"15227:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15197:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15213:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"15217:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15209:3:21"},"nodeType":"YulFunctionCall","src":"15209:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"15221:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15205:3:21"},"nodeType":"YulFunctionCall","src":"15205:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15194:2:21"},"nodeType":"YulFunctionCall","src":"15194:30:21"},"nodeType":"YulIf","src":"15191:50:21"},{"nodeType":"YulAssignment","src":"15250:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15281:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15292:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15277:3:21"},"nodeType":"YulFunctionCall","src":"15277:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15301:7:21"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"15260:16:21"},"nodeType":"YulFunctionCall","src":"15260:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15250:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14981:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14992:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15004:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15012:6:21","type":""}],"src":"14927:388:21"},{"body":{"nodeType":"YulBlock","src":"15448:102:21","statements":[{"nodeType":"YulAssignment","src":"15458:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15470:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15481:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15466:3:21"},"nodeType":"YulFunctionCall","src":"15466:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15458:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15500:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15515:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15531:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15536:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15527:3:21"},"nodeType":"YulFunctionCall","src":"15527:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"15540:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15523:3:21"},"nodeType":"YulFunctionCall","src":"15523:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15511:3:21"},"nodeType":"YulFunctionCall","src":"15511:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15493:6:21"},"nodeType":"YulFunctionCall","src":"15493:51:21"},"nodeType":"YulExpressionStatement","src":"15493:51:21"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$3958__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15417:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15428:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15439:4:21","type":""}],"src":"15320:230:21"},{"body":{"nodeType":"YulBlock","src":"15625:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"15671:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15680:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15683:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15673:6:21"},"nodeType":"YulFunctionCall","src":"15673:12:21"},"nodeType":"YulExpressionStatement","src":"15673:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15646:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15655:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15642:3:21"},"nodeType":"YulFunctionCall","src":"15642:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"15667:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15638:3:21"},"nodeType":"YulFunctionCall","src":"15638:32:21"},"nodeType":"YulIf","src":"15635:52:21"},{"nodeType":"YulAssignment","src":"15696:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15719:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15706:12:21"},"nodeType":"YulFunctionCall","src":"15706:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15696:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15591:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15602:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15614:6:21","type":""}],"src":"15555:180:21"},{"body":{"nodeType":"YulBlock","src":"15878:612:21","statements":[{"body":{"nodeType":"YulBlock","src":"15925:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15934:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15937:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15927:6:21"},"nodeType":"YulFunctionCall","src":"15927:12:21"},"nodeType":"YulExpressionStatement","src":"15927:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15899:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15908:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15895:3:21"},"nodeType":"YulFunctionCall","src":"15895:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"15920:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15891:3:21"},"nodeType":"YulFunctionCall","src":"15891:33:21"},"nodeType":"YulIf","src":"15888:53:21"},{"nodeType":"YulVariableDeclaration","src":"15950:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15976:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15963:12:21"},"nodeType":"YulFunctionCall","src":"15963:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15954:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16019:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"15995:23:21"},"nodeType":"YulFunctionCall","src":"15995:30:21"},"nodeType":"YulExpressionStatement","src":"15995:30:21"},{"nodeType":"YulAssignment","src":"16034:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"16044:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16034:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"16058:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16090:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16101:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16086:3:21"},"nodeType":"YulFunctionCall","src":"16086:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16073:12:21"},"nodeType":"YulFunctionCall","src":"16073:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"16062:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"16138:7:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"16114:23:21"},"nodeType":"YulFunctionCall","src":"16114:32:21"},"nodeType":"YulExpressionStatement","src":"16114:32:21"},{"nodeType":"YulAssignment","src":"16155:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"16165:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16155:6:21"}]},{"nodeType":"YulAssignment","src":"16181:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16208:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16219:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16204:3:21"},"nodeType":"YulFunctionCall","src":"16204:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16191:12:21"},"nodeType":"YulFunctionCall","src":"16191:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16181:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"16232:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16263:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16274:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16259:3:21"},"nodeType":"YulFunctionCall","src":"16259:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16246:12:21"},"nodeType":"YulFunctionCall","src":"16246:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16236:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16321:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16330:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16333:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16323:6:21"},"nodeType":"YulFunctionCall","src":"16323:12:21"},"nodeType":"YulExpressionStatement","src":"16323:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16293:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16309:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"16313:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16305:3:21"},"nodeType":"YulFunctionCall","src":"16305:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"16317:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16301:3:21"},"nodeType":"YulFunctionCall","src":"16301:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16290:2:21"},"nodeType":"YulFunctionCall","src":"16290:30:21"},"nodeType":"YulIf","src":"16287:50:21"},{"nodeType":"YulVariableDeclaration","src":"16346:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16402:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"16413:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16398:3:21"},"nodeType":"YulFunctionCall","src":"16398:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16422:7:21"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"16372:25:21"},"nodeType":"YulFunctionCall","src":"16372:58:21"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"16350:8:21","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"16360:8:21","type":""}]},{"nodeType":"YulAssignment","src":"16439:18:21","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"16449:8:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16439:6:21"}]},{"nodeType":"YulAssignment","src":"16466:18:21","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"16476:8:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"16466:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15812:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15823:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15835:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15843:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15851:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15859:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15867:6:21","type":""}],"src":"15740:750:21"},{"body":{"nodeType":"YulBlock","src":"16556:400:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16566:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16586:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16580:5:21"},"nodeType":"YulFunctionCall","src":"16580:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16570:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16608:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16613:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16601:6:21"},"nodeType":"YulFunctionCall","src":"16601:19:21"},"nodeType":"YulExpressionStatement","src":"16601:19:21"},{"nodeType":"YulVariableDeclaration","src":"16629:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16639:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16633:2:21","type":""}]},{"nodeType":"YulAssignment","src":"16652:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16663:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"16668:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16659:3:21"},"nodeType":"YulFunctionCall","src":"16659:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16652:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"16680:28:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16698:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"16705:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16694:3:21"},"nodeType":"YulFunctionCall","src":"16694:14:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16684:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16717:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16726:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16721:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16785:146:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16806:3:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16821:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16815:5:21"},"nodeType":"YulFunctionCall","src":"16815:13:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16838:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16843:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16834:3:21"},"nodeType":"YulFunctionCall","src":"16834:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"16847:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16830:3:21"},"nodeType":"YulFunctionCall","src":"16830:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16811:3:21"},"nodeType":"YulFunctionCall","src":"16811:39:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16799:6:21"},"nodeType":"YulFunctionCall","src":"16799:52:21"},"nodeType":"YulExpressionStatement","src":"16799:52:21"},{"nodeType":"YulAssignment","src":"16864:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16875:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"16880:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16871:3:21"},"nodeType":"YulFunctionCall","src":"16871:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16864:3:21"}]},{"nodeType":"YulAssignment","src":"16896:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16910:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"16918:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16906:3:21"},"nodeType":"YulFunctionCall","src":"16906:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16896:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16747:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"16750:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16744:2:21"},"nodeType":"YulFunctionCall","src":"16744:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16758:18:21","statements":[{"nodeType":"YulAssignment","src":"16760:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16769:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"16772:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16765:3:21"},"nodeType":"YulFunctionCall","src":"16765:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16760:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"16740:3:21","statements":[]},"src":"16736:195:21"},{"nodeType":"YulAssignment","src":"16940:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"16947:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16940:3:21"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16533:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16540:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16548:3:21","type":""}],"src":"16495:461:21"},{"body":{"nodeType":"YulBlock","src":"17022:374:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17032:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17052:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17046:5:21"},"nodeType":"YulFunctionCall","src":"17046:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17036:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17074:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17079:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17067:6:21"},"nodeType":"YulFunctionCall","src":"17067:19:21"},"nodeType":"YulExpressionStatement","src":"17067:19:21"},{"nodeType":"YulVariableDeclaration","src":"17095:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17105:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17099:2:21","type":""}]},{"nodeType":"YulAssignment","src":"17118:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17129:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"17134:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17125:3:21"},"nodeType":"YulFunctionCall","src":"17125:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17118:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"17146:28:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17164:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"17171:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17160:3:21"},"nodeType":"YulFunctionCall","src":"17160:14:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"17150:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17183:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17192:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17187:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"17251:120:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17272:3:21"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17283:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17277:5:21"},"nodeType":"YulFunctionCall","src":"17277:13:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17265:6:21"},"nodeType":"YulFunctionCall","src":"17265:26:21"},"nodeType":"YulExpressionStatement","src":"17265:26:21"},{"nodeType":"YulAssignment","src":"17304:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17315:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"17320:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17311:3:21"},"nodeType":"YulFunctionCall","src":"17311:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17304:3:21"}]},{"nodeType":"YulAssignment","src":"17336:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17350:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"17358:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17346:3:21"},"nodeType":"YulFunctionCall","src":"17346:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17336:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17213:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"17216:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17210:2:21"},"nodeType":"YulFunctionCall","src":"17210:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17224:18:21","statements":[{"nodeType":"YulAssignment","src":"17226:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17235:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"17238:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17231:3:21"},"nodeType":"YulFunctionCall","src":"17231:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17226:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"17206:3:21","statements":[]},"src":"17202:169:21"},{"nodeType":"YulAssignment","src":"17380:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"17387:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17380:3:21"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16999:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17006:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17014:3:21","type":""}],"src":"16961:435:21"},{"body":{"nodeType":"YulBlock","src":"17630:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17647:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17658:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17640:6:21"},"nodeType":"YulFunctionCall","src":"17640:21:21"},"nodeType":"YulExpressionStatement","src":"17640:21:21"},{"nodeType":"YulVariableDeclaration","src":"17670:70:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17713:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17736:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17721:3:21"},"nodeType":"YulFunctionCall","src":"17721:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"17684:28:21"},"nodeType":"YulFunctionCall","src":"17684:56:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"17674:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17760:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17756:3:21"},"nodeType":"YulFunctionCall","src":"17756:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"17780:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17788:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17776:3:21"},"nodeType":"YulFunctionCall","src":"17776:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17749:6:21"},"nodeType":"YulFunctionCall","src":"17749:50:21"},"nodeType":"YulExpressionStatement","src":"17749:50:21"},{"nodeType":"YulAssignment","src":"17808:52:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17845:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"17853:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"17816:28:21"},"nodeType":"YulFunctionCall","src":"17816:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17808:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17591:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17602:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17610:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17621:4:21","type":""}],"src":"17401:465:21"},{"body":{"nodeType":"YulBlock","src":"17973:350:21","statements":[{"body":{"nodeType":"YulBlock","src":"18019:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18028:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18031:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18021:6:21"},"nodeType":"YulFunctionCall","src":"18021:12:21"},"nodeType":"YulExpressionStatement","src":"18021:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17994:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18003:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17990:3:21"},"nodeType":"YulFunctionCall","src":"17990:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18015:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17986:3:21"},"nodeType":"YulFunctionCall","src":"17986:32:21"},"nodeType":"YulIf","src":"17983:52:21"},{"nodeType":"YulVariableDeclaration","src":"18044:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18070:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18057:12:21"},"nodeType":"YulFunctionCall","src":"18057:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18048:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18113:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"18089:23:21"},"nodeType":"YulFunctionCall","src":"18089:30:21"},"nodeType":"YulExpressionStatement","src":"18089:30:21"},{"nodeType":"YulAssignment","src":"18128:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"18138:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18128:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"18152:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18184:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18195:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18180:3:21"},"nodeType":"YulFunctionCall","src":"18180:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18167:12:21"},"nodeType":"YulFunctionCall","src":"18167:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"18156:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"18232:7:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"18208:23:21"},"nodeType":"YulFunctionCall","src":"18208:32:21"},"nodeType":"YulExpressionStatement","src":"18208:32:21"},{"nodeType":"YulAssignment","src":"18249:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"18259:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18249:6:21"}]},{"nodeType":"YulAssignment","src":"18275:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18302:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18313:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18298:3:21"},"nodeType":"YulFunctionCall","src":"18298:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18285:12:21"},"nodeType":"YulFunctionCall","src":"18285:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18275:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17923:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17934:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17946:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17954:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17962:6:21","type":""}],"src":"17871:452:21"},{"body":{"nodeType":"YulBlock","src":"18447:475:21","statements":[{"body":{"nodeType":"YulBlock","src":"18494:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18503:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18506:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18496:6:21"},"nodeType":"YulFunctionCall","src":"18496:12:21"},"nodeType":"YulExpressionStatement","src":"18496:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18468:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18477:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18464:3:21"},"nodeType":"YulFunctionCall","src":"18464:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18489:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18460:3:21"},"nodeType":"YulFunctionCall","src":"18460:33:21"},"nodeType":"YulIf","src":"18457:53:21"},{"nodeType":"YulVariableDeclaration","src":"18519:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18545:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18532:12:21"},"nodeType":"YulFunctionCall","src":"18532:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"18523:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18588:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"18564:23:21"},"nodeType":"YulFunctionCall","src":"18564:30:21"},"nodeType":"YulExpressionStatement","src":"18564:30:21"},{"nodeType":"YulAssignment","src":"18603:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"18613:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18603:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"18627:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18659:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18670:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18655:3:21"},"nodeType":"YulFunctionCall","src":"18655:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18642:12:21"},"nodeType":"YulFunctionCall","src":"18642:32:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"18631:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"18707:7:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"18683:23:21"},"nodeType":"YulFunctionCall","src":"18683:32:21"},"nodeType":"YulExpressionStatement","src":"18683:32:21"},{"nodeType":"YulAssignment","src":"18724:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"18734:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18724:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"18750:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18782:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18793:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18778:3:21"},"nodeType":"YulFunctionCall","src":"18778:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18765:12:21"},"nodeType":"YulFunctionCall","src":"18765:32:21"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"18754:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"18831:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"18806:24:21"},"nodeType":"YulFunctionCall","src":"18806:33:21"},"nodeType":"YulExpressionStatement","src":"18806:33:21"},{"nodeType":"YulAssignment","src":"18848:17:21","value":{"name":"value_2","nodeType":"YulIdentifier","src":"18858:7:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18848:6:21"}]},{"nodeType":"YulAssignment","src":"18874:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18901:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18912:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18897:3:21"},"nodeType":"YulFunctionCall","src":"18897:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18884:12:21"},"nodeType":"YulFunctionCall","src":"18884:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18874:6:21"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18389:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18400:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18412:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18420:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18428:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18436:6:21","type":""}],"src":"18328:594:21"},{"body":{"nodeType":"YulBlock","src":"19240:394:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19257:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19272:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19288:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19293:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19284:3:21"},"nodeType":"YulFunctionCall","src":"19284:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"19297:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19280:3:21"},"nodeType":"YulFunctionCall","src":"19280:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19268:3:21"},"nodeType":"YulFunctionCall","src":"19268:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19250:6:21"},"nodeType":"YulFunctionCall","src":"19250:51:21"},"nodeType":"YulExpressionStatement","src":"19250:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19321:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19332:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19317:3:21"},"nodeType":"YulFunctionCall","src":"19317:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"19337:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19310:6:21"},"nodeType":"YulFunctionCall","src":"19310:34:21"},"nodeType":"YulExpressionStatement","src":"19310:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19375:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19360:3:21"},"nodeType":"YulFunctionCall","src":"19360:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"19380:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19353:6:21"},"nodeType":"YulFunctionCall","src":"19353:31:21"},"nodeType":"YulExpressionStatement","src":"19353:31:21"},{"nodeType":"YulVariableDeclaration","src":"19393:71:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19436:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19448:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19459:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19444:3:21"},"nodeType":"YulFunctionCall","src":"19444:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"19407:28:21"},"nodeType":"YulFunctionCall","src":"19407:57:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19397:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19484:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19495:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19480:3:21"},"nodeType":"YulFunctionCall","src":"19480:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"19504:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19512:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19500:3:21"},"nodeType":"YulFunctionCall","src":"19500:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19473:6:21"},"nodeType":"YulFunctionCall","src":"19473:50:21"},"nodeType":"YulExpressionStatement","src":"19473:50:21"},{"nodeType":"YulAssignment","src":"19532:52:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19569:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"19577:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"19540:28:21"},"nodeType":"YulFunctionCall","src":"19540:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19532:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19604:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19615:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19600:3:21"},"nodeType":"YulFunctionCall","src":"19600:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"19621:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19593:6:21"},"nodeType":"YulFunctionCall","src":"19593:35:21"},"nodeType":"YulExpressionStatement","src":"19593:35:21"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_address_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19177:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19188:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19196:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19204:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19212:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19220:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19231:4:21","type":""}],"src":"18927:707:21"},{"body":{"nodeType":"YulBlock","src":"19813:180:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19841:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19823:6:21"},"nodeType":"YulFunctionCall","src":"19823:21:21"},"nodeType":"YulExpressionStatement","src":"19823:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19864:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19875:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19860:3:21"},"nodeType":"YulFunctionCall","src":"19860:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"19880:2:21","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19853:6:21"},"nodeType":"YulFunctionCall","src":"19853:30:21"},"nodeType":"YulExpressionStatement","src":"19853:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19903:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19914:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19899:3:21"},"nodeType":"YulFunctionCall","src":"19899:18:21"},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19919:32:21","type":"","value":"LzApp: invalid endpoint caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19892:6:21"},"nodeType":"YulFunctionCall","src":"19892:60:21"},"nodeType":"YulExpressionStatement","src":"19892:60:21"},{"nodeType":"YulAssignment","src":"19961:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19973:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19984:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19969:3:21"},"nodeType":"YulFunctionCall","src":"19969:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19961:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19790:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19804:4:21","type":""}],"src":"19639:354:21"},{"body":{"nodeType":"YulBlock","src":"20053:325:21","statements":[{"nodeType":"YulAssignment","src":"20063:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20077:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"20080:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20073:3:21"},"nodeType":"YulFunctionCall","src":"20073:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20063:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"20094:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20124:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"20130:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20120:3:21"},"nodeType":"YulFunctionCall","src":"20120:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20098:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20171:31:21","statements":[{"nodeType":"YulAssignment","src":"20173:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20187:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20195:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20183:3:21"},"nodeType":"YulFunctionCall","src":"20183:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20173:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20151:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20144:6:21"},"nodeType":"YulFunctionCall","src":"20144:26:21"},"nodeType":"YulIf","src":"20141:61:21"},{"body":{"nodeType":"YulBlock","src":"20261:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20282:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20289:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20294:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20285:3:21"},"nodeType":"YulFunctionCall","src":"20285:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20275:6:21"},"nodeType":"YulFunctionCall","src":"20275:31:21"},"nodeType":"YulExpressionStatement","src":"20275:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20326:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20329:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20319:6:21"},"nodeType":"YulFunctionCall","src":"20319:15:21"},"nodeType":"YulExpressionStatement","src":"20319:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20354:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20357:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20347:6:21"},"nodeType":"YulFunctionCall","src":"20347:15:21"},"nodeType":"YulExpressionStatement","src":"20347:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20217:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20240:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20248:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20237:2:21"},"nodeType":"YulFunctionCall","src":"20237:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20214:2:21"},"nodeType":"YulFunctionCall","src":"20214:38:21"},"nodeType":"YulIf","src":"20211:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20033:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20042:6:21","type":""}],"src":"19998:380:21"},{"body":{"nodeType":"YulBlock","src":"20530:124:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20553:3:21"},{"name":"value0","nodeType":"YulIdentifier","src":"20558:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"20566:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20540:12:21"},"nodeType":"YulFunctionCall","src":"20540:33:21"},"nodeType":"YulExpressionStatement","src":"20540:33:21"},{"nodeType":"YulVariableDeclaration","src":"20582:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20596:3:21"},{"name":"value1","nodeType":"YulIdentifier","src":"20601:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20592:3:21"},"nodeType":"YulFunctionCall","src":"20592:16:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20586:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"20624:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"20628:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20617:6:21"},"nodeType":"YulFunctionCall","src":"20617:13:21"},"nodeType":"YulExpressionStatement","src":"20617:13:21"},{"nodeType":"YulAssignment","src":"20639:9:21","value":{"name":"_1","nodeType":"YulIdentifier","src":"20646:2:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20639:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20498:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20503:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20511:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20522:3:21","type":""}],"src":"20383:271:21"},{"body":{"nodeType":"YulBlock","src":"20833:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20850:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20861:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20843:6:21"},"nodeType":"YulFunctionCall","src":"20843:21:21"},"nodeType":"YulExpressionStatement","src":"20843:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20884:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20895:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20880:3:21"},"nodeType":"YulFunctionCall","src":"20880:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"20900:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20873:6:21"},"nodeType":"YulFunctionCall","src":"20873:30:21"},"nodeType":"YulExpressionStatement","src":"20873:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20934:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20919:3:21"},"nodeType":"YulFunctionCall","src":"20919:18:21"},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f","kind":"string","nodeType":"YulLiteral","src":"20939:34:21","type":"","value":"LzApp: invalid source sending co"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20912:6:21"},"nodeType":"YulFunctionCall","src":"20912:62:21"},"nodeType":"YulExpressionStatement","src":"20912:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21005:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20990:3:21"},"nodeType":"YulFunctionCall","src":"20990:18:21"},{"hexValue":"6e7472616374","kind":"string","nodeType":"YulLiteral","src":"21010:8:21","type":"","value":"ntract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20983:6:21"},"nodeType":"YulFunctionCall","src":"20983:36:21"},"nodeType":"YulExpressionStatement","src":"20983:36:21"},{"nodeType":"YulAssignment","src":"21028:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21040:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21051:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21036:3:21"},"nodeType":"YulFunctionCall","src":"21036:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21028:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20810:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20824:4:21","type":""}],"src":"20659:402:21"},{"body":{"nodeType":"YulBlock","src":"21157:335:21","statements":[{"body":{"nodeType":"YulBlock","src":"21201:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21210:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21213:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21203:6:21"},"nodeType":"YulFunctionCall","src":"21203:12:21"},"nodeType":"YulExpressionStatement","src":"21203:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"21178:3:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21183:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21174:3:21"},"nodeType":"YulFunctionCall","src":"21174:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"21195:4:21","type":"","value":"0x20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21170:3:21"},"nodeType":"YulFunctionCall","src":"21170:30:21"},"nodeType":"YulIf","src":"21167:50:21"},{"nodeType":"YulVariableDeclaration","src":"21226:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21246:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21240:5:21"},"nodeType":"YulFunctionCall","src":"21240:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"21230:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21258:35:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21280:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21288:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21276:3:21"},"nodeType":"YulFunctionCall","src":"21276:17:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21262:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21368:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21370:16:21"},"nodeType":"YulFunctionCall","src":"21370:18:21"},"nodeType":"YulExpressionStatement","src":"21370:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21311:10:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21331:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"21335:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21327:3:21"},"nodeType":"YulFunctionCall","src":"21327:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"21339:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21323:3:21"},"nodeType":"YulFunctionCall","src":"21323:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21308:2:21"},"nodeType":"YulFunctionCall","src":"21308:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21347:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21359:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21344:2:21"},"nodeType":"YulFunctionCall","src":"21344:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21305:2:21"},"nodeType":"YulFunctionCall","src":"21305:62:21"},"nodeType":"YulIf","src":"21302:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21406:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21410:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21399:6:21"},"nodeType":"YulFunctionCall","src":"21399:22:21"},"nodeType":"YulExpressionStatement","src":"21399:22:21"},{"nodeType":"YulAssignment","src":"21430:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"21439:6:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21430:5:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21461:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21475:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21469:5:21"},"nodeType":"YulFunctionCall","src":"21469:16:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21454:6:21"},"nodeType":"YulFunctionCall","src":"21454:32:21"},"nodeType":"YulExpressionStatement","src":"21454:32:21"}]},"name":"abi_decode_struct_ReserveConfigurationMap_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21128:9:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"21139:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21147:5:21","type":""}],"src":"21066:426:21"},{"body":{"nodeType":"YulBlock","src":"21557:117:21","statements":[{"nodeType":"YulAssignment","src":"21567:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21582:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21576:5:21"},"nodeType":"YulFunctionCall","src":"21576:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21567:5:21"}]},{"body":{"nodeType":"YulBlock","src":"21652:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21661:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21664:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21654:6:21"},"nodeType":"YulFunctionCall","src":"21654:12:21"},"nodeType":"YulExpressionStatement","src":"21654:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21611:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21622:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21637:3:21","type":"","value":"128"},{"kind":"number","nodeType":"YulLiteral","src":"21642:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21633:3:21"},"nodeType":"YulFunctionCall","src":"21633:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"21646:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21629:3:21"},"nodeType":"YulFunctionCall","src":"21629:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21618:3:21"},"nodeType":"YulFunctionCall","src":"21618:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21608:2:21"},"nodeType":"YulFunctionCall","src":"21608:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21601:6:21"},"nodeType":"YulFunctionCall","src":"21601:50:21"},"nodeType":"YulIf","src":"21598:70:21"}]},"name":"abi_decode_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21536:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21547:5:21","type":""}],"src":"21497:177:21"},{"body":{"nodeType":"YulBlock","src":"21738:110:21","statements":[{"nodeType":"YulAssignment","src":"21748:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21763:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21757:5:21"},"nodeType":"YulFunctionCall","src":"21757:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21748:5:21"}]},{"body":{"nodeType":"YulBlock","src":"21826:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21835:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21838:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21828:6:21"},"nodeType":"YulFunctionCall","src":"21828:12:21"},"nodeType":"YulExpressionStatement","src":"21828:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21792:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21803:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21810:12:21","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21799:3:21"},"nodeType":"YulFunctionCall","src":"21799:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21789:2:21"},"nodeType":"YulFunctionCall","src":"21789:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21782:6:21"},"nodeType":"YulFunctionCall","src":"21782:43:21"},"nodeType":"YulIf","src":"21779:63:21"}]},"name":"abi_decode_uint40_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21717:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21728:5:21","type":""}],"src":"21679:169:21"},{"body":{"nodeType":"YulBlock","src":"21913:78:21","statements":[{"nodeType":"YulAssignment","src":"21923:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21938:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21932:5:21"},"nodeType":"YulFunctionCall","src":"21932:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21923:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21979:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"21954:24:21"},"nodeType":"YulFunctionCall","src":"21954:31:21"},"nodeType":"YulExpressionStatement","src":"21954:31:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21892:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21903:5:21","type":""}],"src":"21853:138:21"},{"body":{"nodeType":"YulBlock","src":"22054:102:21","statements":[{"nodeType":"YulAssignment","src":"22064:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22079:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22073:5:21"},"nodeType":"YulFunctionCall","src":"22073:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22064:5:21"}]},{"body":{"nodeType":"YulBlock","src":"22134:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22143:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22146:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22136:6:21"},"nodeType":"YulFunctionCall","src":"22136:12:21"},"nodeType":"YulExpressionStatement","src":"22136:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22108:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22119:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22126:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22115:3:21"},"nodeType":"YulFunctionCall","src":"22115:16:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22105:2:21"},"nodeType":"YulFunctionCall","src":"22105:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22098:6:21"},"nodeType":"YulFunctionCall","src":"22098:35:21"},"nodeType":"YulIf","src":"22095:55:21"}]},"name":"abi_decode_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22033:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22044:5:21","type":""}],"src":"21996:160:21"},{"body":{"nodeType":"YulBlock","src":"22270:1228:21","statements":[{"body":{"nodeType":"YulBlock","src":"22317:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22326:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22329:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22319:6:21"},"nodeType":"YulFunctionCall","src":"22319:12:21"},"nodeType":"YulExpressionStatement","src":"22319:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22291:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22300:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22287:3:21"},"nodeType":"YulFunctionCall","src":"22287:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"22312:3:21","type":"","value":"384"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22283:3:21"},"nodeType":"YulFunctionCall","src":"22283:33:21"},"nodeType":"YulIf","src":"22280:53:21"},{"nodeType":"YulVariableDeclaration","src":"22342:35:21","value":{"arguments":[],"functionName":{"name":"allocate_memory_6904","nodeType":"YulIdentifier","src":"22355:20:21"},"nodeType":"YulFunctionCall","src":"22355:22:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22346:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22393:5:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22453:9:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22464:7:21"}],"functionName":{"name":"abi_decode_struct_ReserveConfigurationMap_fromMemory","nodeType":"YulIdentifier","src":"22400:52:21"},"nodeType":"YulFunctionCall","src":"22400:72:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22386:6:21"},"nodeType":"YulFunctionCall","src":"22386:87:21"},"nodeType":"YulExpressionStatement","src":"22386:87:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22493:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22500:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22489:3:21"},"nodeType":"YulFunctionCall","src":"22489:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22539:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22550:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22535:3:21"},"nodeType":"YulFunctionCall","src":"22535:18:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"22505:29:21"},"nodeType":"YulFunctionCall","src":"22505:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22482:6:21"},"nodeType":"YulFunctionCall","src":"22482:73:21"},"nodeType":"YulExpressionStatement","src":"22482:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22575:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22582:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22571:3:21"},"nodeType":"YulFunctionCall","src":"22571:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22621:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22632:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22617:3:21"},"nodeType":"YulFunctionCall","src":"22617:18:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"22587:29:21"},"nodeType":"YulFunctionCall","src":"22587:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22564:6:21"},"nodeType":"YulFunctionCall","src":"22564:73:21"},"nodeType":"YulExpressionStatement","src":"22564:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22657:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22664:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22653:3:21"},"nodeType":"YulFunctionCall","src":"22653:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22703:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22714:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22699:3:21"},"nodeType":"YulFunctionCall","src":"22699:18:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"22669:29:21"},"nodeType":"YulFunctionCall","src":"22669:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22646:6:21"},"nodeType":"YulFunctionCall","src":"22646:73:21"},"nodeType":"YulExpressionStatement","src":"22646:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22739:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22746:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22735:3:21"},"nodeType":"YulFunctionCall","src":"22735:15:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22786:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22797:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22782:3:21"},"nodeType":"YulFunctionCall","src":"22782:19:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"22752:29:21"},"nodeType":"YulFunctionCall","src":"22752:50:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22728:6:21"},"nodeType":"YulFunctionCall","src":"22728:75:21"},"nodeType":"YulExpressionStatement","src":"22728:75:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22823:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22830:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22819:3:21"},"nodeType":"YulFunctionCall","src":"22819:15:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22870:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22881:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22866:3:21"},"nodeType":"YulFunctionCall","src":"22866:19:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"22836:29:21"},"nodeType":"YulFunctionCall","src":"22836:50:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22812:6:21"},"nodeType":"YulFunctionCall","src":"22812:75:21"},"nodeType":"YulExpressionStatement","src":"22812:75:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22907:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22914:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22903:3:21"},"nodeType":"YulFunctionCall","src":"22903:15:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22953:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22964:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22949:3:21"},"nodeType":"YulFunctionCall","src":"22949:19:21"}],"functionName":{"name":"abi_decode_uint40_fromMemory","nodeType":"YulIdentifier","src":"22920:28:21"},"nodeType":"YulFunctionCall","src":"22920:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22896:6:21"},"nodeType":"YulFunctionCall","src":"22896:74:21"},"nodeType":"YulExpressionStatement","src":"22896:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22990:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22997:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22986:3:21"},"nodeType":"YulFunctionCall","src":"22986:15:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23037:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23048:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23033:3:21"},"nodeType":"YulFunctionCall","src":"23033:19:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"23003:29:21"},"nodeType":"YulFunctionCall","src":"23003:50:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22979:6:21"},"nodeType":"YulFunctionCall","src":"22979:75:21"},"nodeType":"YulExpressionStatement","src":"22979:75:21"},{"nodeType":"YulVariableDeclaration","src":"23063:13:21","value":{"kind":"number","nodeType":"YulLiteral","src":"23073:3:21","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23067:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23096:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"23103:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23092:3:21"},"nodeType":"YulFunctionCall","src":"23092:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23142:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"23153:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23138:3:21"},"nodeType":"YulFunctionCall","src":"23138:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"23108:29:21"},"nodeType":"YulFunctionCall","src":"23108:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23085:6:21"},"nodeType":"YulFunctionCall","src":"23085:73:21"},"nodeType":"YulExpressionStatement","src":"23085:73:21"},{"nodeType":"YulVariableDeclaration","src":"23167:13:21","value":{"kind":"number","nodeType":"YulLiteral","src":"23177:3:21","type":"","value":"288"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"23171:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23200:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"23207:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23196:3:21"},"nodeType":"YulFunctionCall","src":"23196:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23246:9:21"},{"name":"_2","nodeType":"YulIdentifier","src":"23257:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23242:3:21"},"nodeType":"YulFunctionCall","src":"23242:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"23212:29:21"},"nodeType":"YulFunctionCall","src":"23212:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23189:6:21"},"nodeType":"YulFunctionCall","src":"23189:73:21"},"nodeType":"YulExpressionStatement","src":"23189:73:21"},{"nodeType":"YulVariableDeclaration","src":"23271:13:21","value":{"kind":"number","nodeType":"YulLiteral","src":"23281:3:21","type":"","value":"320"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"23275:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23304:5:21"},{"name":"_3","nodeType":"YulIdentifier","src":"23311:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23300:3:21"},"nodeType":"YulFunctionCall","src":"23300:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23350:9:21"},{"name":"_3","nodeType":"YulIdentifier","src":"23361:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23346:3:21"},"nodeType":"YulFunctionCall","src":"23346:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"23316:29:21"},"nodeType":"YulFunctionCall","src":"23316:49:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23293:6:21"},"nodeType":"YulFunctionCall","src":"23293:73:21"},"nodeType":"YulExpressionStatement","src":"23293:73:21"},{"nodeType":"YulVariableDeclaration","src":"23375:13:21","value":{"kind":"number","nodeType":"YulLiteral","src":"23385:3:21","type":"","value":"352"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"23379:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23408:5:21"},{"name":"_4","nodeType":"YulIdentifier","src":"23415:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23404:3:21"},"nodeType":"YulFunctionCall","src":"23404:14:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23452:9:21"},{"name":"_4","nodeType":"YulIdentifier","src":"23463:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23448:3:21"},"nodeType":"YulFunctionCall","src":"23448:18:21"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"23420:27:21"},"nodeType":"YulFunctionCall","src":"23420:47:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23397:6:21"},"nodeType":"YulFunctionCall","src":"23397:71:21"},"nodeType":"YulExpressionStatement","src":"23397:71:21"},{"nodeType":"YulAssignment","src":"23477:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"23487:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23477:6:21"}]}]},"name":"abi_decode_tuple_t_struct$_ReserveData_$348_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22236:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22247:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22259:6:21","type":""}],"src":"22161:1337:21"},{"body":{"nodeType":"YulBlock","src":"23569:200:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23586:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"23591:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23579:6:21"},"nodeType":"YulFunctionCall","src":"23579:19:21"},"nodeType":"YulExpressionStatement","src":"23579:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23624:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23629:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23620:3:21"},"nodeType":"YulFunctionCall","src":"23620:14:21"},{"name":"start","nodeType":"YulIdentifier","src":"23636:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"23643:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"23607:12:21"},"nodeType":"YulFunctionCall","src":"23607:43:21"},"nodeType":"YulExpressionStatement","src":"23607:43:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23674:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"23679:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23670:3:21"},"nodeType":"YulFunctionCall","src":"23670:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"23688:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23666:3:21"},"nodeType":"YulFunctionCall","src":"23666:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"23695:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23659:6:21"},"nodeType":"YulFunctionCall","src":"23659:38:21"},"nodeType":"YulExpressionStatement","src":"23659:38:21"},{"nodeType":"YulAssignment","src":"23706:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23721:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23734:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23742:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23730:3:21"},"nodeType":"YulFunctionCall","src":"23730:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23751:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23747:3:21"},"nodeType":"YulFunctionCall","src":"23747:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23726:3:21"},"nodeType":"YulFunctionCall","src":"23726:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23717:3:21"},"nodeType":"YulFunctionCall","src":"23717:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"23758:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23713:3:21"},"nodeType":"YulFunctionCall","src":"23713:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23706:3:21"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"23538:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"23545:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23553:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23561:3:21","type":""}],"src":"23503:266:21"},{"body":{"nodeType":"YulBlock","src":"23929:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23946:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23961:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23969:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23957:3:21"},"nodeType":"YulFunctionCall","src":"23957:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23939:6:21"},"nodeType":"YulFunctionCall","src":"23939:38:21"},"nodeType":"YulExpressionStatement","src":"23939:38:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23997:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24008:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23993:3:21"},"nodeType":"YulFunctionCall","src":"23993:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"24013:2:21","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23986:6:21"},"nodeType":"YulFunctionCall","src":"23986:30:21"},"nodeType":"YulExpressionStatement","src":"23986:30:21"},{"nodeType":"YulAssignment","src":"24025:69:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24059:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"24067:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24079:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24090:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24075:3:21"},"nodeType":"YulFunctionCall","src":"24075:18:21"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"24033:25:21"},"nodeType":"YulFunctionCall","src":"24033:61:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24025:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23882:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23893:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23901:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23909:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23920:4:21","type":""}],"src":"23774:326:21"},{"body":{"nodeType":"YulBlock","src":"24162:75:21","statements":[{"nodeType":"YulAssignment","src":"24172:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24187:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24181:5:21"},"nodeType":"YulFunctionCall","src":"24181:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24172:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24225:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"24203:21:21"},"nodeType":"YulFunctionCall","src":"24203:28:21"},"nodeType":"YulExpressionStatement","src":"24203:28:21"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24141:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24152:5:21","type":""}],"src":"24105:132:21"},{"body":{"nodeType":"YulBlock","src":"24320:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"24366:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24375:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24378:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24368:6:21"},"nodeType":"YulFunctionCall","src":"24368:12:21"},"nodeType":"YulExpressionStatement","src":"24368:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24341:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24350:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24337:3:21"},"nodeType":"YulFunctionCall","src":"24337:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"24362:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24333:3:21"},"nodeType":"YulFunctionCall","src":"24333:32:21"},"nodeType":"YulIf","src":"24330:52:21"},{"nodeType":"YulVariableDeclaration","src":"24391:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24410:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24404:5:21"},"nodeType":"YulFunctionCall","src":"24404:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"24395:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24451:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"24429:21:21"},"nodeType":"YulFunctionCall","src":"24429:28:21"},"nodeType":"YulExpressionStatement","src":"24429:28:21"},{"nodeType":"YulAssignment","src":"24466:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"24476:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24466:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24286:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24297:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24309:6:21","type":""}],"src":"24242:245:21"},{"body":{"nodeType":"YulBlock","src":"24666:156:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24683:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24694:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24676:6:21"},"nodeType":"YulFunctionCall","src":"24676:21:21"},"nodeType":"YulExpressionStatement","src":"24676:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24717:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24728:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24713:3:21"},"nodeType":"YulFunctionCall","src":"24713:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"24733:1:21","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24706:6:21"},"nodeType":"YulFunctionCall","src":"24706:29:21"},"nodeType":"YulExpressionStatement","src":"24706:29:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24755:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24766:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24751:3:21"},"nodeType":"YulFunctionCall","src":"24751:18:21"},{"hexValue":"636c6f73696e67","kind":"string","nodeType":"YulLiteral","src":"24771:9:21","type":"","value":"closing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24744:6:21"},"nodeType":"YulFunctionCall","src":"24744:37:21"},"nodeType":"YulExpressionStatement","src":"24744:37:21"},{"nodeType":"YulAssignment","src":"24790:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24802:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24813:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24798:3:21"},"nodeType":"YulFunctionCall","src":"24798:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24790:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24643:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24657:4:21","type":""}],"src":"24492:330:21"},{"body":{"nodeType":"YulBlock","src":"25001:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25018:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25029:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25011:6:21"},"nodeType":"YulFunctionCall","src":"25011:21:21"},"nodeType":"YulExpressionStatement","src":"25011:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25052:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25063:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25048:3:21"},"nodeType":"YulFunctionCall","src":"25048:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"25068:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25041:6:21"},"nodeType":"YulFunctionCall","src":"25041:30:21"},"nodeType":"YulExpressionStatement","src":"25041:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25091:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25102:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25087:3:21"},"nodeType":"YulFunctionCall","src":"25087:18:21"},{"hexValue":"4e6f742073756666696369656e742066756e6473","kind":"string","nodeType":"YulLiteral","src":"25107:22:21","type":"","value":"Not sufficient funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25080:6:21"},"nodeType":"YulFunctionCall","src":"25080:50:21"},"nodeType":"YulExpressionStatement","src":"25080:50:21"},{"nodeType":"YulAssignment","src":"25139:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25151:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25162:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25147:3:21"},"nodeType":"YulFunctionCall","src":"25147:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25139:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24978:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24992:4:21","type":""}],"src":"24827:344:21"},{"body":{"nodeType":"YulBlock","src":"25208:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25225:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25232:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"25237:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25228:3:21"},"nodeType":"YulFunctionCall","src":"25228:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25218:6:21"},"nodeType":"YulFunctionCall","src":"25218:31:21"},"nodeType":"YulExpressionStatement","src":"25218:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25265:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25268:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25258:6:21"},"nodeType":"YulFunctionCall","src":"25258:15:21"},"nodeType":"YulExpressionStatement","src":"25258:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25289:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25292:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25282:6:21"},"nodeType":"YulFunctionCall","src":"25282:15:21"},"nodeType":"YulExpressionStatement","src":"25282:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25176:127:21"},{"body":{"nodeType":"YulBlock","src":"25357:79:21","statements":[{"nodeType":"YulAssignment","src":"25367:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25379:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"25382:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25375:3:21"},"nodeType":"YulFunctionCall","src":"25375:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25367:4:21"}]},{"body":{"nodeType":"YulBlock","src":"25408:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25410:16:21"},"nodeType":"YulFunctionCall","src":"25410:18:21"},"nodeType":"YulExpressionStatement","src":"25410:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"25399:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"25405:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25396:2:21"},"nodeType":"YulFunctionCall","src":"25396:11:21"},"nodeType":"YulIf","src":"25393:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25339:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"25342:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25348:4:21","type":""}],"src":"25308:128:21"},{"body":{"nodeType":"YulBlock","src":"25570:145:21","statements":[{"nodeType":"YulAssignment","src":"25580:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25603:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25588:3:21"},"nodeType":"YulFunctionCall","src":"25588:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25580:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25622:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25637:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25653:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"25658:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25649:3:21"},"nodeType":"YulFunctionCall","src":"25649:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"25662:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25645:3:21"},"nodeType":"YulFunctionCall","src":"25645:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25633:3:21"},"nodeType":"YulFunctionCall","src":"25633:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25615:6:21"},"nodeType":"YulFunctionCall","src":"25615:51:21"},"nodeType":"YulExpressionStatement","src":"25615:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25686:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25697:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25682:3:21"},"nodeType":"YulFunctionCall","src":"25682:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"25702:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25675:6:21"},"nodeType":"YulFunctionCall","src":"25675:34:21"},"nodeType":"YulExpressionStatement","src":"25675:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25531:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25542:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25550:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25561:4:21","type":""}],"src":"25441:274:21"},{"body":{"nodeType":"YulBlock","src":"25877:218:21","statements":[{"nodeType":"YulAssignment","src":"25887:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25899:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"25910:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25895:3:21"},"nodeType":"YulFunctionCall","src":"25895:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25887:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"25922:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25940:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"25945:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25936:3:21"},"nodeType":"YulFunctionCall","src":"25936:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"25949:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25932:3:21"},"nodeType":"YulFunctionCall","src":"25932:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25926:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25967:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25982:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"25990:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25978:3:21"},"nodeType":"YulFunctionCall","src":"25978:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25960:6:21"},"nodeType":"YulFunctionCall","src":"25960:34:21"},"nodeType":"YulExpressionStatement","src":"25960:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26014:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26025:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26010:3:21"},"nodeType":"YulFunctionCall","src":"26010:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26034:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"26042:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26030:3:21"},"nodeType":"YulFunctionCall","src":"26030:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26003:6:21"},"nodeType":"YulFunctionCall","src":"26003:43:21"},"nodeType":"YulExpressionStatement","src":"26003:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26066:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26077:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26062:3:21"},"nodeType":"YulFunctionCall","src":"26062:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"26082:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26055:6:21"},"nodeType":"YulFunctionCall","src":"26055:34:21"},"nodeType":"YulExpressionStatement","src":"26055:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25830:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25841:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25849:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25857:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25868:4:21","type":""}],"src":"25720:375:21"},{"body":{"nodeType":"YulBlock","src":"26274:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26291:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26302:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26284:6:21"},"nodeType":"YulFunctionCall","src":"26284:21:21"},"nodeType":"YulExpressionStatement","src":"26284:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26325:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26336:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26321:3:21"},"nodeType":"YulFunctionCall","src":"26321:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"26341:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26314:6:21"},"nodeType":"YulFunctionCall","src":"26314:30:21"},"nodeType":"YulExpressionStatement","src":"26314:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26375:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26360:3:21"},"nodeType":"YulFunctionCall","src":"26360:18:21"},{"hexValue":"4172726179206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"26380:16:21","type":"","value":"Array mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26353:6:21"},"nodeType":"YulFunctionCall","src":"26353:44:21"},"nodeType":"YulExpressionStatement","src":"26353:44:21"},{"nodeType":"YulAssignment","src":"26406:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26418:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26429:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26414:3:21"},"nodeType":"YulFunctionCall","src":"26414:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26406:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26251:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26265:4:21","type":""}],"src":"26100:338:21"},{"body":{"nodeType":"YulBlock","src":"26475:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26492:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26499:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"26504:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26495:3:21"},"nodeType":"YulFunctionCall","src":"26495:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26485:6:21"},"nodeType":"YulFunctionCall","src":"26485:31:21"},"nodeType":"YulExpressionStatement","src":"26485:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26532:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26535:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26525:6:21"},"nodeType":"YulFunctionCall","src":"26525:15:21"},"nodeType":"YulExpressionStatement","src":"26525:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26556:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26559:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26549:6:21"},"nodeType":"YulFunctionCall","src":"26549:15:21"},"nodeType":"YulExpressionStatement","src":"26549:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"26443:127:21"},{"body":{"nodeType":"YulBlock","src":"26749:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26766:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26777:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26759:6:21"},"nodeType":"YulFunctionCall","src":"26759:21:21"},"nodeType":"YulExpressionStatement","src":"26759:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26811:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26796:3:21"},"nodeType":"YulFunctionCall","src":"26796:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"26816:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26789:6:21"},"nodeType":"YulFunctionCall","src":"26789:30:21"},"nodeType":"YulExpressionStatement","src":"26789:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26839:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26850:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26835:3:21"},"nodeType":"YulFunctionCall","src":"26835:18:21"},{"hexValue":"42616c616e636520696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"26855:22:21","type":"","value":"Balance insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26828:6:21"},"nodeType":"YulFunctionCall","src":"26828:50:21"},"nodeType":"YulExpressionStatement","src":"26828:50:21"},{"nodeType":"YulAssignment","src":"26887:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26899:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"26910:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26895:3:21"},"nodeType":"YulFunctionCall","src":"26895:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26887:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26726:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26740:4:21","type":""}],"src":"26575:344:21"},{"body":{"nodeType":"YulBlock","src":"27098:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27115:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27126:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27108:6:21"},"nodeType":"YulFunctionCall","src":"27108:21:21"},"nodeType":"YulExpressionStatement","src":"27108:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27149:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27160:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27145:3:21"},"nodeType":"YulFunctionCall","src":"27145:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"27165:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27138:6:21"},"nodeType":"YulFunctionCall","src":"27138:30:21"},"nodeType":"YulExpressionStatement","src":"27138:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27188:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27199:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27184:3:21"},"nodeType":"YulFunctionCall","src":"27184:18:21"},{"hexValue":"5769746864726177206661696c6564","kind":"string","nodeType":"YulLiteral","src":"27204:17:21","type":"","value":"Withdraw failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27177:6:21"},"nodeType":"YulFunctionCall","src":"27177:45:21"},"nodeType":"YulExpressionStatement","src":"27177:45:21"},{"nodeType":"YulAssignment","src":"27231:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27243:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27254:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27239:3:21"},"nodeType":"YulFunctionCall","src":"27239:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27231:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27075:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27089:4:21","type":""}],"src":"26924:339:21"},{"body":{"nodeType":"YulBlock","src":"27315:88:21","statements":[{"body":{"nodeType":"YulBlock","src":"27346:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27348:16:21"},"nodeType":"YulFunctionCall","src":"27348:18:21"},"nodeType":"YulExpressionStatement","src":"27348:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27331:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27342:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27338:3:21"},"nodeType":"YulFunctionCall","src":"27338:6:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27328:2:21"},"nodeType":"YulFunctionCall","src":"27328:17:21"},"nodeType":"YulIf","src":"27325:43:21"},{"nodeType":"YulAssignment","src":"27377:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27388:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"27395:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27384:3:21"},"nodeType":"YulFunctionCall","src":"27384:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27377:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27297:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27307:3:21","type":""}],"src":"27268:135:21"},{"body":{"nodeType":"YulBlock","src":"27665:305:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27682:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27693:2:21","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27675:6:21"},"nodeType":"YulFunctionCall","src":"27675:21:21"},"nodeType":"YulExpressionStatement","src":"27675:21:21"},{"nodeType":"YulVariableDeclaration","src":"27705:70:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27748:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27760:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27771:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27756:3:21"},"nodeType":"YulFunctionCall","src":"27756:18:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"27719:28:21"},"nodeType":"YulFunctionCall","src":"27719:56:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"27709:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27795:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27806:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27791:3:21"},"nodeType":"YulFunctionCall","src":"27791:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"27815:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27823:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27811:3:21"},"nodeType":"YulFunctionCall","src":"27811:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27784:6:21"},"nodeType":"YulFunctionCall","src":"27784:50:21"},"nodeType":"YulExpressionStatement","src":"27784:50:21"},{"nodeType":"YulAssignment","src":"27843:52:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27880:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"27888:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"27851:28:21"},"nodeType":"YulFunctionCall","src":"27851:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27843:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27915:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27926:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27911:3:21"},"nodeType":"YulFunctionCall","src":"27911:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27935:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27951:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"27956:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27947:3:21"},"nodeType":"YulFunctionCall","src":"27947:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"27960:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27943:3:21"},"nodeType":"YulFunctionCall","src":"27943:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27931:3:21"},"nodeType":"YulFunctionCall","src":"27931:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27904:6:21"},"nodeType":"YulFunctionCall","src":"27904:60:21"},"nodeType":"YulExpressionStatement","src":"27904:60:21"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27618:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27629:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27637:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27645:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27656:4:21","type":""}],"src":"27408:562:21"},{"body":{"nodeType":"YulBlock","src":"28056:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"28102:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28111:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28114:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28104:6:21"},"nodeType":"YulFunctionCall","src":"28104:12:21"},"nodeType":"YulExpressionStatement","src":"28104:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28077:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"28086:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28073:3:21"},"nodeType":"YulFunctionCall","src":"28073:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"28098:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28069:3:21"},"nodeType":"YulFunctionCall","src":"28069:32:21"},"nodeType":"YulIf","src":"28066:52:21"},{"nodeType":"YulAssignment","src":"28127:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28143:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28137:5:21"},"nodeType":"YulFunctionCall","src":"28137:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28127:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28022:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28033:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28045:6:21","type":""}],"src":"27975:184:21"},{"body":{"nodeType":"YulBlock","src":"28244:126:21","statements":[{"body":{"nodeType":"YulBlock","src":"28290:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28299:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28302:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28292:6:21"},"nodeType":"YulFunctionCall","src":"28292:12:21"},"nodeType":"YulExpressionStatement","src":"28292:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28265:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"28274:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28261:3:21"},"nodeType":"YulFunctionCall","src":"28261:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"28286:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28257:3:21"},"nodeType":"YulFunctionCall","src":"28257:32:21"},"nodeType":"YulIf","src":"28254:52:21"},{"nodeType":"YulAssignment","src":"28315:49:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28354:9:21"}],"functionName":{"name":"abi_decode_uint40_fromMemory","nodeType":"YulIdentifier","src":"28325:28:21"},"nodeType":"YulFunctionCall","src":"28325:39:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28315:6:21"}]}]},"name":"abi_decode_tuple_t_uint40_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28210:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28221:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28233:6:21","type":""}],"src":"28164:206:21"},{"body":{"nodeType":"YulBlock","src":"28549:156:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28577:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28559:6:21"},"nodeType":"YulFunctionCall","src":"28559:21:21"},"nodeType":"YulExpressionStatement","src":"28559:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28600:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28611:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28596:3:21"},"nodeType":"YulFunctionCall","src":"28596:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"28616:1:21","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28589:6:21"},"nodeType":"YulFunctionCall","src":"28589:29:21"},"nodeType":"YulExpressionStatement","src":"28589:29:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28649:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28634:3:21"},"nodeType":"YulFunctionCall","src":"28634:18:21"},{"hexValue":"436c6f73696e67","kind":"string","nodeType":"YulLiteral","src":"28654:9:21","type":"","value":"Closing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28627:6:21"},"nodeType":"YulFunctionCall","src":"28627:37:21"},"nodeType":"YulExpressionStatement","src":"28627:37:21"},{"nodeType":"YulAssignment","src":"28673:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28696:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28681:3:21"},"nodeType":"YulFunctionCall","src":"28681:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28673:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b8dfc848030fefb271d113eec61f68c652b0dff1d9b95a4ce008309efe2f09f1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28526:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28540:4:21","type":""}],"src":"28375:330:21"},{"body":{"nodeType":"YulBlock","src":"28884:232:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28901:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28912:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28894:6:21"},"nodeType":"YulFunctionCall","src":"28894:21:21"},"nodeType":"YulExpressionStatement","src":"28894:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28946:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28931:3:21"},"nodeType":"YulFunctionCall","src":"28931:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"28951:2:21","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28924:6:21"},"nodeType":"YulFunctionCall","src":"28924:30:21"},"nodeType":"YulExpressionStatement","src":"28924:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28974:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28985:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28970:3:21"},"nodeType":"YulFunctionCall","src":"28970:18:21"},{"hexValue":"526563686172676520696e20746869732063757272656e6379206973206e6f74","kind":"string","nodeType":"YulLiteral","src":"28990:34:21","type":"","value":"Recharge in this currency is not"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28963:6:21"},"nodeType":"YulFunctionCall","src":"28963:62:21"},"nodeType":"YulExpressionStatement","src":"28963:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29045:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29056:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29041:3:21"},"nodeType":"YulFunctionCall","src":"29041:18:21"},{"hexValue":"20737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"29061:12:21","type":"","value":" supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29034:6:21"},"nodeType":"YulFunctionCall","src":"29034:40:21"},"nodeType":"YulExpressionStatement","src":"29034:40:21"},{"nodeType":"YulAssignment","src":"29083:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29095:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29106:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29091:3:21"},"nodeType":"YulFunctionCall","src":"29091:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29083:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3aaf93234d216cebcce57886fad754bf0073b69b286cb61509139d78484b29de__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28861:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28875:4:21","type":""}],"src":"28710:406:21"},{"body":{"nodeType":"YulBlock","src":"29250:175:21","statements":[{"nodeType":"YulAssignment","src":"29260:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29272:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29283:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29268:3:21"},"nodeType":"YulFunctionCall","src":"29268:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29260:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"29295:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29313:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"29318:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29309:3:21"},"nodeType":"YulFunctionCall","src":"29309:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"29322:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29305:3:21"},"nodeType":"YulFunctionCall","src":"29305:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"29299:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29340:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29355:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"29363:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29351:3:21"},"nodeType":"YulFunctionCall","src":"29351:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29333:6:21"},"nodeType":"YulFunctionCall","src":"29333:34:21"},"nodeType":"YulExpressionStatement","src":"29333:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29387:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29398:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29383:3:21"},"nodeType":"YulFunctionCall","src":"29383:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29407:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"29415:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29403:3:21"},"nodeType":"YulFunctionCall","src":"29403:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29376:6:21"},"nodeType":"YulFunctionCall","src":"29376:43:21"},"nodeType":"YulExpressionStatement","src":"29376:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29211:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29222:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29230:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29241:4:21","type":""}],"src":"29121:304:21"},{"body":{"nodeType":"YulBlock","src":"29604:166:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29621:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29632:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29614:6:21"},"nodeType":"YulFunctionCall","src":"29614:21:21"},"nodeType":"YulExpressionStatement","src":"29614:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29655:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29666:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29651:3:21"},"nodeType":"YulFunctionCall","src":"29651:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"29671:2:21","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29644:6:21"},"nodeType":"YulFunctionCall","src":"29644:30:21"},"nodeType":"YulExpressionStatement","src":"29644:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29694:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29705:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29690:3:21"},"nodeType":"YulFunctionCall","src":"29690:18:21"},{"hexValue":"4e6f20617574686f72697a6174696f6e","kind":"string","nodeType":"YulLiteral","src":"29710:18:21","type":"","value":"No authorization"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29683:6:21"},"nodeType":"YulFunctionCall","src":"29683:46:21"},"nodeType":"YulExpressionStatement","src":"29683:46:21"},{"nodeType":"YulAssignment","src":"29738:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29750:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29761:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29746:3:21"},"nodeType":"YulFunctionCall","src":"29746:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29738:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29581:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29595:4:21","type":""}],"src":"29430:340:21"},{"body":{"nodeType":"YulBlock","src":"29949:176:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29966:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29977:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29959:6:21"},"nodeType":"YulFunctionCall","src":"29959:21:21"},"nodeType":"YulExpressionStatement","src":"29959:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30000:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30011:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29996:3:21"},"nodeType":"YulFunctionCall","src":"29996:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"30016:2:21","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29989:6:21"},"nodeType":"YulFunctionCall","src":"29989:30:21"},"nodeType":"YulExpressionStatement","src":"29989:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30039:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30050:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30035:3:21"},"nodeType":"YulFunctionCall","src":"30035:18:21"},{"hexValue":"6e6f7420656e6f756768206e617469766520666f722066656573","kind":"string","nodeType":"YulLiteral","src":"30055:28:21","type":"","value":"not enough native for fees"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30028:6:21"},"nodeType":"YulFunctionCall","src":"30028:56:21"},"nodeType":"YulExpressionStatement","src":"30028:56:21"},{"nodeType":"YulAssignment","src":"30093:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30105:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30116:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30101:3:21"},"nodeType":"YulFunctionCall","src":"30101:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30093:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29926:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29940:4:21","type":""}],"src":"29775:350:21"},{"body":{"nodeType":"YulBlock","src":"30178:77:21","statements":[{"nodeType":"YulAssignment","src":"30188:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30199:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"30202:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30195:3:21"},"nodeType":"YulFunctionCall","src":"30195:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"30188:3:21"}]},{"body":{"nodeType":"YulBlock","src":"30227:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30229:16:21"},"nodeType":"YulFunctionCall","src":"30229:18:21"},"nodeType":"YulExpressionStatement","src":"30229:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30219:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"30222:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30216:2:21"},"nodeType":"YulFunctionCall","src":"30216:10:21"},"nodeType":"YulIf","src":"30213:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30161:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"30164:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"30170:3:21","type":""}],"src":"30130:125:21"},{"body":{"nodeType":"YulBlock","src":"30509:519:21","statements":[{"nodeType":"YulAssignment","src":"30519:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30542:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30527:3:21"},"nodeType":"YulFunctionCall","src":"30527:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30519:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"30555:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30573:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"30578:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30569:3:21"},"nodeType":"YulFunctionCall","src":"30569:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"30582:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30565:3:21"},"nodeType":"YulFunctionCall","src":"30565:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"30559:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30600:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30615:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30623:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30611:3:21"},"nodeType":"YulFunctionCall","src":"30611:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30593:6:21"},"nodeType":"YulFunctionCall","src":"30593:34:21"},"nodeType":"YulExpressionStatement","src":"30593:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30647:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30658:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30643:3:21"},"nodeType":"YulFunctionCall","src":"30643:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30667:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"30675:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30663:3:21"},"nodeType":"YulFunctionCall","src":"30663:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30636:6:21"},"nodeType":"YulFunctionCall","src":"30636:43:21"},"nodeType":"YulExpressionStatement","src":"30636:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30710:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30695:3:21"},"nodeType":"YulFunctionCall","src":"30695:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"30715:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30688:6:21"},"nodeType":"YulFunctionCall","src":"30688:34:21"},"nodeType":"YulExpressionStatement","src":"30688:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30742:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30753:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30738:3:21"},"nodeType":"YulFunctionCall","src":"30738:18:21"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"30772:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30765:6:21"},"nodeType":"YulFunctionCall","src":"30765:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30758:6:21"},"nodeType":"YulFunctionCall","src":"30758:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30731:6:21"},"nodeType":"YulFunctionCall","src":"30731:50:21"},"nodeType":"YulExpressionStatement","src":"30731:50:21"},{"body":{"nodeType":"YulBlock","src":"30823:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30844:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30851:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"30856:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30847:3:21"},"nodeType":"YulFunctionCall","src":"30847:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30837:6:21"},"nodeType":"YulFunctionCall","src":"30837:31:21"},"nodeType":"YulExpressionStatement","src":"30837:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30888:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30891:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30881:6:21"},"nodeType":"YulFunctionCall","src":"30881:15:21"},"nodeType":"YulExpressionStatement","src":"30881:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30916:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30919:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30909:6:21"},"nodeType":"YulFunctionCall","src":"30909:15:21"},"nodeType":"YulExpressionStatement","src":"30909:15:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"30803:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"30811:1:21","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30800:2:21"},"nodeType":"YulFunctionCall","src":"30800:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30793:6:21"},"nodeType":"YulFunctionCall","src":"30793:21:21"},"nodeType":"YulIf","src":"30790:144:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30954:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30965:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30950:3:21"},"nodeType":"YulFunctionCall","src":"30950:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"30971:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30943:6:21"},"nodeType":"YulFunctionCall","src":"30943:35:21"},"nodeType":"YulExpressionStatement","src":"30943:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30998:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31009:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30994:3:21"},"nodeType":"YulFunctionCall","src":"30994:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"31015:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30987:6:21"},"nodeType":"YulFunctionCall","src":"30987:35:21"},"nodeType":"YulExpressionStatement","src":"30987:35:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_enum$_OperateType_$2864_t_uint256__to_t_address_t_address_t_uint256_t_bool_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30438:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"30449:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"30457:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"30465:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"30473:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30481:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30489:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30500:4:21","type":""}],"src":"30260:768:21"},{"body":{"nodeType":"YulBlock","src":"31190:218:21","statements":[{"nodeType":"YulAssignment","src":"31200:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31212:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31223:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31208:3:21"},"nodeType":"YulFunctionCall","src":"31208:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31200:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"31235:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31253:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"31258:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"31249:3:21"},"nodeType":"YulFunctionCall","src":"31249:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"31262:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31245:3:21"},"nodeType":"YulFunctionCall","src":"31245:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"31239:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31280:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31295:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"31303:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31291:3:21"},"nodeType":"YulFunctionCall","src":"31291:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31273:6:21"},"nodeType":"YulFunctionCall","src":"31273:34:21"},"nodeType":"YulExpressionStatement","src":"31273:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31338:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31323:3:21"},"nodeType":"YulFunctionCall","src":"31323:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"31343:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31316:6:21"},"nodeType":"YulFunctionCall","src":"31316:34:21"},"nodeType":"YulExpressionStatement","src":"31316:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31381:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31366:3:21"},"nodeType":"YulFunctionCall","src":"31366:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31390:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"31398:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31386:3:21"},"nodeType":"YulFunctionCall","src":"31386:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31359:6:21"},"nodeType":"YulFunctionCall","src":"31359:43:21"},"nodeType":"YulExpressionStatement","src":"31359:43:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31143:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31154:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31162:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31170:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31181:4:21","type":""}],"src":"31033:375:21"},{"body":{"nodeType":"YulBlock","src":"31493:169:21","statements":[{"body":{"nodeType":"YulBlock","src":"31539:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31548:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31551:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31541:6:21"},"nodeType":"YulFunctionCall","src":"31541:12:21"},"nodeType":"YulExpressionStatement","src":"31541:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31514:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"31523:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31510:3:21"},"nodeType":"YulFunctionCall","src":"31510:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"31535:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31506:3:21"},"nodeType":"YulFunctionCall","src":"31506:32:21"},"nodeType":"YulIf","src":"31503:52:21"},{"nodeType":"YulVariableDeclaration","src":"31564:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31583:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31577:5:21"},"nodeType":"YulFunctionCall","src":"31577:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"31568:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31626:5:21"}],"functionName":{"name":"validator_revert_uint16","nodeType":"YulIdentifier","src":"31602:23:21"},"nodeType":"YulFunctionCall","src":"31602:30:21"},"nodeType":"YulExpressionStatement","src":"31602:30:21"},{"nodeType":"YulAssignment","src":"31641:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"31651:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31641:6:21"}]}]},"name":"abi_decode_tuple_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31459:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31470:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31482:6:21","type":""}],"src":"31413:249:21"},{"body":{"nodeType":"YulBlock","src":"31866:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31876:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"31886:6:21","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"31880:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31908:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31923:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"31931:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31919:3:21"},"nodeType":"YulFunctionCall","src":"31919:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31901:6:21"},"nodeType":"YulFunctionCall","src":"31901:34:21"},"nodeType":"YulExpressionStatement","src":"31901:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"31966:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31951:3:21"},"nodeType":"YulFunctionCall","src":"31951:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31975:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"31983:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31971:3:21"},"nodeType":"YulFunctionCall","src":"31971:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31944:6:21"},"nodeType":"YulFunctionCall","src":"31944:43:21"},"nodeType":"YulExpressionStatement","src":"31944:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32007:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32018:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32003:3:21"},"nodeType":"YulFunctionCall","src":"32003:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"32023:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31996:6:21"},"nodeType":"YulFunctionCall","src":"31996:34:21"},"nodeType":"YulExpressionStatement","src":"31996:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32050:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32061:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32046:3:21"},"nodeType":"YulFunctionCall","src":"32046:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"32066:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32039:6:21"},"nodeType":"YulFunctionCall","src":"32039:31:21"},"nodeType":"YulExpressionStatement","src":"32039:31:21"},{"nodeType":"YulAssignment","src":"32079:53:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32104:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32116:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32127:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32112:3:21"},"nodeType":"YulFunctionCall","src":"32112:19:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"32087:16:21"},"nodeType":"YulFunctionCall","src":"32087:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32079:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31811:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31822:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31830:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31838:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31846:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31857:4:21","type":""}],"src":"31667:471:21"},{"body":{"nodeType":"YulBlock","src":"32489:480:21","statements":[{"nodeType":"YulAssignment","src":"32499:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32511:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32522:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32507:3:21"},"nodeType":"YulFunctionCall","src":"32507:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32499:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32542:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32557:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32573:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"32578:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32569:3:21"},"nodeType":"YulFunctionCall","src":"32569:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"32582:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32565:3:21"},"nodeType":"YulFunctionCall","src":"32565:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32553:3:21"},"nodeType":"YulFunctionCall","src":"32553:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32535:6:21"},"nodeType":"YulFunctionCall","src":"32535:51:21"},"nodeType":"YulExpressionStatement","src":"32535:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32606:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32617:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32602:3:21"},"nodeType":"YulFunctionCall","src":"32602:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32626:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32634:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32622:3:21"},"nodeType":"YulFunctionCall","src":"32622:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32595:6:21"},"nodeType":"YulFunctionCall","src":"32595:45:21"},"nodeType":"YulExpressionStatement","src":"32595:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32660:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32671:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32656:3:21"},"nodeType":"YulFunctionCall","src":"32656:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32680:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32688:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32676:3:21"},"nodeType":"YulFunctionCall","src":"32676:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32649:6:21"},"nodeType":"YulFunctionCall","src":"32649:45:21"},"nodeType":"YulExpressionStatement","src":"32649:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32714:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32725:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32710:3:21"},"nodeType":"YulFunctionCall","src":"32710:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32734:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32742:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32730:3:21"},"nodeType":"YulFunctionCall","src":"32730:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32703:6:21"},"nodeType":"YulFunctionCall","src":"32703:47:21"},"nodeType":"YulExpressionStatement","src":"32703:47:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32770:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32781:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32766:3:21"},"nodeType":"YulFunctionCall","src":"32766:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"32791:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32799:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32787:3:21"},"nodeType":"YulFunctionCall","src":"32787:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32759:6:21"},"nodeType":"YulFunctionCall","src":"32759:46:21"},"nodeType":"YulExpressionStatement","src":"32759:46:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32825:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32836:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32821:3:21"},"nodeType":"YulFunctionCall","src":"32821:19:21"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"32846:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32854:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32842:3:21"},"nodeType":"YulFunctionCall","src":"32842:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32814:6:21"},"nodeType":"YulFunctionCall","src":"32814:46:21"},"nodeType":"YulExpressionStatement","src":"32814:46:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32880:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32891:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32876:3:21"},"nodeType":"YulFunctionCall","src":"32876:19:21"},{"name":"value6","nodeType":"YulIdentifier","src":"32897:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32869:6:21"},"nodeType":"YulFunctionCall","src":"32869:35:21"},"nodeType":"YulExpressionStatement","src":"32869:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32924:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"32935:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32920:3:21"},"nodeType":"YulFunctionCall","src":"32920:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"32945:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32953:8:21","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32941:3:21"},"nodeType":"YulFunctionCall","src":"32941:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32913:6:21"},"nodeType":"YulFunctionCall","src":"32913:50:21"},"nodeType":"YulExpressionStatement","src":"32913:50:21"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1_t_rational_0_by_1_t_rational_10000_by_1_t_rational_0_by_1_t_rational_10_by_1_t_uint256_t_rational_1000000_by_1__to_t_address_t_uint8_t_uint8_t_uint16_t_uint8_t_uint8_t_uint256_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32402:9:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"32413:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"32421:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"32429:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"32437:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32445:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32453:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32461:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32469:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32480:4:21","type":""}],"src":"32143:826:21"},{"body":{"nodeType":"YulBlock","src":"33148:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33176:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33158:6:21"},"nodeType":"YulFunctionCall","src":"33158:21:21"},"nodeType":"YulExpressionStatement","src":"33158:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33199:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33210:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33195:3:21"},"nodeType":"YulFunctionCall","src":"33195:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"33215:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33188:6:21"},"nodeType":"YulFunctionCall","src":"33188:30:21"},"nodeType":"YulExpressionStatement","src":"33188:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33238:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33249:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33234:3:21"},"nodeType":"YulFunctionCall","src":"33234:18:21"},{"hexValue":"616d6f756e74206e6f206d61746368","kind":"string","nodeType":"YulLiteral","src":"33254:17:21","type":"","value":"amount no match"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33227:6:21"},"nodeType":"YulFunctionCall","src":"33227:45:21"},"nodeType":"YulExpressionStatement","src":"33227:45:21"},{"nodeType":"YulAssignment","src":"33281:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33293:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33304:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33289:3:21"},"nodeType":"YulFunctionCall","src":"33289:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33281:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b9c1d6526fc79efecb5cefdba06d4442123c71d0ed2cef80c90cd0c2c119053__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33125:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33139:4:21","type":""}],"src":"32974:339:21"},{"body":{"nodeType":"YulBlock","src":"33447:145:21","statements":[{"nodeType":"YulAssignment","src":"33457:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33469:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33480:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33465:3:21"},"nodeType":"YulFunctionCall","src":"33465:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33457:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33499:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"33510:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33492:6:21"},"nodeType":"YulFunctionCall","src":"33492:25:21"},"nodeType":"YulExpressionStatement","src":"33492:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33537:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33548:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33533:3:21"},"nodeType":"YulFunctionCall","src":"33533:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33557:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33573:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"33578:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33569:3:21"},"nodeType":"YulFunctionCall","src":"33569:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"33582:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33565:3:21"},"nodeType":"YulFunctionCall","src":"33565:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33553:3:21"},"nodeType":"YulFunctionCall","src":"33553:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33526:6:21"},"nodeType":"YulFunctionCall","src":"33526:60:21"},"nodeType":"YulExpressionStatement","src":"33526:60:21"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33408:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33419:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33427:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33438:4:21","type":""}],"src":"33318:274:21"},{"body":{"nodeType":"YulBlock","src":"33652:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33669:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"33672:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33662:6:21"},"nodeType":"YulFunctionCall","src":"33662:14:21"},"nodeType":"YulExpressionStatement","src":"33662:14:21"},{"nodeType":"YulAssignment","src":"33685:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33703:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33706:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"33693:9:21"},"nodeType":"YulFunctionCall","src":"33693:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33685:4:21"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"33635:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"33643:4:21","type":""}],"src":"33597:120:21"},{"body":{"nodeType":"YulBlock","src":"33960:1113:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33977:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33992:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"34000:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33988:3:21"},"nodeType":"YulFunctionCall","src":"33988:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33970:6:21"},"nodeType":"YulFunctionCall","src":"33970:38:21"},"nodeType":"YulExpressionStatement","src":"33970:38:21"},{"nodeType":"YulVariableDeclaration","src":"34017:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34027:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"34021:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34049:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34060:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34045:3:21"},"nodeType":"YulFunctionCall","src":"34045:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34069:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34085:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"34090:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34081:3:21"},"nodeType":"YulFunctionCall","src":"34081:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"34094:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34077:3:21"},"nodeType":"YulFunctionCall","src":"34077:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34065:3:21"},"nodeType":"YulFunctionCall","src":"34065:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34038:6:21"},"nodeType":"YulFunctionCall","src":"34038:60:21"},"nodeType":"YulExpressionStatement","src":"34038:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34118:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34129:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34114:3:21"},"nodeType":"YulFunctionCall","src":"34114:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"34134:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34107:6:21"},"nodeType":"YulFunctionCall","src":"34107:31:21"},"nodeType":"YulExpressionStatement","src":"34107:31:21"},{"nodeType":"YulVariableDeclaration","src":"34147:59:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34178:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34190:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34201:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34186:3:21"},"nodeType":"YulFunctionCall","src":"34186:19:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"34161:16:21"},"nodeType":"YulFunctionCall","src":"34161:45:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"34151:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34226:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34237:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34222:3:21"},"nodeType":"YulFunctionCall","src":"34222:18:21"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34256:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34249:6:21"},"nodeType":"YulFunctionCall","src":"34249:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34242:6:21"},"nodeType":"YulFunctionCall","src":"34242:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34215:6:21"},"nodeType":"YulFunctionCall","src":"34215:50:21"},"nodeType":"YulExpressionStatement","src":"34215:50:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34296:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34281:3:21"},"nodeType":"YulFunctionCall","src":"34281:19:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34306:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"34314:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34302:3:21"},"nodeType":"YulFunctionCall","src":"34302:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34274:6:21"},"nodeType":"YulFunctionCall","src":"34274:51:21"},"nodeType":"YulExpressionStatement","src":"34274:51:21"},{"nodeType":"YulVariableDeclaration","src":"34334:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34345:1:21","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"34338:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34355:30:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34378:6:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34372:5:21"},"nodeType":"YulFunctionCall","src":"34372:13:21"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"34359:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34394:50:21","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34434:9:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"34408:25:21"},"nodeType":"YulFunctionCall","src":"34408:36:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34398:6:21","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34460:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"34468:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34453:6:21"},"nodeType":"YulFunctionCall","src":"34453:22:21"},"nodeType":"YulExpressionStatement","src":"34453:22:21"},{"nodeType":"YulVariableDeclaration","src":"34484:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34494:1:21","type":"","value":"1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"34488:2:21","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"34545:145:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34570:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34578:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34566:3:21"},"nodeType":"YulFunctionCall","src":"34566:15:21"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34587:9:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34602:3:21","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34598:3:21"},"nodeType":"YulFunctionCall","src":"34598:8:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34583:3:21"},"nodeType":"YulFunctionCall","src":"34583:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34559:6:21"},"nodeType":"YulFunctionCall","src":"34559:49:21"},"nodeType":"YulExpressionStatement","src":"34559:49:21"},{"nodeType":"YulAssignment","src":"34621:59:21","value":{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34636:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34648:1:21","type":"","value":"5"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34665:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34658:6:21"},"nodeType":"YulFunctionCall","src":"34658:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34651:6:21"},"nodeType":"YulFunctionCall","src":"34651:22:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34644:3:21"},"nodeType":"YulFunctionCall","src":"34644:30:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34632:3:21"},"nodeType":"YulFunctionCall","src":"34632:43:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34677:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34628:3:21"},"nodeType":"YulFunctionCall","src":"34628:52:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34621:3:21"}]}]},"nodeType":"YulCase","src":"34538:152:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34543:1:21","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"34706:341:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34727:1:21","type":"","value":"0"},{"name":"value4","nodeType":"YulIdentifier","src":"34730:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34720:6:21"},"nodeType":"YulFunctionCall","src":"34720:17:21"},"nodeType":"YulExpressionStatement","src":"34720:17:21"},{"nodeType":"YulVariableDeclaration","src":"34750:31:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34775:1:21","type":"","value":"0"},{"name":"_1","nodeType":"YulIdentifier","src":"34778:2:21"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"34765:9:21"},"nodeType":"YulFunctionCall","src":"34765:16:21"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"34754:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"34794:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34803:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"34798:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"34871:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"34904:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"34912:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34900:3:21"},"nodeType":"YulFunctionCall","src":"34900:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34916:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34896:3:21"},"nodeType":"YulFunctionCall","src":"34896:23:21"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34927:7:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34921:5:21"},"nodeType":"YulFunctionCall","src":"34921:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34889:6:21"},"nodeType":"YulFunctionCall","src":"34889:47:21"},"nodeType":"YulExpressionStatement","src":"34889:47:21"},{"nodeType":"YulAssignment","src":"34953:27:21","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34968:7:21"},{"name":"_2","nodeType":"YulIdentifier","src":"34977:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34964:3:21"},"nodeType":"YulFunctionCall","src":"34964:16:21"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34953:7:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34828:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"34831:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34825:2:21"},"nodeType":"YulFunctionCall","src":"34825:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34839:19:21","statements":[{"nodeType":"YulAssignment","src":"34841:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"34850:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"34853:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34846:3:21"},"nodeType":"YulFunctionCall","src":"34846:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"34841:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"34821:3:21","statements":[]},"src":"34817:177:21"},{"nodeType":"YulAssignment","src":"35007:30:21","value":{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"35022:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"35030:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35018:3:21"},"nodeType":"YulFunctionCall","src":"35018:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"35034:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35014:3:21"},"nodeType":"YulFunctionCall","src":"35014:23:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35007:3:21"}]}]},"nodeType":"YulCase","src":"34699:348:21","value":{"kind":"number","nodeType":"YulLiteral","src":"34704:1:21","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"34515:9:21"},{"name":"_2","nodeType":"YulIdentifier","src":"34526:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34511:3:21"},"nodeType":"YulFunctionCall","src":"34511:18:21"},"nodeType":"YulSwitch","src":"34504:543:21"},{"nodeType":"YulAssignment","src":"35056:11:21","value":{"name":"ret","nodeType":"YulIdentifier","src":"35064:3:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35056:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_storage__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33897:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33908:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33916:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33932:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33940:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33951:4:21","type":""}],"src":"33722:1351:21"},{"body":{"nodeType":"YulBlock","src":"35176:147:21","statements":[{"body":{"nodeType":"YulBlock","src":"35222:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35231:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"35234:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"35224:6:21"},"nodeType":"YulFunctionCall","src":"35224:12:21"},"nodeType":"YulExpressionStatement","src":"35224:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35197:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"35206:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35193:3:21"},"nodeType":"YulFunctionCall","src":"35193:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"35218:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35189:3:21"},"nodeType":"YulFunctionCall","src":"35189:32:21"},"nodeType":"YulIf","src":"35186:52:21"},{"nodeType":"YulAssignment","src":"35247:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35263:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35257:5:21"},"nodeType":"YulFunctionCall","src":"35257:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"35247:6:21"}]},{"nodeType":"YulAssignment","src":"35282:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35302:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35313:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35298:3:21"},"nodeType":"YulFunctionCall","src":"35298:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35292:5:21"},"nodeType":"YulFunctionCall","src":"35292:25:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"35282:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35134:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35145:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35157:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35165:6:21","type":""}],"src":"35078:245:21"},{"body":{"nodeType":"YulBlock","src":"35502:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35519:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35530:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35512:6:21"},"nodeType":"YulFunctionCall","src":"35512:21:21"},"nodeType":"YulExpressionStatement","src":"35512:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35564:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35549:3:21"},"nodeType":"YulFunctionCall","src":"35549:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"35569:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35542:6:21"},"nodeType":"YulFunctionCall","src":"35542:30:21"},"nodeType":"YulExpressionStatement","src":"35542:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35603:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35588:3:21"},"nodeType":"YulFunctionCall","src":"35588:18:21"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265","kind":"string","nodeType":"YulLiteral","src":"35608:34:21","type":"","value":"NonblockingLzApp: caller must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35581:6:21"},"nodeType":"YulFunctionCall","src":"35581:62:21"},"nodeType":"YulExpressionStatement","src":"35581:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35663:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35674:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35659:3:21"},"nodeType":"YulFunctionCall","src":"35659:18:21"},{"hexValue":"204c7a417070","kind":"string","nodeType":"YulLiteral","src":"35679:8:21","type":"","value":" LzApp"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35652:6:21"},"nodeType":"YulFunctionCall","src":"35652:36:21"},"nodeType":"YulExpressionStatement","src":"35652:36:21"},{"nodeType":"YulAssignment","src":"35697:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35720:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35705:3:21"},"nodeType":"YulFunctionCall","src":"35705:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35697:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35479:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35493:4:21","type":""}],"src":"35328:402:21"},{"body":{"nodeType":"YulBlock","src":"35880:131:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35897:3:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35910:3:21","type":"","value":"240"},{"name":"value0","nodeType":"YulIdentifier","src":"35915:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"35906:3:21"},"nodeType":"YulFunctionCall","src":"35906:16:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35928:3:21","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"35933:5:21","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"35924:3:21"},"nodeType":"YulFunctionCall","src":"35924:15:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35902:3:21"},"nodeType":"YulFunctionCall","src":"35902:38:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35890:6:21"},"nodeType":"YulFunctionCall","src":"35890:51:21"},"nodeType":"YulExpressionStatement","src":"35890:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35961:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"35966:1:21","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35957:3:21"},"nodeType":"YulFunctionCall","src":"35957:11:21"},{"name":"value1","nodeType":"YulIdentifier","src":"35970:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35950:6:21"},"nodeType":"YulFunctionCall","src":"35950:27:21"},"nodeType":"YulExpressionStatement","src":"35950:27:21"},{"nodeType":"YulAssignment","src":"35986:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35997:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"36002:2:21","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35993:3:21"},"nodeType":"YulFunctionCall","src":"35993:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35986:3:21"}]}]},"name":"abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35848:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35853:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35861:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35872:3:21","type":""}],"src":"35735:276:21"},{"body":{"nodeType":"YulBlock","src":"36096:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"36129:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36143:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"36153:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"36147:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"36174:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"36178:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36167:6:21"},"nodeType":"YulFunctionCall","src":"36167:17:21"},"nodeType":"YulExpressionStatement","src":"36167:17:21"},{"nodeType":"YulVariableDeclaration","src":"36197:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"36219:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"36223:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"36209:9:21"},"nodeType":"YulFunctionCall","src":"36209:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"36201:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36241:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36264:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36274:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"36281:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"36293:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36277:3:21"},"nodeType":"YulFunctionCall","src":"36277:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36270:3:21"},"nodeType":"YulFunctionCall","src":"36270:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36260:3:21"},"nodeType":"YulFunctionCall","src":"36260:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"36245:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"36335:23:21","statements":[{"nodeType":"YulAssignment","src":"36337:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"36352:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"36337:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"36317:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"36329:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36314:2:21"},"nodeType":"YulFunctionCall","src":"36314:20:21"},"nodeType":"YulIf","src":"36311:47:21"},{"nodeType":"YulVariableDeclaration","src":"36371:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36385:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36395:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"36402:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"36407:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36398:3:21"},"nodeType":"YulFunctionCall","src":"36398:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36391:3:21"},"nodeType":"YulFunctionCall","src":"36391:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36381:3:21"},"nodeType":"YulFunctionCall","src":"36381:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"36375:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36425:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"36438:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"36429:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"36523:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36532:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"36539:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36525:6:21"},"nodeType":"YulFunctionCall","src":"36525:17:21"},"nodeType":"YulExpressionStatement","src":"36525:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36473:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"36480:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36470:2:21"},"nodeType":"YulFunctionCall","src":"36470:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36484:26:21","statements":[{"nodeType":"YulAssignment","src":"36486:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"36499:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"36506:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36495:3:21"},"nodeType":"YulFunctionCall","src":"36495:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"36486:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"36466:3:21","statements":[]},"src":"36462:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"36112:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"36117:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36109:2:21"},"nodeType":"YulFunctionCall","src":"36109:11:21"},"nodeType":"YulIf","src":"36106:448:21"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"36068:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"36075:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"36080:10:21","type":""}],"src":"36016:544:21"},{"body":{"nodeType":"YulBlock","src":"36650:81:21","statements":[{"nodeType":"YulAssignment","src":"36660:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36675:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36693:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"36696:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36689:3:21"},"nodeType":"YulFunctionCall","src":"36689:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36706:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36702:3:21"},"nodeType":"YulFunctionCall","src":"36702:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"36685:3:21"},"nodeType":"YulFunctionCall","src":"36685:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36681:3:21"},"nodeType":"YulFunctionCall","src":"36681:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36671:3:21"},"nodeType":"YulFunctionCall","src":"36671:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36717:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"36720:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36713:3:21"},"nodeType":"YulFunctionCall","src":"36713:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"36668:2:21"},"nodeType":"YulFunctionCall","src":"36668:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"36660:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"36627:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"36633:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"36641:4:21","type":""}],"src":"36565:166:21"},{"body":{"nodeType":"YulBlock","src":"36830:1254:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36840:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36860:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36854:5:21"},"nodeType":"YulFunctionCall","src":"36854:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"36844:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"36907:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"36909:16:21"},"nodeType":"YulFunctionCall","src":"36909:18:21"},"nodeType":"YulExpressionStatement","src":"36909:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36879:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36895:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"36899:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36891:3:21"},"nodeType":"YulFunctionCall","src":"36891:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"36903:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36887:3:21"},"nodeType":"YulFunctionCall","src":"36887:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36876:2:21"},"nodeType":"YulFunctionCall","src":"36876:30:21"},"nodeType":"YulIf","src":"36873:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36981:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37019:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"37013:5:21"},"nodeType":"YulFunctionCall","src":"37013:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"36987:25:21"},"nodeType":"YulFunctionCall","src":"36987:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"37027:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"36938:42:21"},"nodeType":"YulFunctionCall","src":"36938:96:21"},"nodeType":"YulExpressionStatement","src":"36938:96:21"},{"nodeType":"YulVariableDeclaration","src":"37043:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37060:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"37047:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37070:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37089:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"37074:11:21","type":""}]},{"nodeType":"YulAssignment","src":"37102:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"37115:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"37102:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"37172:655:21","statements":[{"nodeType":"YulVariableDeclaration","src":"37186:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37205:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37217:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37213:3:21"},"nodeType":"YulFunctionCall","src":"37213:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37201:3:21"},"nodeType":"YulFunctionCall","src":"37201:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"37190:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37234:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37277:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"37248:28:21"},"nodeType":"YulFunctionCall","src":"37248:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"37238:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37295:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37304:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"37299:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"37382:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"37407:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37425:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37430:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37421:3:21"},"nodeType":"YulFunctionCall","src":"37421:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37415:5:21"},"nodeType":"YulFunctionCall","src":"37415:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37400:6:21"},"nodeType":"YulFunctionCall","src":"37400:42:21"},"nodeType":"YulExpressionStatement","src":"37400:42:21"},{"nodeType":"YulAssignment","src":"37459:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"37473:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"37481:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37469:3:21"},"nodeType":"YulFunctionCall","src":"37469:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"37459:6:21"}]},{"nodeType":"YulAssignment","src":"37500:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"37517:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"37528:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37513:3:21"},"nodeType":"YulFunctionCall","src":"37513:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"37500:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37329:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"37332:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37326:2:21"},"nodeType":"YulFunctionCall","src":"37326:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"37341:28:21","statements":[{"nodeType":"YulAssignment","src":"37343:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37352:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"37355:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37348:3:21"},"nodeType":"YulFunctionCall","src":"37348:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"37343:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"37322:3:21","statements":[]},"src":"37318:236:21"},{"body":{"nodeType":"YulBlock","src":"37602:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"37620:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37647:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37652:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37643:3:21"},"nodeType":"YulFunctionCall","src":"37643:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37637:5:21"},"nodeType":"YulFunctionCall","src":"37637:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"37624:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"37687:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"37699:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37726:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"37729:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37722:3:21"},"nodeType":"YulFunctionCall","src":"37722:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"37738:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37718:3:21"},"nodeType":"YulFunctionCall","src":"37718:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37748:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37744:3:21"},"nodeType":"YulFunctionCall","src":"37744:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"37714:3:21"},"nodeType":"YulFunctionCall","src":"37714:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37710:3:21"},"nodeType":"YulFunctionCall","src":"37710:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37695:3:21"},"nodeType":"YulFunctionCall","src":"37695:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37680:6:21"},"nodeType":"YulFunctionCall","src":"37680:74:21"},"nodeType":"YulExpressionStatement","src":"37680:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"37573:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"37582:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37570:2:21"},"nodeType":"YulFunctionCall","src":"37570:19:21"},"nodeType":"YulIf","src":"37567:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37788:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37802:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"37805:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37798:3:21"},"nodeType":"YulFunctionCall","src":"37798:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"37814:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37794:3:21"},"nodeType":"YulFunctionCall","src":"37794:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37781:6:21"},"nodeType":"YulFunctionCall","src":"37781:36:21"},"nodeType":"YulExpressionStatement","src":"37781:36:21"}]},"nodeType":"YulCase","src":"37165:662:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37170:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"37844:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"37858:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37871:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"37862:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"37907:67:21","statements":[{"nodeType":"YulAssignment","src":"37925:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37944:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37949:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37940:3:21"},"nodeType":"YulFunctionCall","src":"37940:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37934:5:21"},"nodeType":"YulFunctionCall","src":"37934:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37925:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"37888:6:21"},"nodeType":"YulIf","src":"37885:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37994:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38053:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"38060:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"38000:52:21"},"nodeType":"YulFunctionCall","src":"38000:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37987:6:21"},"nodeType":"YulFunctionCall","src":"37987:81:21"},"nodeType":"YulExpressionStatement","src":"37987:81:21"}]},"nodeType":"YulCase","src":"37836:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37145:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"37153:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37142:2:21"},"nodeType":"YulFunctionCall","src":"37142:14:21"},"nodeType":"YulSwitch","src":"37135:943:21"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"36815:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"36821:3:21","type":""}],"src":"36736:1348:21"},{"body":{"nodeType":"YulBlock","src":"38263:231:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38280:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38291:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38273:6:21"},"nodeType":"YulFunctionCall","src":"38273:21:21"},"nodeType":"YulExpressionStatement","src":"38273:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38314:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38325:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38310:3:21"},"nodeType":"YulFunctionCall","src":"38310:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"38330:2:21","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38303:6:21"},"nodeType":"YulFunctionCall","src":"38303:30:21"},"nodeType":"YulExpressionStatement","src":"38303:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38353:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38364:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38349:3:21"},"nodeType":"YulFunctionCall","src":"38349:18:21"},{"hexValue":"4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520","kind":"string","nodeType":"YulLiteral","src":"38369:34:21","type":"","value":"Ownable2Step: caller is not the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38342:6:21"},"nodeType":"YulFunctionCall","src":"38342:62:21"},"nodeType":"YulExpressionStatement","src":"38342:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38424:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38435:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38420:3:21"},"nodeType":"YulFunctionCall","src":"38420:18:21"},{"hexValue":"6e6577206f776e6572","kind":"string","nodeType":"YulLiteral","src":"38440:11:21","type":"","value":"new owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38413:6:21"},"nodeType":"YulFunctionCall","src":"38413:39:21"},"nodeType":"YulExpressionStatement","src":"38413:39:21"},{"nodeType":"YulAssignment","src":"38461:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38473:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38484:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38469:3:21"},"nodeType":"YulFunctionCall","src":"38469:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38461:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38240:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38254:4:21","type":""}],"src":"38089:405:21"},{"body":{"nodeType":"YulBlock","src":"38673:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38690:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38701:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38683:6:21"},"nodeType":"YulFunctionCall","src":"38683:21:21"},"nodeType":"YulExpressionStatement","src":"38683:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38724:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38735:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38720:3:21"},"nodeType":"YulFunctionCall","src":"38720:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"38740:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38713:6:21"},"nodeType":"YulFunctionCall","src":"38713:30:21"},"nodeType":"YulExpressionStatement","src":"38713:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38763:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38774:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38759:3:21"},"nodeType":"YulFunctionCall","src":"38759:18:21"},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","kind":"string","nodeType":"YulLiteral","src":"38779:31:21","type":"","value":"LzApp: no trusted path record"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38752:6:21"},"nodeType":"YulFunctionCall","src":"38752:59:21"},"nodeType":"YulExpressionStatement","src":"38752:59:21"},{"nodeType":"YulAssignment","src":"38820:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38832:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38843:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38828:3:21"},"nodeType":"YulFunctionCall","src":"38828:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38820:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38650:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38664:4:21","type":""}],"src":"38499:353:21"},{"body":{"nodeType":"YulBlock","src":"39032:177:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39055:3:21"},{"name":"value0","nodeType":"YulIdentifier","src":"39060:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"39068:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"39042:12:21"},"nodeType":"YulFunctionCall","src":"39042:33:21"},"nodeType":"YulExpressionStatement","src":"39042:33:21"},{"nodeType":"YulVariableDeclaration","src":"39084:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39098:3:21"},{"name":"value1","nodeType":"YulIdentifier","src":"39103:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39094:3:21"},"nodeType":"YulFunctionCall","src":"39094:16:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"39088:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"39126:2:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39138:2:21","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"39142:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39134:3:21"},"nodeType":"YulFunctionCall","src":"39134:15:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39163:2:21","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"39167:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39159:3:21"},"nodeType":"YulFunctionCall","src":"39159:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"39171:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39155:3:21"},"nodeType":"YulFunctionCall","src":"39155:18:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"39151:3:21"},"nodeType":"YulFunctionCall","src":"39151:23:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39130:3:21"},"nodeType":"YulFunctionCall","src":"39130:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39119:6:21"},"nodeType":"YulFunctionCall","src":"39119:57:21"},"nodeType":"YulExpressionStatement","src":"39119:57:21"},{"nodeType":"YulAssignment","src":"39185:18:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"39196:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"39200:2:21","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39192:3:21"},"nodeType":"YulFunctionCall","src":"39192:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39185:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38992:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38997:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39005:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39013:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39024:3:21","type":""}],"src":"38857:352:21"},{"body":{"nodeType":"YulBlock","src":"39425:302:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39442:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39457:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"39465:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39453:3:21"},"nodeType":"YulFunctionCall","src":"39453:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39435:6:21"},"nodeType":"YulFunctionCall","src":"39435:38:21"},"nodeType":"YulExpressionStatement","src":"39435:38:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39493:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39504:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39489:3:21"},"nodeType":"YulFunctionCall","src":"39489:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"39509:2:21","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39482:6:21"},"nodeType":"YulFunctionCall","src":"39482:30:21"},"nodeType":"YulExpressionStatement","src":"39482:30:21"},{"nodeType":"YulVariableDeclaration","src":"39521:75:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39561:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"39569:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39581:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39592:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39577:3:21"},"nodeType":"YulFunctionCall","src":"39577:18:21"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"39535:25:21"},"nodeType":"YulFunctionCall","src":"39535:61:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"39525:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39616:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39627:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39612:3:21"},"nodeType":"YulFunctionCall","src":"39612:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"39636:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"39644:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39632:3:21"},"nodeType":"YulFunctionCall","src":"39632:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39605:6:21"},"nodeType":"YulFunctionCall","src":"39605:50:21"},"nodeType":"YulExpressionStatement","src":"39605:50:21"},{"nodeType":"YulAssignment","src":"39664:57:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"39698:6:21"},{"name":"value4","nodeType":"YulIdentifier","src":"39706:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"39714:6:21"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"39672:25:21"},"nodeType":"YulFunctionCall","src":"39672:49:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39664:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39362:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"39373:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39381:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39389:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39397:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39405:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39416:4:21","type":""}],"src":"39214:513:21"},{"body":{"nodeType":"YulBlock","src":"39913:217:21","statements":[{"nodeType":"YulAssignment","src":"39923:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"39946:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39931:3:21"},"nodeType":"YulFunctionCall","src":"39931:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39923:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39966:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"39977:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39959:6:21"},"nodeType":"YulFunctionCall","src":"39959:25:21"},"nodeType":"YulExpressionStatement","src":"39959:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40004:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40015:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40000:3:21"},"nodeType":"YulFunctionCall","src":"40000:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40024:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"40032:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40020:3:21"},"nodeType":"YulFunctionCall","src":"40020:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39993:6:21"},"nodeType":"YulFunctionCall","src":"39993:45:21"},"nodeType":"YulExpressionStatement","src":"39993:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40058:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40069:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40054:3:21"},"nodeType":"YulFunctionCall","src":"40054:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"40074:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40047:6:21"},"nodeType":"YulFunctionCall","src":"40047:34:21"},"nodeType":"YulExpressionStatement","src":"40047:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40101:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40112:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40097:3:21"},"nodeType":"YulFunctionCall","src":"40097:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"40117:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40090:6:21"},"nodeType":"YulFunctionCall","src":"40090:34:21"},"nodeType":"YulExpressionStatement","src":"40090:34:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39858:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"39869:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39877:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39885:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39893:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39904:4:21","type":""}],"src":"39732:398:21"},{"body":{"nodeType":"YulBlock","src":"40355:161:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40372:3:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40381:2:21","type":"","value":"33"},{"kind":"number","nodeType":"YulLiteral","src":"40385:58:21","type":"","value":"0x0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d051999"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"40377:3:21"},"nodeType":"YulFunctionCall","src":"40377:67:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40365:6:21"},"nodeType":"YulFunctionCall","src":"40365:80:21"},"nodeType":"YulExpressionStatement","src":"40365:80:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40465:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40470:2:21","type":"","value":"28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40461:3:21"},"nodeType":"YulFunctionCall","src":"40461:12:21"},{"name":"value0","nodeType":"YulIdentifier","src":"40475:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40454:6:21"},"nodeType":"YulFunctionCall","src":"40454:28:21"},"nodeType":"YulExpressionStatement","src":"40454:28:21"},{"nodeType":"YulAssignment","src":"40491:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40502:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"40507:2:21","type":"","value":"60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40498:3:21"},"nodeType":"YulFunctionCall","src":"40498:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40491:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40331:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40336:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40347:3:21","type":""}],"src":"40135:381:21"},{"body":{"nodeType":"YulBlock","src":"40730:289:21","statements":[{"nodeType":"YulVariableDeclaration","src":"40740:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"40750:6:21","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"40744:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40772:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40787:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"40795:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40783:3:21"},"nodeType":"YulFunctionCall","src":"40783:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40765:6:21"},"nodeType":"YulFunctionCall","src":"40765:34:21"},"nodeType":"YulExpressionStatement","src":"40765:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40819:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40830:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40815:3:21"},"nodeType":"YulFunctionCall","src":"40815:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40839:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"40847:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40835:3:21"},"nodeType":"YulFunctionCall","src":"40835:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40808:6:21"},"nodeType":"YulFunctionCall","src":"40808:43:21"},"nodeType":"YulExpressionStatement","src":"40808:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40871:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40882:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40867:3:21"},"nodeType":"YulFunctionCall","src":"40867:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"40887:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40860:6:21"},"nodeType":"YulFunctionCall","src":"40860:34:21"},"nodeType":"YulExpressionStatement","src":"40860:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40914:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"40925:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40910:3:21"},"nodeType":"YulFunctionCall","src":"40910:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"40930:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40903:6:21"},"nodeType":"YulFunctionCall","src":"40903:31:21"},"nodeType":"YulExpressionStatement","src":"40903:31:21"},{"nodeType":"YulAssignment","src":"40943:70:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"40977:6:21"},{"name":"value4","nodeType":"YulIdentifier","src":"40985:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40997:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41008:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40993:3:21"},"nodeType":"YulFunctionCall","src":"40993:19:21"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"40951:25:21"},"nodeType":"YulFunctionCall","src":"40951:62:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40943:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40667:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"40678:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"40686:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40694:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40702:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40710:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40721:4:21","type":""}],"src":"40521:498:21"},{"body":{"nodeType":"YulBlock","src":"41198:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41215:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41226:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41208:6:21"},"nodeType":"YulFunctionCall","src":"41208:21:21"},"nodeType":"YulExpressionStatement","src":"41208:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41249:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41260:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41245:3:21"},"nodeType":"YulFunctionCall","src":"41245:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"41265:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41238:6:21"},"nodeType":"YulFunctionCall","src":"41238:30:21"},"nodeType":"YulExpressionStatement","src":"41238:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41288:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41299:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41284:3:21"},"nodeType":"YulFunctionCall","src":"41284:18:21"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373","kind":"string","nodeType":"YulLiteral","src":"41304:34:21","type":"","value":"NonblockingLzApp: no stored mess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41277:6:21"},"nodeType":"YulFunctionCall","src":"41277:62:21"},"nodeType":"YulExpressionStatement","src":"41277:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41359:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41370:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41355:3:21"},"nodeType":"YulFunctionCall","src":"41355:18:21"},{"hexValue":"616765","kind":"string","nodeType":"YulLiteral","src":"41375:5:21","type":"","value":"age"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41348:6:21"},"nodeType":"YulFunctionCall","src":"41348:33:21"},"nodeType":"YulExpressionStatement","src":"41348:33:21"},{"nodeType":"YulAssignment","src":"41390:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41402:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41413:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41398:3:21"},"nodeType":"YulFunctionCall","src":"41398:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41390:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41175:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41189:4:21","type":""}],"src":"41024:399:21"},{"body":{"nodeType":"YulBlock","src":"41602:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41619:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41630:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41612:6:21"},"nodeType":"YulFunctionCall","src":"41612:21:21"},"nodeType":"YulExpressionStatement","src":"41612:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41653:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41664:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41649:3:21"},"nodeType":"YulFunctionCall","src":"41649:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"41669:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41642:6:21"},"nodeType":"YulFunctionCall","src":"41642:30:21"},"nodeType":"YulExpressionStatement","src":"41642:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41692:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41703:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41688:3:21"},"nodeType":"YulFunctionCall","src":"41688:18:21"},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f61","kind":"string","nodeType":"YulLiteral","src":"41708:34:21","type":"","value":"NonblockingLzApp: invalid payloa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41681:6:21"},"nodeType":"YulFunctionCall","src":"41681:62:21"},"nodeType":"YulExpressionStatement","src":"41681:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41763:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41774:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41759:3:21"},"nodeType":"YulFunctionCall","src":"41759:18:21"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"41779:3:21","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41752:6:21"},"nodeType":"YulFunctionCall","src":"41752:31:21"},"nodeType":"YulExpressionStatement","src":"41752:31:21"},{"nodeType":"YulAssignment","src":"41792:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41804:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"41815:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41800:3:21"},"nodeType":"YulFunctionCall","src":"41800:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41792:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41579:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41593:4:21","type":""}],"src":"41428:397:21"},{"body":{"nodeType":"YulBlock","src":"42039:284:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42056:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42071:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"42079:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42067:3:21"},"nodeType":"YulFunctionCall","src":"42067:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42049:6:21"},"nodeType":"YulFunctionCall","src":"42049:38:21"},"nodeType":"YulExpressionStatement","src":"42049:38:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42107:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42118:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42103:3:21"},"nodeType":"YulFunctionCall","src":"42103:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"42123:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42096:6:21"},"nodeType":"YulFunctionCall","src":"42096:31:21"},"nodeType":"YulExpressionStatement","src":"42096:31:21"},{"nodeType":"YulAssignment","src":"42136:70:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42170:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"42178:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42190:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42201:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42186:3:21"},"nodeType":"YulFunctionCall","src":"42186:19:21"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"42144:25:21"},"nodeType":"YulFunctionCall","src":"42144:62:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42136:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42226:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42237:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42222:3:21"},"nodeType":"YulFunctionCall","src":"42222:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42246:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42262:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"42266:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"42258:3:21"},"nodeType":"YulFunctionCall","src":"42258:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"42270:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42254:3:21"},"nodeType":"YulFunctionCall","src":"42254:18:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42242:3:21"},"nodeType":"YulFunctionCall","src":"42242:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42215:6:21"},"nodeType":"YulFunctionCall","src":"42215:59:21"},"nodeType":"YulExpressionStatement","src":"42215:59:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42294:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42305:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42290:3:21"},"nodeType":"YulFunctionCall","src":"42290:18:21"},{"name":"value4","nodeType":"YulIdentifier","src":"42310:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42283:6:21"},"nodeType":"YulFunctionCall","src":"42283:34:21"},"nodeType":"YulExpressionStatement","src":"42283:34:21"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41976:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"41987:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41995:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42003:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42011:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42019:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42030:4:21","type":""}],"src":"41830:493:21"},{"body":{"nodeType":"YulBlock","src":"42502:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42519:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42530:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42512:6:21"},"nodeType":"YulFunctionCall","src":"42512:21:21"},"nodeType":"YulExpressionStatement","src":"42512:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42564:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42549:3:21"},"nodeType":"YulFunctionCall","src":"42549:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"42569:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42542:6:21"},"nodeType":"YulFunctionCall","src":"42542:30:21"},"nodeType":"YulExpressionStatement","src":"42542:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42603:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42588:3:21"},"nodeType":"YulFunctionCall","src":"42588:18:21"},{"hexValue":"4c7a4170703a20696e76616c6964206d696e476173","kind":"string","nodeType":"YulLiteral","src":"42608:23:21","type":"","value":"LzApp: invalid minGas"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42581:6:21"},"nodeType":"YulFunctionCall","src":"42581:51:21"},"nodeType":"YulExpressionStatement","src":"42581:51:21"},{"nodeType":"YulAssignment","src":"42641:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42653:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42664:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42649:3:21"},"nodeType":"YulFunctionCall","src":"42649:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42641:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_170b524e2f6dce4d59ce169fe07ac17c10010b9aa611a4f22b7dd0fbb2a8548e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42479:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42493:4:21","type":""}],"src":"42328:345:21"},{"body":{"nodeType":"YulBlock","src":"42831:205:21","statements":[{"nodeType":"YulAssignment","src":"42841:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42853:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42864:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42849:3:21"},"nodeType":"YulFunctionCall","src":"42849:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42841:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"42876:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"42886:6:21","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"42880:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42908:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42923:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"42931:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42919:3:21"},"nodeType":"YulFunctionCall","src":"42919:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42901:6:21"},"nodeType":"YulFunctionCall","src":"42901:34:21"},"nodeType":"YulExpressionStatement","src":"42901:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"42966:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42951:3:21"},"nodeType":"YulFunctionCall","src":"42951:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42975:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"42983:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42971:3:21"},"nodeType":"YulFunctionCall","src":"42971:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42944:6:21"},"nodeType":"YulFunctionCall","src":"42944:43:21"},"nodeType":"YulExpressionStatement","src":"42944:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43007:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43018:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43003:3:21"},"nodeType":"YulFunctionCall","src":"43003:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"43023:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42996:6:21"},"nodeType":"YulFunctionCall","src":"42996:34:21"},"nodeType":"YulExpressionStatement","src":"42996:34:21"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42784:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42795:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42803:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42811:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42822:4:21","type":""}],"src":"42678:358:21"},{"body":{"nodeType":"YulBlock","src":"43230:275:21","statements":[{"nodeType":"YulAssignment","src":"43240:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43252:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43263:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43248:3:21"},"nodeType":"YulFunctionCall","src":"43248:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43240:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"43276:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"43286:6:21","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"43280:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43308:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43323:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43331:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43319:3:21"},"nodeType":"YulFunctionCall","src":"43319:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43301:6:21"},"nodeType":"YulFunctionCall","src":"43301:34:21"},"nodeType":"YulExpressionStatement","src":"43301:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43355:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43366:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43351:3:21"},"nodeType":"YulFunctionCall","src":"43351:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43375:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43383:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43371:3:21"},"nodeType":"YulFunctionCall","src":"43371:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43344:6:21"},"nodeType":"YulFunctionCall","src":"43344:43:21"},"nodeType":"YulExpressionStatement","src":"43344:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43418:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43403:3:21"},"nodeType":"YulFunctionCall","src":"43403:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"43427:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43443:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"43448:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"43439:3:21"},"nodeType":"YulFunctionCall","src":"43439:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"43452:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43435:3:21"},"nodeType":"YulFunctionCall","src":"43435:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43423:3:21"},"nodeType":"YulFunctionCall","src":"43423:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43396:6:21"},"nodeType":"YulFunctionCall","src":"43396:60:21"},"nodeType":"YulExpressionStatement","src":"43396:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43476:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"43487:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43472:3:21"},"nodeType":"YulFunctionCall","src":"43472:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"43492:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43465:6:21"},"nodeType":"YulFunctionCall","src":"43465:34:21"},"nodeType":"YulExpressionStatement","src":"43465:34:21"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_address_t_rational_6_by_1__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43175:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"43186:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"43194:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43202:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43210:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43221:4:21","type":""}],"src":"43041:464:21"},{"body":{"nodeType":"YulBlock","src":"43573:378:21","statements":[{"body":{"nodeType":"YulBlock","src":"43622:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43631:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43634:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43624:6:21"},"nodeType":"YulFunctionCall","src":"43624:12:21"},"nodeType":"YulExpressionStatement","src":"43624:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43601:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"43609:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43597:3:21"},"nodeType":"YulFunctionCall","src":"43597:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"43616:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"43593:3:21"},"nodeType":"YulFunctionCall","src":"43593:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43586:6:21"},"nodeType":"YulFunctionCall","src":"43586:35:21"},"nodeType":"YulIf","src":"43583:55:21"},{"nodeType":"YulVariableDeclaration","src":"43647:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43663:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43657:5:21"},"nodeType":"YulFunctionCall","src":"43657:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"43651:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43679:63:21","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"43738:2:21"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"43710:27:21"},"nodeType":"YulFunctionCall","src":"43710:31:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"43694:15:21"},"nodeType":"YulFunctionCall","src":"43694:48:21"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"43683:7:21","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"43758:7:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43767:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43751:6:21"},"nodeType":"YulFunctionCall","src":"43751:19:21"},"nodeType":"YulExpressionStatement","src":"43751:19:21"},{"body":{"nodeType":"YulBlock","src":"43818:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43827:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43830:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43820:6:21"},"nodeType":"YulFunctionCall","src":"43820:12:21"},"nodeType":"YulExpressionStatement","src":"43820:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43793:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43801:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43789:3:21"},"nodeType":"YulFunctionCall","src":"43789:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"43806:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43785:3:21"},"nodeType":"YulFunctionCall","src":"43785:26:21"},{"name":"end","nodeType":"YulIdentifier","src":"43813:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43782:2:21"},"nodeType":"YulFunctionCall","src":"43782:35:21"},"nodeType":"YulIf","src":"43779:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"43882:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"43890:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43878:3:21"},"nodeType":"YulFunctionCall","src":"43878:17:21"},{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"43901:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"43910:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43897:3:21"},"nodeType":"YulFunctionCall","src":"43897:18:21"},{"name":"_1","nodeType":"YulIdentifier","src":"43917:2:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"43843:34:21"},"nodeType":"YulFunctionCall","src":"43843:77:21"},"nodeType":"YulExpressionStatement","src":"43843:77:21"},{"nodeType":"YulAssignment","src":"43929:16:21","value":{"name":"array_1","nodeType":"YulIdentifier","src":"43938:7:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"43929:5:21"}]}]},"name":"abi_decode_bytes_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43547:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"43555:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"43563:5:21","type":""}],"src":"43510:441:21"},{"body":{"nodeType":"YulBlock","src":"44046:245:21","statements":[{"body":{"nodeType":"YulBlock","src":"44092:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44101:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44104:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44094:6:21"},"nodeType":"YulFunctionCall","src":"44094:12:21"},"nodeType":"YulExpressionStatement","src":"44094:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"44067:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"44076:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44063:3:21"},"nodeType":"YulFunctionCall","src":"44063:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"44088:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44059:3:21"},"nodeType":"YulFunctionCall","src":"44059:32:21"},"nodeType":"YulIf","src":"44056:52:21"},{"nodeType":"YulVariableDeclaration","src":"44117:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44137:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44131:5:21"},"nodeType":"YulFunctionCall","src":"44131:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"44121:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"44190:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44199:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44202:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"44192:6:21"},"nodeType":"YulFunctionCall","src":"44192:12:21"},"nodeType":"YulExpressionStatement","src":"44192:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44162:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44178:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"44182:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"44174:3:21"},"nodeType":"YulFunctionCall","src":"44174:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"44186:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44170:3:21"},"nodeType":"YulFunctionCall","src":"44170:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44159:2:21"},"nodeType":"YulFunctionCall","src":"44159:30:21"},"nodeType":"YulIf","src":"44156:50:21"},{"nodeType":"YulAssignment","src":"44215:70:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44257:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"44268:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44253:3:21"},"nodeType":"YulFunctionCall","src":"44253:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"44277:7:21"}],"functionName":{"name":"abi_decode_bytes_fromMemory","nodeType":"YulIdentifier","src":"44225:27:21"},"nodeType":"YulFunctionCall","src":"44225:60:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"44215:6:21"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44012:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"44023:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"44035:6:21","type":""}],"src":"43956:335:21"},{"body":{"nodeType":"YulBlock","src":"44397:1101:21","statements":[{"body":{"nodeType":"YulBlock","src":"44438:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"44440:16:21"},"nodeType":"YulFunctionCall","src":"44440:18:21"},"nodeType":"YulExpressionStatement","src":"44440:18:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"44413:3:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44426:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"44430:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"44422:3:21"},"nodeType":"YulFunctionCall","src":"44422:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"44434:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44418:3:21"},"nodeType":"YulFunctionCall","src":"44418:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44410:2:21"},"nodeType":"YulFunctionCall","src":"44410:27:21"},"nodeType":"YulIf","src":"44407:53:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44512:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44550:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"44544:5:21"},"nodeType":"YulFunctionCall","src":"44544:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"44518:25:21"},"nodeType":"YulFunctionCall","src":"44518:38:21"},{"name":"len","nodeType":"YulIdentifier","src":"44558:3:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"44469:42:21"},"nodeType":"YulFunctionCall","src":"44469:93:21"},"nodeType":"YulExpressionStatement","src":"44469:93:21"},{"nodeType":"YulVariableDeclaration","src":"44571:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"44588:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"44575:9:21","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"44632:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"44646:32:21","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"44665:3:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44674:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"44670:3:21"},"nodeType":"YulFunctionCall","src":"44670:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44661:3:21"},"nodeType":"YulFunctionCall","src":"44661:17:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"44650:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44691:48:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44734:4:21"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"44705:28:21"},"nodeType":"YulFunctionCall","src":"44705:34:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"44695:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"44752:18:21","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"44761:9:21"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"44756:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"44840:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"44865:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44890:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"44895:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44886:3:21"},"nodeType":"YulFunctionCall","src":"44886:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"44873:12:21"},"nodeType":"YulFunctionCall","src":"44873:33:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"44858:6:21"},"nodeType":"YulFunctionCall","src":"44858:49:21"},"nodeType":"YulExpressionStatement","src":"44858:49:21"},{"nodeType":"YulAssignment","src":"44924:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"44938:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"44946:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44934:3:21"},"nodeType":"YulFunctionCall","src":"44934:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"44924:6:21"}]},{"nodeType":"YulAssignment","src":"44965:33:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"44982:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"44993:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44978:3:21"},"nodeType":"YulFunctionCall","src":"44978:20:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"44965:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"44794:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"44797:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"44791:2:21"},"nodeType":"YulFunctionCall","src":"44791:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"44806:21:21","statements":[{"nodeType":"YulAssignment","src":"44808:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"44817:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"44820:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44813:3:21"},"nodeType":"YulFunctionCall","src":"44813:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"44808:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"44787:3:21","statements":[]},"src":"44783:229:21"},{"body":{"nodeType":"YulBlock","src":"45057:127:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"45082:6:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"45111:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"45116:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45107:3:21"},"nodeType":"YulFunctionCall","src":"45107:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"45094:12:21"},"nodeType":"YulFunctionCall","src":"45094:33:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45145:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"45148:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"45141:3:21"},"nodeType":"YulFunctionCall","src":"45141:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"45154:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45137:3:21"},"nodeType":"YulFunctionCall","src":"45137:21:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45164:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"45160:3:21"},"nodeType":"YulFunctionCall","src":"45160:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"45133:3:21"},"nodeType":"YulFunctionCall","src":"45133:34:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"45129:3:21"},"nodeType":"YulFunctionCall","src":"45129:39:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45090:3:21"},"nodeType":"YulFunctionCall","src":"45090:79:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"45075:6:21"},"nodeType":"YulFunctionCall","src":"45075:95:21"},"nodeType":"YulExpressionStatement","src":"45075:95:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"45031:7:21"},{"name":"len","nodeType":"YulIdentifier","src":"45040:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"45028:2:21"},"nodeType":"YulFunctionCall","src":"45028:16:21"},"nodeType":"YulIf","src":"45025:159:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"45204:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45218:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"45221:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"45214:3:21"},"nodeType":"YulFunctionCall","src":"45214:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"45227:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45210:3:21"},"nodeType":"YulFunctionCall","src":"45210:19:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"45197:6:21"},"nodeType":"YulFunctionCall","src":"45197:33:21"},"nodeType":"YulExpressionStatement","src":"45197:33:21"}]},"nodeType":"YulCase","src":"44625:615:21","value":{"kind":"number","nodeType":"YulLiteral","src":"44630:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"45257:235:21","statements":[{"nodeType":"YulVariableDeclaration","src":"45271:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"45284:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"45275:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"45317:74:21","statements":[{"nodeType":"YulAssignment","src":"45335:42:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"45361:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"45366:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45357:3:21"},"nodeType":"YulFunctionCall","src":"45357:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"45344:12:21"},"nodeType":"YulFunctionCall","src":"45344:33:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45335:5:21"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"45301:3:21"},"nodeType":"YulIf","src":"45298:93:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"45411:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45470:5:21"},{"name":"len","nodeType":"YulIdentifier","src":"45477:3:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"45417:52:21"},"nodeType":"YulFunctionCall","src":"45417:64:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"45404:6:21"},"nodeType":"YulFunctionCall","src":"45404:78:21"},"nodeType":"YulExpressionStatement","src":"45404:78:21"}]},"nodeType":"YulCase","src":"45249:243:21","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"44608:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"44613:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44605:2:21"},"nodeType":"YulFunctionCall","src":"44605:11:21"},"nodeType":"YulSwitch","src":"44598:894:21"}]},"name":"copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"44377:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"44383:3:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"44388:3:21","type":""}],"src":"44296:1202:21"},{"body":{"nodeType":"YulBlock","src":"45684:275:21","statements":[{"nodeType":"YulAssignment","src":"45694:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45706:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45717:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45702:3:21"},"nodeType":"YulFunctionCall","src":"45702:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45694:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"45730:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"45740:6:21","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"45734:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45762:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45777:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"45785:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45773:3:21"},"nodeType":"YulFunctionCall","src":"45773:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45755:6:21"},"nodeType":"YulFunctionCall","src":"45755:34:21"},"nodeType":"YulExpressionStatement","src":"45755:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45809:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45805:3:21"},"nodeType":"YulFunctionCall","src":"45805:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45829:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"45837:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45825:3:21"},"nodeType":"YulFunctionCall","src":"45825:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45798:6:21"},"nodeType":"YulFunctionCall","src":"45798:43:21"},"nodeType":"YulExpressionStatement","src":"45798:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45861:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45872:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45857:3:21"},"nodeType":"YulFunctionCall","src":"45857:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"45881:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45897:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"45902:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"45893:3:21"},"nodeType":"YulFunctionCall","src":"45893:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"45906:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45889:3:21"},"nodeType":"YulFunctionCall","src":"45889:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"45877:3:21"},"nodeType":"YulFunctionCall","src":"45877:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45850:6:21"},"nodeType":"YulFunctionCall","src":"45850:60:21"},"nodeType":"YulExpressionStatement","src":"45850:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45930:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"45941:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45926:3:21"},"nodeType":"YulFunctionCall","src":"45926:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"45946:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45919:6:21"},"nodeType":"YulFunctionCall","src":"45919:34:21"},"nodeType":"YulExpressionStatement","src":"45919:34:21"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45629:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"45640:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"45648:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45656:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45664:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45675:4:21","type":""}],"src":"45503:456:21"},{"body":{"nodeType":"YulBlock","src":"46138:167:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46155:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46166:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46148:6:21"},"nodeType":"YulFunctionCall","src":"46148:21:21"},"nodeType":"YulExpressionStatement","src":"46148:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46189:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46200:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46185:3:21"},"nodeType":"YulFunctionCall","src":"46185:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"46205:2:21","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46178:6:21"},"nodeType":"YulFunctionCall","src":"46178:30:21"},"nodeType":"YulExpressionStatement","src":"46178:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46228:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46239:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46224:3:21"},"nodeType":"YulFunctionCall","src":"46224:18:21"},{"hexValue":"5065726d697373696f6e2044656e696564","kind":"string","nodeType":"YulLiteral","src":"46244:19:21","type":"","value":"Permission Denied"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46217:6:21"},"nodeType":"YulFunctionCall","src":"46217:47:21"},"nodeType":"YulExpressionStatement","src":"46217:47:21"},{"nodeType":"YulAssignment","src":"46273:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46296:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46281:3:21"},"nodeType":"YulFunctionCall","src":"46281:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46273:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7796ca3cfdc653c566dc65a58dc36b8e618ca503d2ee6999fe37fad5ffd51b7a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46115:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46129:4:21","type":""}],"src":"45964:341:21"},{"body":{"nodeType":"YulBlock","src":"46527:338:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46544:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46559:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"46567:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46555:3:21"},"nodeType":"YulFunctionCall","src":"46555:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46537:6:21"},"nodeType":"YulFunctionCall","src":"46537:38:21"},"nodeType":"YulExpressionStatement","src":"46537:38:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46595:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46606:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46591:3:21"},"nodeType":"YulFunctionCall","src":"46591:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"46611:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46584:6:21"},"nodeType":"YulFunctionCall","src":"46584:31:21"},"nodeType":"YulExpressionStatement","src":"46584:31:21"},{"nodeType":"YulVariableDeclaration","src":"46624:59:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46655:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46667:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46678:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46663:3:21"},"nodeType":"YulFunctionCall","src":"46663:19:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"46638:16:21"},"nodeType":"YulFunctionCall","src":"46638:45:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"46628:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46703:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46714:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46699:3:21"},"nodeType":"YulFunctionCall","src":"46699:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46723:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46739:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"46743:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"46735:3:21"},"nodeType":"YulFunctionCall","src":"46735:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"46747:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46731:3:21"},"nodeType":"YulFunctionCall","src":"46731:18:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"46719:3:21"},"nodeType":"YulFunctionCall","src":"46719:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46692:6:21"},"nodeType":"YulFunctionCall","src":"46692:59:21"},"nodeType":"YulExpressionStatement","src":"46692:59:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46771:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"46782:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46767:3:21"},"nodeType":"YulFunctionCall","src":"46767:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"46791:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"46799:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46787:3:21"},"nodeType":"YulFunctionCall","src":"46787:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46760:6:21"},"nodeType":"YulFunctionCall","src":"46760:50:21"},"nodeType":"YulExpressionStatement","src":"46760:50:21"},{"nodeType":"YulAssignment","src":"46819:40:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"46844:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"46852:6:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"46827:16:21"},"nodeType":"YulFunctionCall","src":"46827:32:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46819:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46472:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"46483:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46491:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46499:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46507:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46518:4:21","type":""}],"src":"46310:555:21"},{"body":{"nodeType":"YulBlock","src":"47044:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47061:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47072:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47054:6:21"},"nodeType":"YulFunctionCall","src":"47054:21:21"},"nodeType":"YulExpressionStatement","src":"47054:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47095:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47106:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47091:3:21"},"nodeType":"YulFunctionCall","src":"47091:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"47111:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47084:6:21"},"nodeType":"YulFunctionCall","src":"47084:30:21"},"nodeType":"YulExpressionStatement","src":"47084:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47145:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47130:3:21"},"nodeType":"YulFunctionCall","src":"47130:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"47150:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47123:6:21"},"nodeType":"YulFunctionCall","src":"47123:62:21"},"nodeType":"YulExpressionStatement","src":"47123:62:21"},{"nodeType":"YulAssignment","src":"47194:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47206:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47217:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47202:3:21"},"nodeType":"YulFunctionCall","src":"47202:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47194:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47021:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47035:4:21","type":""}],"src":"46870:356:21"},{"body":{"nodeType":"YulBlock","src":"47423:275:21","statements":[{"nodeType":"YulAssignment","src":"47433:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47445:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47456:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47441:3:21"},"nodeType":"YulFunctionCall","src":"47441:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47433:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"47469:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47487:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"47492:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"47483:3:21"},"nodeType":"YulFunctionCall","src":"47483:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"47496:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47479:3:21"},"nodeType":"YulFunctionCall","src":"47479:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"47473:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47514:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47529:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"47537:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47525:3:21"},"nodeType":"YulFunctionCall","src":"47525:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47507:6:21"},"nodeType":"YulFunctionCall","src":"47507:34:21"},"nodeType":"YulExpressionStatement","src":"47507:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47561:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47572:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47557:3:21"},"nodeType":"YulFunctionCall","src":"47557:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"47577:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47550:6:21"},"nodeType":"YulFunctionCall","src":"47550:34:21"},"nodeType":"YulExpressionStatement","src":"47550:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47604:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47615:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47600:3:21"},"nodeType":"YulFunctionCall","src":"47600:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"47624:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"47632:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47620:3:21"},"nodeType":"YulFunctionCall","src":"47620:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47593:6:21"},"nodeType":"YulFunctionCall","src":"47593:43:21"},"nodeType":"YulExpressionStatement","src":"47593:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47656:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"47667:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47652:3:21"},"nodeType":"YulFunctionCall","src":"47652:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"47676:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"47684:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"47672:3:21"},"nodeType":"YulFunctionCall","src":"47672:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47645:6:21"},"nodeType":"YulFunctionCall","src":"47645:47:21"},"nodeType":"YulExpressionStatement","src":"47645:47:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47368:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"47379:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"47387:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47395:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47403:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47414:4:21","type":""}],"src":"47231:467:21"},{"body":{"nodeType":"YulBlock","src":"47778:659:21","statements":[{"body":{"nodeType":"YulBlock","src":"47827:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47836:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47839:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47829:6:21"},"nodeType":"YulFunctionCall","src":"47829:12:21"},"nodeType":"YulExpressionStatement","src":"47829:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"47806:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"47814:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47802:3:21"},"nodeType":"YulFunctionCall","src":"47802:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"47821:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"47798:3:21"},"nodeType":"YulFunctionCall","src":"47798:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"47791:6:21"},"nodeType":"YulFunctionCall","src":"47791:35:21"},"nodeType":"YulIf","src":"47788:55:21"},{"nodeType":"YulVariableDeclaration","src":"47852:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"47868:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47862:5:21"},"nodeType":"YulFunctionCall","src":"47862:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"47856:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47884:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"47894:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"47888:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47907:71:21","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"47974:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"47934:39:21"},"nodeType":"YulFunctionCall","src":"47934:43:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"47918:15:21"},"nodeType":"YulFunctionCall","src":"47918:60:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"47911:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47987:16:21","value":{"name":"dst","nodeType":"YulIdentifier","src":"48000:3:21"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"47991:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"48019:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"48024:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48012:6:21"},"nodeType":"YulFunctionCall","src":"48012:15:21"},"nodeType":"YulExpressionStatement","src":"48012:15:21"},{"nodeType":"YulAssignment","src":"48036:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"48047:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48052:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48043:3:21"},"nodeType":"YulFunctionCall","src":"48043:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"48036:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"48064:46:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48086:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48098:1:21","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"48101:2:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"48094:3:21"},"nodeType":"YulFunctionCall","src":"48094:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48082:3:21"},"nodeType":"YulFunctionCall","src":"48082:23:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48107:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48078:3:21"},"nodeType":"YulFunctionCall","src":"48078:32:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"48068:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"48138:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48147:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48150:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"48140:6:21"},"nodeType":"YulFunctionCall","src":"48140:12:21"},"nodeType":"YulExpressionStatement","src":"48140:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"48125:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"48133:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48122:2:21"},"nodeType":"YulFunctionCall","src":"48122:15:21"},"nodeType":"YulIf","src":"48119:35:21"},{"nodeType":"YulVariableDeclaration","src":"48163:26:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48178:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48186:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48174:3:21"},"nodeType":"YulFunctionCall","src":"48174:15:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"48167:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"48254:154:21","statements":[{"nodeType":"YulVariableDeclaration","src":"48268:23:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48287:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48281:5:21"},"nodeType":"YulFunctionCall","src":"48281:10:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"48272:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48329:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"48304:24:21"},"nodeType":"YulFunctionCall","src":"48304:31:21"},"nodeType":"YulExpressionStatement","src":"48304:31:21"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"48355:3:21"},{"name":"value","nodeType":"YulIdentifier","src":"48360:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48348:6:21"},"nodeType":"YulFunctionCall","src":"48348:18:21"},"nodeType":"YulExpressionStatement","src":"48348:18:21"},{"nodeType":"YulAssignment","src":"48379:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"48390:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48395:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48386:3:21"},"nodeType":"YulFunctionCall","src":"48386:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"48379:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48209:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"48214:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48206:2:21"},"nodeType":"YulFunctionCall","src":"48206:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"48222:23:21","statements":[{"nodeType":"YulAssignment","src":"48224:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48235:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48240:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48231:3:21"},"nodeType":"YulFunctionCall","src":"48231:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"48224:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"48202:3:21","statements":[]},"src":"48198:210:21"},{"nodeType":"YulAssignment","src":"48417:14:21","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"48426:5:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"48417:5:21"}]}]},"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"47752:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"47760:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"47768:5:21","type":""}],"src":"47703:734:21"},{"body":{"nodeType":"YulBlock","src":"48517:584:21","statements":[{"body":{"nodeType":"YulBlock","src":"48566:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48575:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48578:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"48568:6:21"},"nodeType":"YulFunctionCall","src":"48568:12:21"},"nodeType":"YulExpressionStatement","src":"48568:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48545:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"48553:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48541:3:21"},"nodeType":"YulFunctionCall","src":"48541:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"48560:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"48537:3:21"},"nodeType":"YulFunctionCall","src":"48537:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"48530:6:21"},"nodeType":"YulFunctionCall","src":"48530:35:21"},"nodeType":"YulIf","src":"48527:55:21"},{"nodeType":"YulVariableDeclaration","src":"48591:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48607:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48601:5:21"},"nodeType":"YulFunctionCall","src":"48601:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"48595:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48623:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"48633:4:21","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"48627:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48646:71:21","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"48713:2:21"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"48673:39:21"},"nodeType":"YulFunctionCall","src":"48673:43:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"48657:15:21"},"nodeType":"YulFunctionCall","src":"48657:60:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"48650:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"48726:16:21","value":{"name":"dst","nodeType":"YulIdentifier","src":"48739:3:21"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"48730:5:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"48758:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"48763:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48751:6:21"},"nodeType":"YulFunctionCall","src":"48751:15:21"},"nodeType":"YulExpressionStatement","src":"48751:15:21"},{"nodeType":"YulAssignment","src":"48775:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"48786:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48791:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48782:3:21"},"nodeType":"YulFunctionCall","src":"48782:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"48775:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"48803:46:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48825:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48837:1:21","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"48840:2:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"48833:3:21"},"nodeType":"YulFunctionCall","src":"48833:10:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48821:3:21"},"nodeType":"YulFunctionCall","src":"48821:23:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48846:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48817:3:21"},"nodeType":"YulFunctionCall","src":"48817:32:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"48807:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"48877:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"48886:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"48889:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"48879:6:21"},"nodeType":"YulFunctionCall","src":"48879:12:21"},"nodeType":"YulExpressionStatement","src":"48879:12:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"48864:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"48872:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"48861:2:21"},"nodeType":"YulFunctionCall","src":"48861:15:21"},"nodeType":"YulIf","src":"48858:35:21"},{"nodeType":"YulVariableDeclaration","src":"48902:26:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"48917:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48925:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48913:3:21"},"nodeType":"YulFunctionCall","src":"48913:15:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"48906:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"48993:79:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"49014:3:21"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"49025:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49019:5:21"},"nodeType":"YulFunctionCall","src":"49019:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49007:6:21"},"nodeType":"YulFunctionCall","src":"49007:23:21"},"nodeType":"YulExpressionStatement","src":"49007:23:21"},{"nodeType":"YulAssignment","src":"49043:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"49054:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"49059:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49050:3:21"},"nodeType":"YulFunctionCall","src":"49050:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"49043:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48948:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"48953:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"48945:2:21"},"nodeType":"YulFunctionCall","src":"48945:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"48961:23:21","statements":[{"nodeType":"YulAssignment","src":"48963:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"48974:3:21"},{"name":"_2","nodeType":"YulIdentifier","src":"48979:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48970:3:21"},"nodeType":"YulFunctionCall","src":"48970:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"48963:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"48941:3:21","statements":[]},"src":"48937:135:21"},{"nodeType":"YulAssignment","src":"49081:14:21","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"49090:5:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"49081:5:21"}]}]},"name":"abi_decode_array_uint256_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48491:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"48499:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"48507:5:21","type":""}],"src":"48442:659:21"},{"body":{"nodeType":"YulBlock","src":"49326:1684:21","statements":[{"body":{"nodeType":"YulBlock","src":"49373:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49382:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49385:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49375:6:21"},"nodeType":"YulFunctionCall","src":"49375:12:21"},"nodeType":"YulExpressionStatement","src":"49375:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"49347:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"49356:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49343:3:21"},"nodeType":"YulFunctionCall","src":"49343:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"49368:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49339:3:21"},"nodeType":"YulFunctionCall","src":"49339:33:21"},"nodeType":"YulIf","src":"49336:53:21"},{"nodeType":"YulVariableDeclaration","src":"49398:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49418:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49412:5:21"},"nodeType":"YulFunctionCall","src":"49412:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"49402:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"49437:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49455:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"49459:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"49451:3:21"},"nodeType":"YulFunctionCall","src":"49451:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"49463:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49447:3:21"},"nodeType":"YulFunctionCall","src":"49447:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"49441:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"49492:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49501:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49504:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49494:6:21"},"nodeType":"YulFunctionCall","src":"49494:12:21"},"nodeType":"YulExpressionStatement","src":"49494:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"49480:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"49488:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49477:2:21"},"nodeType":"YulFunctionCall","src":"49477:14:21"},"nodeType":"YulIf","src":"49474:34:21"},{"nodeType":"YulVariableDeclaration","src":"49517:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49531:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"49542:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49527:3:21"},"nodeType":"YulFunctionCall","src":"49527:22:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"49521:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"49591:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49600:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49603:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49593:6:21"},"nodeType":"YulFunctionCall","src":"49593:12:21"},"nodeType":"YulExpressionStatement","src":"49593:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"49569:7:21"},{"name":"_2","nodeType":"YulIdentifier","src":"49578:2:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49565:3:21"},"nodeType":"YulFunctionCall","src":"49565:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"49583:6:21","type":"","value":"0x0100"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"49561:3:21"},"nodeType":"YulFunctionCall","src":"49561:29:21"},"nodeType":"YulIf","src":"49558:49:21"},{"nodeType":"YulVariableDeclaration","src":"49616:35:21","value":{"arguments":[],"functionName":{"name":"allocate_memory_6906","nodeType":"YulIdentifier","src":"49629:20:21"},"nodeType":"YulFunctionCall","src":"49629:22:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"49620:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49667:5:21"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"49704:2:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"49674:29:21"},"nodeType":"YulFunctionCall","src":"49674:33:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49660:6:21"},"nodeType":"YulFunctionCall","src":"49660:48:21"},"nodeType":"YulExpressionStatement","src":"49660:48:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49728:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"49735:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49724:3:21"},"nodeType":"YulFunctionCall","src":"49724:14:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"49750:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"49754:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49746:3:21"},"nodeType":"YulFunctionCall","src":"49746:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49740:5:21"},"nodeType":"YulFunctionCall","src":"49740:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49717:6:21"},"nodeType":"YulFunctionCall","src":"49717:42:21"},"nodeType":"YulExpressionStatement","src":"49717:42:21"},{"nodeType":"YulVariableDeclaration","src":"49768:34:21","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"49794:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"49798:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49790:3:21"},"nodeType":"YulFunctionCall","src":"49790:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49784:5:21"},"nodeType":"YulFunctionCall","src":"49784:18:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"49772:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"49831:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"49840:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"49843:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"49833:6:21"},"nodeType":"YulFunctionCall","src":"49833:12:21"},"nodeType":"YulExpressionStatement","src":"49833:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"49817:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"49827:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"49814:2:21"},"nodeType":"YulFunctionCall","src":"49814:16:21"},"nodeType":"YulIf","src":"49811:36:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49867:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"49874:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49863:3:21"},"nodeType":"YulFunctionCall","src":"49863:14:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"49923:2:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"49927:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49919:3:21"},"nodeType":"YulFunctionCall","src":"49919:17:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"49938:7:21"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"49879:39:21"},"nodeType":"YulFunctionCall","src":"49879:67:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49856:6:21"},"nodeType":"YulFunctionCall","src":"49856:91:21"},"nodeType":"YulExpressionStatement","src":"49856:91:21"},{"nodeType":"YulVariableDeclaration","src":"49956:34:21","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"49982:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"49986:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49978:3:21"},"nodeType":"YulFunctionCall","src":"49978:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49972:5:21"},"nodeType":"YulFunctionCall","src":"49972:18:21"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"49960:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"50019:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50028:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50031:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50021:6:21"},"nodeType":"YulFunctionCall","src":"50021:12:21"},"nodeType":"YulExpressionStatement","src":"50021:12:21"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"50005:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"50015:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50002:2:21"},"nodeType":"YulFunctionCall","src":"50002:16:21"},"nodeType":"YulIf","src":"49999:36:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50055:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"50062:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50051:3:21"},"nodeType":"YulFunctionCall","src":"50051:14:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"50111:2:21"},{"name":"offset_2","nodeType":"YulIdentifier","src":"50115:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50107:3:21"},"nodeType":"YulFunctionCall","src":"50107:17:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"50126:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nodeType":"YulIdentifier","src":"50067:39:21"},"nodeType":"YulFunctionCall","src":"50067:67:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50044:6:21"},"nodeType":"YulFunctionCall","src":"50044:91:21"},"nodeType":"YulExpressionStatement","src":"50044:91:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50155:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"50162:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50151:3:21"},"nodeType":"YulFunctionCall","src":"50151:15:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"50178:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"50182:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50174:3:21"},"nodeType":"YulFunctionCall","src":"50174:12:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50168:5:21"},"nodeType":"YulFunctionCall","src":"50168:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50144:6:21"},"nodeType":"YulFunctionCall","src":"50144:44:21"},"nodeType":"YulExpressionStatement","src":"50144:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50208:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"50215:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50204:3:21"},"nodeType":"YulFunctionCall","src":"50204:15:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"50253:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"50257:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50249:3:21"},"nodeType":"YulFunctionCall","src":"50249:12:21"}],"functionName":{"name":"abi_decode_uint8_fromMemory","nodeType":"YulIdentifier","src":"50221:27:21"},"nodeType":"YulFunctionCall","src":"50221:41:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50197:6:21"},"nodeType":"YulFunctionCall","src":"50197:66:21"},"nodeType":"YulExpressionStatement","src":"50197:66:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50283:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"50290:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50279:3:21"},"nodeType":"YulFunctionCall","src":"50279:15:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"50306:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"50310:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50302:3:21"},"nodeType":"YulFunctionCall","src":"50302:12:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50296:5:21"},"nodeType":"YulFunctionCall","src":"50296:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50272:6:21"},"nodeType":"YulFunctionCall","src":"50272:44:21"},"nodeType":"YulExpressionStatement","src":"50272:44:21"},{"nodeType":"YulVariableDeclaration","src":"50325:35:21","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"50351:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"50355:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50347:3:21"},"nodeType":"YulFunctionCall","src":"50347:12:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50341:5:21"},"nodeType":"YulFunctionCall","src":"50341:19:21"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"50329:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"50389:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50398:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50401:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50391:6:21"},"nodeType":"YulFunctionCall","src":"50391:12:21"},"nodeType":"YulExpressionStatement","src":"50391:12:21"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"50375:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"50385:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50372:2:21"},"nodeType":"YulFunctionCall","src":"50372:16:21"},"nodeType":"YulIf","src":"50369:36:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50425:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"50432:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50421:3:21"},"nodeType":"YulFunctionCall","src":"50421:15:21"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"50470:2:21"},{"name":"offset_3","nodeType":"YulIdentifier","src":"50474:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50466:3:21"},"nodeType":"YulFunctionCall","src":"50466:17:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"50485:7:21"}],"functionName":{"name":"abi_decode_bytes_fromMemory","nodeType":"YulIdentifier","src":"50438:27:21"},"nodeType":"YulFunctionCall","src":"50438:55:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50414:6:21"},"nodeType":"YulFunctionCall","src":"50414:80:21"},"nodeType":"YulExpressionStatement","src":"50414:80:21"},{"nodeType":"YulAssignment","src":"50503:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"50513:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"50503:6:21"}]},{"nodeType":"YulAssignment","src":"50527:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50547:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"50558:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50543:3:21"},"nodeType":"YulFunctionCall","src":"50543:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50537:5:21"},"nodeType":"YulFunctionCall","src":"50537:25:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"50527:6:21"}]},{"nodeType":"YulAssignment","src":"50571:56:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50612:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"50623:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50608:3:21"},"nodeType":"YulFunctionCall","src":"50608:18:21"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"50581:26:21"},"nodeType":"YulFunctionCall","src":"50581:46:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"50571:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"50636:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50662:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"50673:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50658:3:21"},"nodeType":"YulFunctionCall","src":"50658:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50652:5:21"},"nodeType":"YulFunctionCall","src":"50652:25:21"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"50640:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"50706:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50715:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50718:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50708:6:21"},"nodeType":"YulFunctionCall","src":"50708:12:21"},"nodeType":"YulExpressionStatement","src":"50708:12:21"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"50692:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"50702:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50689:2:21"},"nodeType":"YulFunctionCall","src":"50689:16:21"},"nodeType":"YulIf","src":"50686:36:21"},{"nodeType":"YulAssignment","src":"50731:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50785:9:21"},{"name":"offset_4","nodeType":"YulIdentifier","src":"50796:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50781:3:21"},"nodeType":"YulFunctionCall","src":"50781:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"50807:7:21"}],"functionName":{"name":"abi_decode_array_address_dyn_fromMemory","nodeType":"YulIdentifier","src":"50741:39:21"},"nodeType":"YulFunctionCall","src":"50741:74:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"50731:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"50824:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50850:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"50861:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50846:3:21"},"nodeType":"YulFunctionCall","src":"50846:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"50840:5:21"},"nodeType":"YulFunctionCall","src":"50840:26:21"},"variables":[{"name":"offset_5","nodeType":"YulTypedName","src":"50828:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"50895:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"50904:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"50907:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"50897:6:21"},"nodeType":"YulFunctionCall","src":"50897:12:21"},"nodeType":"YulExpressionStatement","src":"50897:12:21"}]},"condition":{"arguments":[{"name":"offset_5","nodeType":"YulIdentifier","src":"50881:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"50891:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"50878:2:21"},"nodeType":"YulFunctionCall","src":"50878:16:21"},"nodeType":"YulIf","src":"50875:36:21"},{"nodeType":"YulAssignment","src":"50920:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50974:9:21"},{"name":"offset_5","nodeType":"YulIdentifier","src":"50985:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50970:3:21"},"nodeType":"YulFunctionCall","src":"50970:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"50996:7:21"}],"functionName":{"name":"abi_decode_array_uint256_dyn_fromMemory","nodeType":"YulIdentifier","src":"50930:39:21"},"nodeType":"YulFunctionCall","src":"50930:74:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"50920:6:21"}]}]},"name":"abi_decode_tuple_t_struct$_InData_$2942_memory_ptrt_uint256t_boolt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49260:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"49271:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"49283:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"49291:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"49299:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"49307:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"49315:6:21","type":""}],"src":"49106:1904:21"},{"body":{"nodeType":"YulBlock","src":"51184:400:21","statements":[{"nodeType":"YulVariableDeclaration","src":"51194:16:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"51207:3:21"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"51198:5:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51219:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51239:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51233:5:21"},"nodeType":"YulFunctionCall","src":"51233:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"51223:6:21","type":""}]},{"nodeType":"YulAssignment","src":"51255:12:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"51264:3:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"51255:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"51276:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"51286:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"51280:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51299:29:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51317:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"51325:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51313:3:21"},"nodeType":"YulFunctionCall","src":"51313:15:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"51303:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51337:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"51346:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"51341:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"51405:152:21","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"51426:5:21"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"51443:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51437:5:21"},"nodeType":"YulFunctionCall","src":"51437:13:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"51460:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"51465:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"51456:3:21"},"nodeType":"YulFunctionCall","src":"51456:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"51469:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51452:3:21"},"nodeType":"YulFunctionCall","src":"51452:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"51433:3:21"},"nodeType":"YulFunctionCall","src":"51433:39:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51419:6:21"},"nodeType":"YulFunctionCall","src":"51419:54:21"},"nodeType":"YulExpressionStatement","src":"51419:54:21"},{"nodeType":"YulAssignment","src":"51486:23:21","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"51499:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"51506:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51495:3:21"},"nodeType":"YulFunctionCall","src":"51495:14:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"51486:5:21"}]},{"nodeType":"YulAssignment","src":"51522:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"51536:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"51544:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51532:3:21"},"nodeType":"YulFunctionCall","src":"51532:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"51522:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"51367:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"51370:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"51364:2:21"},"nodeType":"YulFunctionCall","src":"51364:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"51378:18:21","statements":[{"nodeType":"YulAssignment","src":"51380:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"51389:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"51392:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51385:3:21"},"nodeType":"YulFunctionCall","src":"51385:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"51380:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"51360:3:21","statements":[]},"src":"51356:201:21"},{"nodeType":"YulAssignment","src":"51566:12:21","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"51573:5:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51566:3:21"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51160:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"51165:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51176:3:21","type":""}],"src":"51015:569:21"},{"body":{"nodeType":"YulBlock","src":"51758:374:21","statements":[{"nodeType":"YulVariableDeclaration","src":"51768:16:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"51781:3:21"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"51772:5:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51793:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51813:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"51807:5:21"},"nodeType":"YulFunctionCall","src":"51807:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"51797:6:21","type":""}]},{"nodeType":"YulAssignment","src":"51829:12:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"51838:3:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"51829:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"51850:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"51860:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"51854:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51873:29:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51891:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"51899:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51887:3:21"},"nodeType":"YulFunctionCall","src":"51887:15:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"51877:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"51911:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"51920:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"51915:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"51979:126:21","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"52000:5:21"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"52013:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52007:5:21"},"nodeType":"YulFunctionCall","src":"52007:13:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51993:6:21"},"nodeType":"YulFunctionCall","src":"51993:28:21"},"nodeType":"YulExpressionStatement","src":"51993:28:21"},{"nodeType":"YulAssignment","src":"52034:23:21","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"52047:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"52054:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52043:3:21"},"nodeType":"YulFunctionCall","src":"52043:14:21"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"52034:5:21"}]},{"nodeType":"YulAssignment","src":"52070:25:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"52084:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"52092:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52080:3:21"},"nodeType":"YulFunctionCall","src":"52080:15:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"52070:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"51941:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"51944:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"51938:2:21"},"nodeType":"YulFunctionCall","src":"51938:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"51952:18:21","statements":[{"nodeType":"YulAssignment","src":"51954:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"51963:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"51966:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51959:3:21"},"nodeType":"YulFunctionCall","src":"51959:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"51954:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"51934:3:21","statements":[]},"src":"51930:175:21"},{"nodeType":"YulAssignment","src":"52114:12:21","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"52121:5:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52114:3:21"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51734:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"51739:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51750:3:21","type":""}],"src":"51589:543:21"},{"body":{"nodeType":"YulBlock","src":"52428:554:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52445:3:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52458:2:21","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"52462:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52454:3:21"},"nodeType":"YulFunctionCall","src":"52454:15:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52483:2:21","type":"","value":"96"},{"kind":"number","nodeType":"YulLiteral","src":"52487:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52479:3:21"},"nodeType":"YulFunctionCall","src":"52479:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"52491:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52475:3:21"},"nodeType":"YulFunctionCall","src":"52475:18:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"52471:3:21"},"nodeType":"YulFunctionCall","src":"52471:23:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52450:3:21"},"nodeType":"YulFunctionCall","src":"52450:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52438:6:21"},"nodeType":"YulFunctionCall","src":"52438:58:21"},"nodeType":"YulExpressionStatement","src":"52438:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52516:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"52521:2:21","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52512:3:21"},"nodeType":"YulFunctionCall","src":"52512:12:21"},{"name":"value1","nodeType":"YulIdentifier","src":"52526:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52505:6:21"},"nodeType":"YulFunctionCall","src":"52505:28:21"},"nodeType":"YulExpressionStatement","src":"52505:28:21"},{"nodeType":"YulVariableDeclaration","src":"52542:27:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"52562:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52556:5:21"},"nodeType":"YulFunctionCall","src":"52556:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"52546:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"52617:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"52625:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52613:3:21"},"nodeType":"YulFunctionCall","src":"52613:17:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52636:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"52641:2:21","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52632:3:21"},"nodeType":"YulFunctionCall","src":"52632:12:21"},{"name":"length","nodeType":"YulIdentifier","src":"52646:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"52578:34:21"},"nodeType":"YulFunctionCall","src":"52578:75:21"},"nodeType":"YulExpressionStatement","src":"52578:75:21"},{"nodeType":"YulVariableDeclaration","src":"52662:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52676:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"52681:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52672:3:21"},"nodeType":"YulFunctionCall","src":"52672:16:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"52666:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52697:29:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"52719:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"52713:5:21"},"nodeType":"YulFunctionCall","src":"52713:13:21"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"52701:8:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"52774:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"52782:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52770:3:21"},"nodeType":"YulFunctionCall","src":"52770:17:21"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"52793:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"52797:2:21","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52789:3:21"},"nodeType":"YulFunctionCall","src":"52789:11:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"52802:8:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"52735:34:21"},"nodeType":"YulFunctionCall","src":"52735:76:21"},"nodeType":"YulExpressionStatement","src":"52735:76:21"},{"nodeType":"YulVariableDeclaration","src":"52820:27:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"52834:2:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"52838:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52830:3:21"},"nodeType":"YulFunctionCall","src":"52830:17:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"52824:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"52867:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"52871:2:21","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52863:3:21"},"nodeType":"YulFunctionCall","src":"52863:11:21"},{"name":"value4","nodeType":"YulIdentifier","src":"52876:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52856:6:21"},"nodeType":"YulFunctionCall","src":"52856:27:21"},"nodeType":"YulExpressionStatement","src":"52856:27:21"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"52903:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"52907:2:21","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52899:3:21"},"nodeType":"YulFunctionCall","src":"52899:11:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52920:3:21","type":"","value":"248"},{"name":"value5","nodeType":"YulIdentifier","src":"52925:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52916:3:21"},"nodeType":"YulFunctionCall","src":"52916:16:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52938:3:21","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"52943:3:21","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52934:3:21"},"nodeType":"YulFunctionCall","src":"52934:13:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52912:3:21"},"nodeType":"YulFunctionCall","src":"52912:36:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52892:6:21"},"nodeType":"YulFunctionCall","src":"52892:57:21"},"nodeType":"YulExpressionStatement","src":"52892:57:21"},{"nodeType":"YulAssignment","src":"52958:18:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"52969:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"52973:2:21","type":"","value":"85"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52965:3:21"},"nodeType":"YulFunctionCall","src":"52965:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52958:3:21"}]}]},"name":"abi_encode_tuple_packed_t_address_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr_t_uint256_t_uint8__to_t_address_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr_t_uint256_t_uint8__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52364:3:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"52369:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"52377:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"52385:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"52393:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"52401:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"52409:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52420:3:21","type":""}],"src":"52137:845:21"},{"body":{"nodeType":"YulBlock","src":"53161:174:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53178:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53189:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53171:6:21"},"nodeType":"YulFunctionCall","src":"53171:21:21"},"nodeType":"YulExpressionStatement","src":"53171:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53212:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53223:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53208:3:21"},"nodeType":"YulFunctionCall","src":"53208:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"53228:2:21","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53201:6:21"},"nodeType":"YulFunctionCall","src":"53201:30:21"},"nodeType":"YulExpressionStatement","src":"53201:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53251:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53262:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53247:3:21"},"nodeType":"YulFunctionCall","src":"53247:18:21"},{"hexValue":"546865207369676e6572206973206e6f742061206e6f6465","kind":"string","nodeType":"YulLiteral","src":"53267:26:21","type":"","value":"The signer is not a node"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53240:6:21"},"nodeType":"YulFunctionCall","src":"53240:54:21"},"nodeType":"YulExpressionStatement","src":"53240:54:21"},{"nodeType":"YulAssignment","src":"53303:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53315:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53326:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53311:3:21"},"nodeType":"YulFunctionCall","src":"53311:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53303:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7d82add7da9835f45caeca9f9666cefc6420bd09cf07042e2ce1137ba818d93c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53138:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53152:4:21","type":""}],"src":"52987:348:21"},{"body":{"nodeType":"YulBlock","src":"53514:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53542:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53524:6:21"},"nodeType":"YulFunctionCall","src":"53524:21:21"},"nodeType":"YulExpressionStatement","src":"53524:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53576:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53561:3:21"},"nodeType":"YulFunctionCall","src":"53561:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"53581:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53554:6:21"},"nodeType":"YulFunctionCall","src":"53554:30:21"},"nodeType":"YulExpressionStatement","src":"53554:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53604:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53615:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53600:3:21"},"nodeType":"YulFunctionCall","src":"53600:18:21"},{"hexValue":"496e636f72726563742064617461","kind":"string","nodeType":"YulLiteral","src":"53620:16:21","type":"","value":"Incorrect data"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53593:6:21"},"nodeType":"YulFunctionCall","src":"53593:44:21"},"nodeType":"YulExpressionStatement","src":"53593:44:21"},{"nodeType":"YulAssignment","src":"53646:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53658:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"53669:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53654:3:21"},"nodeType":"YulFunctionCall","src":"53654:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53646:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae6b4065ed04618d5c5f96ed834dfa4d8fe0c4420df59d41e47522953dc8000b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53491:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53505:4:21","type":""}],"src":"53340:338:21"},{"body":{"nodeType":"YulBlock","src":"53964:361:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53981:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"53996:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54012:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"54017:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"54008:3:21"},"nodeType":"YulFunctionCall","src":"54008:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"54021:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54004:3:21"},"nodeType":"YulFunctionCall","src":"54004:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"53992:3:21"},"nodeType":"YulFunctionCall","src":"53992:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53974:6:21"},"nodeType":"YulFunctionCall","src":"53974:51:21"},"nodeType":"YulExpressionStatement","src":"53974:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54045:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54056:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54041:3:21"},"nodeType":"YulFunctionCall","src":"54041:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"54061:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54034:6:21"},"nodeType":"YulFunctionCall","src":"54034:31:21"},"nodeType":"YulExpressionStatement","src":"54034:31:21"},{"nodeType":"YulVariableDeclaration","src":"54074:71:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"54117:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54129:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54140:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54125:3:21"},"nodeType":"YulFunctionCall","src":"54125:19:21"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"54088:28:21"},"nodeType":"YulFunctionCall","src":"54088:57:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"54078:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54176:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54161:3:21"},"nodeType":"YulFunctionCall","src":"54161:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"54185:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"54193:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54181:3:21"},"nodeType":"YulFunctionCall","src":"54181:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54154:6:21"},"nodeType":"YulFunctionCall","src":"54154:50:21"},"nodeType":"YulExpressionStatement","src":"54154:50:21"},{"nodeType":"YulAssignment","src":"54213:52:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"54250:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"54258:6:21"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"54221:28:21"},"nodeType":"YulFunctionCall","src":"54221:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54213:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54296:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54281:3:21"},"nodeType":"YulFunctionCall","src":"54281:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"54305:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"54313:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"54301:3:21"},"nodeType":"YulFunctionCall","src":"54301:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54274:6:21"},"nodeType":"YulFunctionCall","src":"54274:45:21"},"nodeType":"YulExpressionStatement","src":"54274:45:21"}]},"name":"abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint8__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53909:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"53920:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"53928:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"53936:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"53944:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53955:4:21","type":""}],"src":"53683:642:21"},{"body":{"nodeType":"YulBlock","src":"54504:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54521:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54532:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54514:6:21"},"nodeType":"YulFunctionCall","src":"54514:21:21"},"nodeType":"YulExpressionStatement","src":"54514:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54555:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54566:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54551:3:21"},"nodeType":"YulFunctionCall","src":"54551:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"54571:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54544:6:21"},"nodeType":"YulFunctionCall","src":"54544:30:21"},"nodeType":"YulExpressionStatement","src":"54544:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54594:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54605:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54590:3:21"},"nodeType":"YulFunctionCall","src":"54590:18:21"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"54610:16:21","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54583:6:21"},"nodeType":"YulFunctionCall","src":"54583:44:21"},"nodeType":"YulExpressionStatement","src":"54583:44:21"},{"nodeType":"YulAssignment","src":"54636:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54648:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54659:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54644:3:21"},"nodeType":"YulFunctionCall","src":"54644:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54636:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54481:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54495:4:21","type":""}],"src":"54330:338:21"},{"body":{"nodeType":"YulBlock","src":"54847:167:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54864:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54875:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54857:6:21"},"nodeType":"YulFunctionCall","src":"54857:21:21"},"nodeType":"YulExpressionStatement","src":"54857:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54898:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54909:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54894:3:21"},"nodeType":"YulFunctionCall","src":"54894:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"54914:2:21","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54887:6:21"},"nodeType":"YulFunctionCall","src":"54887:30:21"},"nodeType":"YulExpressionStatement","src":"54887:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54937:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"54948:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54933:3:21"},"nodeType":"YulFunctionCall","src":"54933:18:21"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"54953:19:21","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54926:6:21"},"nodeType":"YulFunctionCall","src":"54926:47:21"},"nodeType":"YulExpressionStatement","src":"54926:47:21"},{"nodeType":"YulAssignment","src":"54982:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"55005:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54990:3:21"},"nodeType":"YulFunctionCall","src":"54990:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54982:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54824:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54838:4:21","type":""}],"src":"54673:341:21"},{"body":{"nodeType":"YulBlock","src":"55193:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"55221:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55203:6:21"},"nodeType":"YulFunctionCall","src":"55203:21:21"},"nodeType":"YulExpressionStatement","src":"55203:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55244:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"55255:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55240:3:21"},"nodeType":"YulFunctionCall","src":"55240:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"55260:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55233:6:21"},"nodeType":"YulFunctionCall","src":"55233:30:21"},"nodeType":"YulExpressionStatement","src":"55233:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55283:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"55294:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55279:3:21"},"nodeType":"YulFunctionCall","src":"55279:18:21"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"55299:33:21","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55272:6:21"},"nodeType":"YulFunctionCall","src":"55272:61:21"},"nodeType":"YulExpressionStatement","src":"55272:61:21"},{"nodeType":"YulAssignment","src":"55342:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55354:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"55365:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55350:3:21"},"nodeType":"YulFunctionCall","src":"55350:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55342:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55170:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55184:4:21","type":""}],"src":"55019:355:21"},{"body":{"nodeType":"YulBlock","src":"55516:150:21","statements":[{"nodeType":"YulVariableDeclaration","src":"55526:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55546:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55540:5:21"},"nodeType":"YulFunctionCall","src":"55540:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"55530:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55601:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"55609:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55597:3:21"},"nodeType":"YulFunctionCall","src":"55597:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"55616:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"55621:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"55562:34:21"},"nodeType":"YulFunctionCall","src":"55562:66:21"},"nodeType":"YulExpressionStatement","src":"55562:66:21"},{"nodeType":"YulAssignment","src":"55637:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55648:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"55653:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55644:3:21"},"nodeType":"YulFunctionCall","src":"55644:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55637:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55492:3:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"55497:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55508:3:21","type":""}],"src":"55379:287:21"},{"body":{"nodeType":"YulBlock","src":"55934:453:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55951:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55966:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"55974:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"55962:3:21"},"nodeType":"YulFunctionCall","src":"55962:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55944:6:21"},"nodeType":"YulFunctionCall","src":"55944:38:21"},"nodeType":"YulExpressionStatement","src":"55944:38:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56002:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56013:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55998:3:21"},"nodeType":"YulFunctionCall","src":"55998:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"56018:3:21","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55991:6:21"},"nodeType":"YulFunctionCall","src":"55991:31:21"},"nodeType":"YulExpressionStatement","src":"55991:31:21"},{"nodeType":"YulVariableDeclaration","src":"56031:59:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"56062:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56074:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56085:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56070:3:21"},"nodeType":"YulFunctionCall","src":"56070:19:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"56045:16:21"},"nodeType":"YulFunctionCall","src":"56045:45:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"56035:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56110:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56121:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56106:3:21"},"nodeType":"YulFunctionCall","src":"56106:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"56130:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"56146:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"56150:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"56142:3:21"},"nodeType":"YulFunctionCall","src":"56142:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"56154:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56138:3:21"},"nodeType":"YulFunctionCall","src":"56138:18:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"56126:3:21"},"nodeType":"YulFunctionCall","src":"56126:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56099:6:21"},"nodeType":"YulFunctionCall","src":"56099:59:21"},"nodeType":"YulExpressionStatement","src":"56099:59:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56178:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56189:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56174:3:21"},"nodeType":"YulFunctionCall","src":"56174:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"56198:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"56206:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56194:3:21"},"nodeType":"YulFunctionCall","src":"56194:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56167:6:21"},"nodeType":"YulFunctionCall","src":"56167:50:21"},"nodeType":"YulExpressionStatement","src":"56167:50:21"},{"nodeType":"YulVariableDeclaration","src":"56226:46:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"56257:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"56265:6:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"56240:16:21"},"nodeType":"YulFunctionCall","src":"56240:32:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"56230:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56292:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56303:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56288:3:21"},"nodeType":"YulFunctionCall","src":"56288:19:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"56313:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"56321:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56309:3:21"},"nodeType":"YulFunctionCall","src":"56309:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56281:6:21"},"nodeType":"YulFunctionCall","src":"56281:51:21"},"nodeType":"YulExpressionStatement","src":"56281:51:21"},{"nodeType":"YulAssignment","src":"56341:40:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"56366:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"56374:6:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"56349:16:21"},"nodeType":"YulFunctionCall","src":"56349:32:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56341:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55871:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"55882:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"55890:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"55898:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"55906:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"55914:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55925:4:21","type":""}],"src":"55671:716:21"},{"body":{"nodeType":"YulBlock","src":"56566:238:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56583:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56594:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56576:6:21"},"nodeType":"YulFunctionCall","src":"56576:21:21"},"nodeType":"YulExpressionStatement","src":"56576:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56617:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56628:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56613:3:21"},"nodeType":"YulFunctionCall","src":"56613:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"56633:2:21","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56606:6:21"},"nodeType":"YulFunctionCall","src":"56606:30:21"},"nodeType":"YulExpressionStatement","src":"56606:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56656:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56667:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56652:3:21"},"nodeType":"YulFunctionCall","src":"56652:18:21"},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"56672:34:21","type":"","value":"LzApp: destination chain is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56645:6:21"},"nodeType":"YulFunctionCall","src":"56645:62:21"},"nodeType":"YulExpressionStatement","src":"56645:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56727:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56738:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56723:3:21"},"nodeType":"YulFunctionCall","src":"56723:18:21"},{"hexValue":"61207472757374656420736f75726365","kind":"string","nodeType":"YulLiteral","src":"56743:18:21","type":"","value":"a trusted source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56716:6:21"},"nodeType":"YulFunctionCall","src":"56716:46:21"},"nodeType":"YulExpressionStatement","src":"56716:46:21"},{"nodeType":"YulAssignment","src":"56771:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56783:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"56794:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56779:3:21"},"nodeType":"YulFunctionCall","src":"56779:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56771:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56543:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56557:4:21","type":""}],"src":"56392:412:21"},{"body":{"nodeType":"YulBlock","src":"57118:528:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57135:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"57150:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"57158:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"57146:3:21"},"nodeType":"YulFunctionCall","src":"57146:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57128:6:21"},"nodeType":"YulFunctionCall","src":"57128:38:21"},"nodeType":"YulExpressionStatement","src":"57128:38:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57186:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"57197:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57182:3:21"},"nodeType":"YulFunctionCall","src":"57182:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"57202:3:21","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57175:6:21"},"nodeType":"YulFunctionCall","src":"57175:31:21"},"nodeType":"YulExpressionStatement","src":"57175:31:21"},{"nodeType":"YulVariableDeclaration","src":"57215:59:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57246:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57258:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"57269:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57254:3:21"},"nodeType":"YulFunctionCall","src":"57254:19:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"57229:16:21"},"nodeType":"YulFunctionCall","src":"57229:45:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"57219:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57294:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"57305:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57290:3:21"},"nodeType":"YulFunctionCall","src":"57290:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"57314:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"57322:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57310:3:21"},"nodeType":"YulFunctionCall","src":"57310:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57283:6:21"},"nodeType":"YulFunctionCall","src":"57283:50:21"},"nodeType":"YulExpressionStatement","src":"57283:50:21"},{"nodeType":"YulVariableDeclaration","src":"57342:46:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"57373:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"57381:6:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"57356:16:21"},"nodeType":"YulFunctionCall","src":"57356:32:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"57346:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"57397:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"57415:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"57420:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"57411:3:21"},"nodeType":"YulFunctionCall","src":"57411:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"57424:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57407:3:21"},"nodeType":"YulFunctionCall","src":"57407:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"57401:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"57457:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57442:3:21"},"nodeType":"YulFunctionCall","src":"57442:18:21"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"57466:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"57474:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"57462:3:21"},"nodeType":"YulFunctionCall","src":"57462:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57435:6:21"},"nodeType":"YulFunctionCall","src":"57435:43:21"},"nodeType":"YulExpressionStatement","src":"57435:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57498:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"57509:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57494:3:21"},"nodeType":"YulFunctionCall","src":"57494:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"57519:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"57527:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"57515:3:21"},"nodeType":"YulFunctionCall","src":"57515:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57487:6:21"},"nodeType":"YulFunctionCall","src":"57487:44:21"},"nodeType":"YulExpressionStatement","src":"57487:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57551:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"57562:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57547:3:21"},"nodeType":"YulFunctionCall","src":"57547:19:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"57572:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"57580:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57568:3:21"},"nodeType":"YulFunctionCall","src":"57568:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57540:6:21"},"nodeType":"YulFunctionCall","src":"57540:51:21"},"nodeType":"YulExpressionStatement","src":"57540:51:21"},{"nodeType":"YulAssignment","src":"57600:40:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"57625:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"57633:6:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"57608:16:21"},"nodeType":"YulFunctionCall","src":"57608:32:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57600:4:21"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57047:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"57058:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"57066:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"57074:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"57082:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"57090:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"57098:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57109:4:21","type":""}],"src":"56809:837:21"}]},"contents":"{\n    { }\n    function validator_revert_uint16(value)\n    {\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_uint64t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_uint64(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_6904() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 384)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_6906() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0100)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint40__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint40__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, 0xffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint16t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint64(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := abi_decode_uint64(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__to_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint16t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint16(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpoint_$3958__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint16(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint16(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint16(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_address_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LzApp: invalid endpoint caller\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LzApp: invalid source sending co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_struct_ReserveConfigurationMap_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x20)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, mload(headStart))\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(128, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint40_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_ReserveData_$348_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(0, 0) }\n        let value := allocate_memory_6904()\n        mstore(value, abi_decode_struct_ReserveConfigurationMap_fromMemory(headStart, dataEnd))\n        mstore(add(value, 32), abi_decode_uint128_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_uint128_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_uint128_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_uint128_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_uint128_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_uint40_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_address_fromMemory(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), abi_decode_address_fromMemory(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), abi_decode_address_fromMemory(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), abi_decode_address_fromMemory(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), abi_decode_uint8_fromMemory(add(headStart, _4)))\n        value0 := value\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6100b36fe435492026118a41a662b022de800b25781fb86d754d024398f404fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"closing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8334b7de2798b4703ad85f331e9363a2fb3a337bfd0a4306c1be0d16f50488db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not sufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Array mismatch\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_473dcbb335213edd6bdd5d90a5408f0e23f6181b661562629a100caa513c3d72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Balance insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Withdraw failed\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint40_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint40_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b8dfc848030fefb271d113eec61f68c652b0dff1d9b95a4ce008309efe2f09f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"Closing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3aaf93234d216cebcce57886fad754bf0073b69b286cb61509139d78484b29de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Recharge in this currency is not\")\n        mstore(add(headStart, 96), \" supported\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_70d499af5f7b96d8ae041e35e7fe0e07b709345b07607736fbeb4b14f6a07306__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No authorization\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b49263e3e57631c5fd4385e03e1ed73650036d1b5c850f4f794817f166b232de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"not enough native for fees\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_enum$_OperateType_$2864_t_uint256__to_t_address_t_address_t_uint256_t_bool_t_uint8_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        if iszero(lt(value4, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_rational_0_by_1_t_rational_10000_by_1_t_rational_0_by_1_t_rational_10_by_1_t_uint256_t_rational_1000000_by_1__to_t_address_t_uint8_t_uint8_t_uint16_t_uint8_t_uint8_t_uint256_t_uint24__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xffff))\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), and(value5, 0xff))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), and(value7, 0xffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_5b9c1d6526fc79efecb5cefdba06d4442123c71d0ed2cef80c90cd0c2c119053__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"amount no match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_storage__to_t_uint16_t_address_t_bytes_memory_ptr_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        let _1 := 32\n        mstore(add(headStart, _1), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_bytes(value2, add(headStart, 160))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        let ret := 0\n        let slotValue := sload(value4)\n        let length := extract_byte_array_length(slotValue)\n        mstore(tail_1, length)\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(add(tail_1, _1), and(slotValue, not(255)))\n            ret := add(add(tail_1, shl(5, iszero(iszero(length)))), _1)\n        }\n        case 1 {\n            mstore(0, value4)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _1) }\n            {\n                mstore(add(add(tail_1, i), _1), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(add(tail_1, i), _1)\n        }\n        tail := ret\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"NonblockingLzApp: caller must be\")\n        mstore(add(headStart, 96), \" LzApp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(240, value0), shl(240, 65535)))\n        mstore(add(pos, 2), value1)\n        end := add(pos, 34)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Ownable2Step: caller is not the \")\n        mstore(add(headStart, 96), \"new owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LzApp: no trusted path record\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(sub(shl(96, 1), 1))))\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value3, value4, tail_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, shl(33, 0x0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d051999))\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256_t_bytes_calldata_ptr__to_t_uint16_t_uint16_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"NonblockingLzApp: no stored mess\")\n        mstore(add(headStart, 96), \"age\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"NonblockingLzApp: invalid payloa\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes32__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_170b524e2f6dce4d59ce169fe07ac17c10010b9aa611a4f22b7dd0fbb2a8548e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"LzApp: invalid minGas\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint256__to_t_uint16_t_uint16_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_address_t_rational_6_by_1__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_bytes_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_bytes_fromMemory(add(headStart, offset), dataEnd)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_calldata_ptr_to_t_bytes_storage(slot, src, len)\n    {\n        if gt(len, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_address_t_uint256__to_t_uint16_t_uint16_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_7796ca3cfdc653c566dc65a58dc36b8e618ca503d2ee6999fe37fad5ffd51b7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Permission Denied\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 128))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value3, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffff))\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_struct$_InData_$2942_memory_ptrt_uint256t_boolt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0100) { revert(0, 0) }\n        let value := allocate_memory_6906()\n        mstore(value, abi_decode_address_fromMemory(_2))\n        mstore(add(value, 32), mload(add(_2, 32)))\n        let offset_1 := mload(add(_2, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_array_address_dyn_fromMemory(add(_2, offset_1), dataEnd))\n        let offset_2 := mload(add(_2, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_array_uint256_dyn_fromMemory(add(_2, offset_2), dataEnd))\n        mstore(add(value, 128), mload(add(_2, 128)))\n        mstore(add(value, 160), abi_decode_uint8_fromMemory(add(_2, 160)))\n        mstore(add(value, 192), mload(add(_2, 192)))\n        let offset_3 := mload(add(_2, 224))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 224), abi_decode_bytes_fromMemory(add(_2, offset_3), dataEnd))\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := abi_decode_bool_fromMemory(add(headStart, 64))\n        let offset_4 := mload(add(headStart, 96))\n        if gt(offset_4, _1) { revert(0, 0) }\n        value3 := abi_decode_array_address_dyn_fromMemory(add(headStart, offset_4), dataEnd)\n        let offset_5 := mload(add(headStart, 128))\n        if gt(offset_5, _1) { revert(0, 0) }\n        value4 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_5), dataEnd)\n    }\n    function abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value0)\n        pos_1 := pos\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos_1, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos_1\n    }\n    function abi_encode_tuple_packed_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value0)\n        pos_1 := pos\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos_1, mload(srcPtr))\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos_1\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr_t_uint256_t_uint8__to_t_address_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr_t_uint256_t_uint8__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(sub(shl(96, 1), 1))))\n        mstore(add(pos, 20), value1)\n        let length := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(pos, 52), length)\n        let _1 := add(pos, length)\n        let length_1 := mload(value3)\n        copy_memory_to_memory_with_cleanup(add(value3, 0x20), add(_1, 52), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 52), value4)\n        mstore(add(_2, 84), and(shl(248, value5), shl(248, 255)))\n        end := add(_2, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_7d82add7da9835f45caeca9f9666cefc6420bd09cf07042e2ce1137ba818d93c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The signer is not a node\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ae6b4065ed04618d5c5f96ed834dfa4d8fe0c4420df59d41e47522953dc8000b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Incorrect data\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint8__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_array_address_dyn(value1, add(headStart, 128))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, tail_1)\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 160)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 160))\n        mstore(add(headStart, 64), and(value2, sub(shl(64, 1), 1)))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"LzApp: destination chain is not \")\n        mstore(add(headStart, 96), \"a trusted source\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address_payable_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value2, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value5, tail_2)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3068":[{"length":32,"start":2717},{"length":32,"start":3459},{"length":32,"start":4175},{"length":32,"start":4471},{"length":32,"start":4632},{"length":32,"start":7023},{"length":32,"start":8383},{"length":32,"start":9042},{"length":32,"start":10604},{"length":32,"start":11070},{"length":32,"start":12405},{"length":32,"start":12452},{"length":32,"start":13007},{"length":32,"start":17247}]},"linkReferences":{},"object":"6080604052600436106103095760003560e01c80621d35671461030e578063021b9359146103305780630707a0f01461036657806307e0db17146103ad578063083118d5146103cd578063085a10cf146103ef5780630eaf6ea61461040f57806310ddb1371461042f5780631210aac21461044f57806316e576521461046f57806319fc2e611461048f57806328dd2d01146104c357806329e26b10146105255780632a0276f8146105655780632f48ab7d1461058757806330c593f7146105a75780633d8b38f6146105d557806342d65a8d146105f557806347535d7b1461061557806347e7ef241461062f5780634893c26a14610642578063492e527e14610672578063504f1671146106925780635358fbda146106b257806357463d35146106c55780635b8c41e6146106fa5780635e5c06e21461074957806366ad5c8a146107dc57806368637549146107fc5780636d1daa281461081c578063715018a61461083c5780637533d7881461085157806379ba5097146108715780637a4fda3d146108865780637aaa3470146108b3578063806b834d146108e9578063819faf7b146109095780638cfd8f5c146109295780638da5cb5b1461096157806391d1485414610976578063950c8a74146109965780639f38369a146109b6578063a217fddf146109d6578063a304dcf4146109eb578063a4ca74db14610a0b578063a6c3d16514610a2b578063aaff5f1614610a4b578063b273f20714610a6b578063b353aaa714610a8b578063b3cb890f14610abf578063b7a745c614610adf578063baf3292d14610b0f578063bd99d7e114610b2f578063c392f76614610b5f578063c779c1c314610b85578063cbed8b9c14610bb2578063d1deba1f14610bd2578063d667a5da14610be5578063df2a5b3b14610c08578063e2f2882414610c28578063e30c397814610c48578063e52249e314610c5d578063eb8d72b714610c7d578063f2fde38b14610c9d578063f5ecbdbc14610cbd578063f8b2cb4f14610cdd578063fb89573314610d0e578063fd9be52214610d30578063ff464d3f14610d50575b600080fd5b34801561031a57600080fd5b5061032e610329366004614598565b610d80565b005b34801561033c57600080fd5b5061035061034b366004614642565b610fb1565b60405161035d919061465f565b60405180910390f35b34801561037257600080fd5b5061039f610381366004614642565b6001600160a01b031660009081526003602052604090206007015490565b60405190815260200161035d565b3480156103b957600080fd5b5061032e6103c8366004614673565b61102e565b3480156103d957600080fd5b506103e26110b7565b60405161035d91906146e0565b3480156103fb57600080fd5b5061032e61040a366004614701565b611145565b34801561041b57600080fd5b5061032e61042a36600461471e565b611160565b34801561043b57600080fd5b5061032e61044a366004614673565b6111f7565b34801561045b57600080fd5b5061032e61046a366004614772565b61124f565b34801561047b57600080fd5b5061032e61048a3660046148cb565b61137a565b34801561049b57600080fd5b5061039f7f52941335797217779ab62cf10a3ae2b6d453b5f3a1285e7a816eb9f63a58d66981565b3480156104cf57600080fd5b506104e36104de366004614983565b6116b0565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015264ffffffffff1660e08201526101000161035d565b34801561053157600080fd5b50610555610540366004614642565b60126020526000908152604090205460ff1681565b604051901515815260200161035d565b34801561057157600080fd5b5061039f600080516020615bc683398151915281565b34801561059357600080fd5b50600a54610350906001600160a01b031681565b3480156105b357600080fd5b506000546105c29061ffff1681565b60405161ffff909116815260200161035d565b3480156105e157600080fd5b506105556105f036600461471e565b611a84565b34801561060157600080fd5b5061032e61061036600461471e565b611b50565b34801561062157600080fd5b506006546105559060ff1681565b61032e61063d3660046149b1565b611bd6565b34801561064e57600080fd5b5061055561065d366004614642565b60096020526000908152604090205460ff1681565b34801561067e57600080fd5b5061032e61068d3660046149dd565b61209d565b34801561069e57600080fd5b506103e26106ad366004614642565b61217e565b61032e6106c03660046149fb565b612212565b3480156106d157600080fd5b506106e56106e0366004614642565b61233e565b6040805192835260208301919091520161035d565b34801561070657600080fd5b5061039f610715366004614a8c565b6010602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b34801561075557600080fd5b506107a5610764366004614642565b60036020819052600091825260409091208054600182015492820154600483015460068401546007909401546001600160a01b039093169493919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c00161035d565b3480156107e857600080fd5b5061032e6107f7366004614598565b6123f7565b34801561080857600080fd5b5061039f610817366004614642565b6124d3565b34801561082857600080fd5b5061032e610837366004614aeb565b6125c5565b34801561084857600080fd5b5061032e612610565b34801561085d57600080fd5b506103e261086c366004614673565b612624565b34801561087d57600080fd5b5061032e61263d565b34801561089257600080fd5b5061039f6108a1366004614642565b60136020526000908152604090205481565b3480156108bf57600080fd5b5061039f6108ce366004614642565b6001600160a01b031660009081526011602052604090205490565b3480156108f557600080fd5b5061039f610904366004614983565b6126bb565b34801561091557600080fd5b50600154610350906001600160a01b031681565b34801561093557600080fd5b5061039f610944366004614b09565b600e60209081526000928352604080842090915290825290205481565b34801561096d57600080fd5b506103506126ee565b34801561098257600080fd5b50610555610991366004614772565b6126fd565b3480156109a257600080fd5b50600f54610350906001600160a01b031681565b3480156109c257600080fd5b506103e26109d1366004614673565b612728565b3480156109e257600080fd5b5061039f600081565b3480156109f757600080fd5b5061032e610a06366004614b37565b612837565b348015610a1757600080fd5b5061032e610a26366004614b65565b61286a565b348015610a3757600080fd5b5061032e610a4636600461471e565b6128d9565b348015610a5757600080fd5b5061032e610a66366004614bab565b612955565b348015610a7757600080fd5b50610350610a86366004614c2d565b6129e2565b348015610a9757600080fd5b506103507f000000000000000000000000000000000000000000000000000000000000000081565b348015610acb57600080fd5b5061039f610ada3660046149fb565b612a6f565b348015610aeb57600080fd5b50610555610afa366004614642565b60146020526000908152604090205460ff1681565b348015610b1b57600080fd5b5061032e610b2a366004614642565b612ac1565b348015610b3b57600080fd5b5061039f610b4a3660046149fb565b60076020526000908152604090206001015481565b348015610b6b57600080fd5b50600054610350906201000090046001600160a01b031681565b348015610b9157600080fd5b5061039f610ba0366004614642565b60116020526000908152604090205481565b348015610bbe57600080fd5b5061032e610bcd366004614c69565b612b1f565b61032e610be0366004614598565b612b7b565b348015610bf157600080fd5b50610bfa612d91565b60405161035d929190614d3e565b348015610c1457600080fd5b5061032e610c23366004614d63565b612fbe565b348015610c3457600080fd5b50610350610c43366004614673565b613070565b348015610c5457600080fd5b506103506131a2565b348015610c6957600080fd5b5061032e610c783660046149b1565b6131b1565b348015610c8957600080fd5b5061032e610c9836600461471e565b6131f5565b348015610ca957600080fd5b5061032e610cb8366004614642565b61324f565b348015610cc957600080fd5b506103e2610cd8366004614da4565b6132b5565b348015610ce957600080fd5b50610cfd610cf8366004614642565b613358565b60405161035d959493929190614df5565b348015610d1a57600080fd5b5061039f600080516020615be683398151915281565b348015610d3c57600080fd5b5061032e610d4b3660046149b1565b6135d3565b348015610d5c57600080fd5b50610555610d6b366004614642565b60046020526000908152604090205460ff1681565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610dfd5760405162461bcd60e51b815260206004820152601e60248201527f4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572000060448201526064015b60405180910390fd5b61ffff86166000908152600d602052604081208054610e1b90614e41565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4790614e41565b8015610e945780601f10610e6957610100808354040283529160200191610e94565b820191906000526020600020905b815481529060010190602001808311610e7757829003601f168201915b50505050509050805186869050148015610eaf575060008151115b8015610ed7575080516020820120604051610ecd9088908890614e7b565b6040518091039020145b610f325760405162461bcd60e51b815260206004820152602660248201527f4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6044820152651b9d1c9858dd60d21b6064820152608401610df4565b610fa88787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881528a93509150889088908190840183828082843760009201919091525061376092505050565b50505050505050565b6001546040516335ea6a7560e01b81526000916001600160a01b0316906335ea6a7590610fe290859060040161465f565b61018060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190614f14565b60e0015192915050565b6110366137d9565b6040516307e0db1760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307e0db17906024015b600060405180830381600087803b15801561109c57600080fd5b505af11580156110b0573d6000803e3d6000fd5b5050505050565b600280546110c490614e41565b80601f01602080910402602001604051908101604052809291908181526020018280546110f090614e41565b801561113d5780601f106111125761010080835404028352916020019161113d565b820191906000526020600020905b81548152906001019060200180831161112057829003601f168201915b505050505081565b61114d6137d9565b6006805460ff1916911515919091179055565b604051630757b75360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630eaf6ea6906111b09086908690869060040161502a565b602060405180830381865afa1580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f19190615053565b50505050565b6111ff6137d9565b6040516310ddb13760e01b815261ffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906310ddb13790602401611082565b60065460ff1615156001146112765760405162461bcd60e51b8152600401610df490615070565b336000908152601160205260409020548211156112a55760405162461bcd60e51b8152600401610df490615091565b33600090815260116020526040812080548492906112c49084906150d5565b909155505060405163a9059cbb60e01b81526001600160a01b0382169063a9059cbb906112f790339086906004016150e8565b6020604051808303816000875af1158015611316573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133a9190615053565b507fbb992170d0382feeb939a59875390a636bd942134e6e58925caf64c99432820a33828460405161136e93929190615101565b60405180910390a15050565b60065460ff1615156001146113a15760405162461bcd60e51b8152600401610df490615070565b33600090815260036020526040902081518351146113f25760405162461bcd60e51b815260206004820152600e60248201526d082e4e4c2f240dad2e6dac2e8c6d60931b6044820152606401610df4565b60005b835181101561166f57600082600201600085848151811061141857611418615125565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054905084828151811061145557611455615125565b602002602001015181101561147c5760405162461bcd60e51b8152600401610df49061513b565b84828151811061148e5761148e615125565b60200260200101518360020160008685815181106114ae576114ae615125565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114e591906150d5565b9091555050835160009085908490811061150157611501615125565b60200260200101516001600160a01b03160361156f57336001600160a01b03166108fc86848151811061153657611536615125565b60200260200101519081150290604051600060405180830381858888f19350505050158015611569573d6000803e3d6000fd5b5061165c565b600084838151811061158357611583615125565b60200260200101516001600160a01b031663a9059cbb338886815181106115ac576115ac615125565b60200260200101516040518363ffffffff1660e01b81526004016115d19291906150e8565b6020604051808303816000875af11580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116149190615053565b905060018115151461165a5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606401610df4565b505b508061166781615169565b9150506113f5565b507fd4de851ae1bdf4ea540c1d68657b95bdc9710e532c03bf807c1a7107d238706b8284336040516116a393929190615182565b60405180910390a1505050565b6001546040516335ea6a7560e01b8152600091829182918291829182918291829182916001600160a01b0316906335ea6a75906116f1908e9060040161465f565b61018060405180830381865afa15801561170f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117339190614f14565b60e08101516040516370a0823160e01b81529192506001600160a01b0316906370a0823190611766908d9060040161465f565b602060405180830381865afa158015611783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a791906151c0565b6101208201516040516370a0823160e01b8152919a506001600160a01b0316906370a08231906117db908d9060040161465f565b602060405180830381865afa1580156117f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181c91906151c0565b6101008201516040516370a0823160e01b81529198506001600160a01b0316906370a0823190611850908d9060040161465f565b602060405180830381865afa15801561186d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189191906151c0565b61010082015160405163631a6fd560e11b81529199506001600160a01b03169063c634dfaa906118c5908d9060040161465f565b602060405180830381865afa1580156118e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190691906151c0565b610120820151604051630ed1279f60e11b81529197506001600160a01b031690631da24f3e9061193a908d9060040161465f565b602060405180830381865afa158015611957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197b91906151c0565b945080606001516001600160801b031692508061010001516001600160a01b031663e78c9b3b8b6040518263ffffffff1660e01b81526004016119be919061465f565b602060405180830381865afa1580156119db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ff91906151c0565b610100820151604051631e739ae360e21b81529195506001600160a01b0316906379ce6b8c90611a33908d9060040161465f565b602060405180830381865afa158015611a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7491906151d9565b9150509295985092959890939650565b61ffff83166000908152600d602052604081208054829190611aa590614e41565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad190614e41565b8015611b1e5780601f10611af357610100808354040283529160200191611b1e565b820191906000526020600020905b815481529060010190602001808311611b0157829003601f168201915b505050505090508383604051611b35929190614e7b565b60405180910390208180519060200120149150509392505050565b611b586137d9565b6040516342d65a8d60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342d65a8d90611ba89086908690869060040161502a565b600060405180830381600087803b158015611bc257600080fd5b505af1158015610fa8573d6000803e3d6000fd5b600654600090819060ff161515600114611c1c5760405162461bcd60e51b8152602060048201526007602482015266436c6f73696e6760c81b6044820152606401610df4565b6001600160a01b03841660009081526012602052604090205460ff161515600114611c9c5760405162461bcd60e51b815260206004820152602a60248201527f526563686172676520696e20746869732063757272656e6379206973206e6f74604482015269081cdd5c1c1bdc9d195960b21b6064820152608401610df4565b6040516370a0823160e01b815283906001600160a01b038616906370a0823190611cca90339060040161465f565b602060405180830381865afa158015611ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0b91906151c0565b1015611d295760405162461bcd60e51b8152600401610df49061513b565b604051636eb1769f60e11b815283906001600160a01b0386169063dd62ed3e90611d5990339030906004016151f4565b602060405180830381865afa158015611d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9a91906151c0565b1015611db85760405162461bcd60e51b8152600401610df49061520e565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190611de790339060040161465f565b602060405180830381865afa158015611e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2891906151c0565b6040516323b872dd60e01b81529091506001600160a01b038616906323b872dd90611e5b90339030908990600401615101565b6020604051808303816000875af1158015611e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e9e9190615053565b50611ea984826150d5565b6040516370a0823160e01b81526001600160a01b038716906370a0823190611ed590339060040161465f565b602060405180830381865afa158015611ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1691906151c0565b14611f335760405162461bcd60e51b8152600401610df49061513b565b6000611f3e3361233e565b50905034811115611f615760405162461bcd60e51b8152600401610df490615238565b6001600160a01b03861660009081526004602052604090205460ff16151560010361200357600a5460019450600090611fa2906001600160a01b03166124d3565b9050611fae8787613838565b600a54611fc3906001600160a01b03166124d3565b611fcd828861526c565b611fd791906150d5565b60010361200157600a54611ff3906001600160a01b03166124d3565b611ffe90600161526c565b93505b505b600a54612018906001600160a01b03166124d3565b60005460405191945061205a9161ffff909116906120459033908a908a908a906001908b9060200161527f565b604051602081830303815290604052346139b3565b7f448d2b6792a74a21bfa5114f7cd01a036f36236f4e3687339032e97103e653ce86863360405161208d939291906152d8565b60405180910390a1505050505050565b6120a56137d9565b6040516304b2b47b60e11b81526006906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c90829063096568f6906120fc90309060040161465f565b602060405180830381865afa158015612119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213d91906152fb565b858486604051602001612150919061465f565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401611ba89493929190615318565b6060816000806127106000600a6121a9600a60009054906101000a90046001600160a01b03166124d3565b604080516001600160a01b03909816602089015260ff96871690880152938516606087015261ffff9092166080860152831660a08501529190911660c083015260e0820152620f4240610100820152610120016040516020818303038152906040529050919050565b60065460ff1615156001146122395760405162461bcd60e51b8152600401610df490615070565b60006122443361233e565b50905034612252828461526c565b11156122925760405162461bcd60e51b815260206004820152600f60248201526e0c2dadeeadce840dcde40dac2e8c6d608b1b6044820152606401610df4565b348111156122b25760405162461bcd60e51b8152600401610df490615238565b60008054600a546123099261ffff909216913391869082906002906122df906001600160a01b03166124d3565b6040516020016122f49695949392919061527f565b604051602081830303815290604052836139b3565b604080518381523360208201527f0f007803da765bf8bfb79898e5892989976c0f6b9f69dd946cb8b949c781587a910161136e565b600080548190819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340a7bb109061ffff16306123878961217e565b600060026040518663ffffffff1660e01b81526004016123ab95949392919061534f565b6040805180830381865afa1580156123c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123eb919061540d565b90969095509350505050565b3330146124555760405162461bcd60e51b815260206004820152602660248201527f4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d7573742062656044820152650204c7a4170760d41b6064820152608401610df4565b6124cb8686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f890181900481028201810190925287815289935091508790879081908401838280828437600092019190915250613a4c92505050565b505050505050565b6001546040516335ea6a7560e01b815260009182916001600160a01b03909116906335ea6a759061250890869060040161465f565b61018060405180830381865afa158015612526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254a9190614f14565b60e08101516040516370a0823160e01b81529192506001600160a01b0316906370a082319061257d90309060040161465f565b602060405180830381865afa15801561259a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125be91906151c0565b9392505050565b6125cd6137d9565b6040516001600160f01b031960f084901b166020820152602281018290526042016040516020818303038152906040526002908161260b919061548c565b505050565b6126186137d9565b6126226000613f78565b565b600d60205260009081526040902080546110c490614e41565b33806126476131a2565b6001600160a01b0316146126af5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610df4565b6126b881613f78565b50565b60008060006126ca85856116b0565b50505050509250509150600081836126e291906150d5565b93505050505b92915050565b600b546001600160a01b031690565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61ffff81166000908152600d602052604081208054606092919061274b90614e41565b80601f016020809104026020016040519081016040528092919081815260200182805461277790614e41565b80156127c45780601f10612799576101008083540402835291602001916127c4565b820191906000526020600020905b8154815290600101906020018083116127a757829003601f168201915b50505050509050805160000361281c5760405162461bcd60e51b815260206004820152601d60248201527f4c7a4170703a206e6f20747275737465642070617468207265636f72640000006044820152606401610df4565b6125be60006014835161282f91906150d5565b839190613f91565b61283f6137d9565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6128726137d9565b60005b825181101561260b57816012600085848151811061289557612895615125565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806128d181615169565b915050612875565b6128e16137d9565b8181306040516020016128f693929190615545565b60408051601f1981840301815291815261ffff85166000908152600d6020522090612921908261548c565b507f8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce8383836040516116a39392919061502a565b60405163557faf8b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063aaff5f16906129a99088908890889088908890600401615566565b600060405180830381600087803b1580156129c357600080fd5b505af11580156129d7573d6000803e3d6000fd5b505050505050505050565b6000806129ee84612a6f565b905060008060006129fe8661409e565b60408051600081526020810180835289905260ff8516918101919091526060810183905260808101829052929550909350915060019060a0016020604051602081039080840390855afa158015612a59573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b6040517b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b612ac96137d9565b600f80546001600160a01b0319166001600160a01b0383161790556040517f5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b90612b1490839061465f565b60405180910390a150565b612b276137d9565b6040516332fb62e760e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906129a990889088908890889088906004016155a3565b61ffff86166000908152601060205260408082209051612b9e9088908890614e7b565b90815260408051602092819003830190206001600160401b03871660009081529252902054905080612c1e5760405162461bcd60e51b815260206004820152602360248201527f4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d65737360448201526261676560e81b6064820152608401610df4565b808383604051612c2f929190614e7b565b604051809103902014612c8e5760405162461bcd60e51b815260206004820152602160248201527f4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f616044820152601960fa1b6064820152608401610df4565b61ffff87166000908152601060205260408082209051612cb19089908990614e7b565b90815260408051602092819003830181206001600160401b038916600090815290845282902093909355601f88018290048202830182019052868252612d49918991899089908190840183828082843760009201919091525050604080516020601f8a018190048102820181019092528881528a935091508890889081908401838280828437600092019190915250613a4c92505050565b7fc264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e58787878785604051612d809594939291906155dc565b60405180910390a150505050505050565b6060806000805b600854811015612e065760006013600060088481548110612dbb57612dbb615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020541115612df45781612df081615169565b9250505b80612dfe81615169565b915050612d98565b506000816001600160401b03811115612e2157612e216147a2565b604051908082528060200260200182016040528015612e4a578160200160208202803683370190505b5090506000826001600160401b03811115612e6757612e676147a2565b604051908082528060200260200182016040528015612e90578160200160208202803683370190505b50905060005b600854811015612fb65760006013600060088481548110612eb957612eb9615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020541115612fa45760088181548110612ef757612ef7615125565b9060005260206000200160009054906101000a90046001600160a01b0316838281518110612f2757612f27615125565b60200260200101906001600160a01b031690816001600160a01b0316815250506013600060088381548110612f5e57612f5e615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020548251839083908110612f9757612f97615125565b6020026020010181815250505b80612fae81615169565b915050612e96565b505050509091565b612fc66137d9565b6000811161300e5760405162461bcd60e51b81526020600482015260156024820152744c7a4170703a20696e76616c6964206d696e47617360581b6044820152606401610df4565b61ffff8381166000818152600e602090815260408083209487168084529482529182902085905581519283528201929092529081018290527f9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0906060016116a3565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f5ecbdbc7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663096568f6306040518263ffffffff1660e01b81526004016130ee919061465f565b602060405180830381865afa15801561310b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312f91906152fb565b853060066040518563ffffffff1660e01b81526004016131529493929190615617565b600060405180830381865afa15801561316f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526131979190810190615689565b602001519392505050565b600c546001600160a01b031690565b6131b96137d9565b806001036131dd576131d9600080516020615be683398151915283614110565b5050565b6131d9600080516020615bc683398151915283614110565b6131fd6137d9565b61ffff83166000908152600d6020526040902061321b8284836156bd565b507ffa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab8383836040516116a39392919061502a565b6132576137d9565b600c80546001600160a01b0319166001600160a01b03831690811790915561327d6126ee565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b604051633d7b2f6f60e21b81526060906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f5ecbdbc9061330a908890889030908890600401615617565b600060405180830381865afa158015613327573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261334f9190810190615689565b95945050505050565b6001600160a01b038116600090815260036020526040812081906060908190839081805b6008548110156133e9578260020160006008838154811061339f5761339f615125565b60009182526020808320909101546001600160a01b03168352820192909252604001902054156133d757816133d381615169565b9250505b806133e181615169565b91505061337c565b506000816001600160401b03811115613404576134046147a2565b60405190808252806020026020018201604052801561342d578160200160208202803683370190505b5090506000826001600160401b0381111561344a5761344a6147a2565b604051908082528060200260200182016040528015613473578160200160208202803683370190505b5090506000805b6008548110156135a7578560020160006008838154811061349d5761349d615125565b60009182526020808320909101546001600160a01b031683528201929092526040019020541561359557600881815481106134da576134da615125565b9060005260206000200160009054906101000a90046001600160a01b031684838151811061350a5761350a615125565b60200260200101906001600160a01b031690816001600160a01b0316815250508560020160006008838154811061354357613543615125565b60009182526020808320909101546001600160a01b03168352820192909252604001902054835184908490811061357c5761357c615125565b60209081029190910101528161359181615169565b9250505b8061359f81615169565b91505061347a565b5050835460018501546003909501546001600160a01b039091169b949a50919850965094509092505050565b6135db6137d9565b6001600160a01b0382166000908152601360205260409020548111156136135760405162461bcd60e51b8152600401610df490615091565b61362b600080516020615bc6833981519152336126fd565b15156001146136705760405162461bcd60e51b815260206004820152601160248201527014195c9b5a5cdcda5bdb8811195b9a5959607a1b6044820152606401610df4565b6001600160a01b038216600090815260136020526040812080548392906136989084906150d5565b909155505060405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906136cb90339085906004016150e8565b6020604051808303816000875af11580156136ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260b9190615053565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806137c35a60966366ad5c8a60e01b898989896040516024016137889493929190615776565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091523092919061411a565b91509150816124cb576124cb86868686856141a4565b336137e26126ee565b6001600160a01b0316146126225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610df4565b60015460405163095ea7b360e01b81526001600160a01b038481169263095ea7b39261386c929091169085906004016150e8565b6020604051808303816000875af115801561388b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138af9190615053565b50600154604051636eb1769f60e11b815282916001600160a01b038086169263dd62ed3e926138e59230929116906004016151f4565b602060405180830381865afa158015613902573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061392691906151c0565b10156139445760405162461bcd60e51b8152600401610df49061520e565b60015460405163e8eda9df60e01b81526001600160a01b03848116600483015260248201849052306044830152600060648301529091169063e8eda9df90608401600060405180830381600087803b15801561399f57600080fd5b505af11580156124cb573d6000803e3d6000fd5b61260b8383336000600280546139c890614e41565b80601f01602080910402602001604051908101604052809291908181526020018280546139f490614e41565b8015613a415780601f10613a1657610100808354040283529160200191613a41565b820191906000526020600020905b815481529060010190602001808311613a2457829003601f168201915b505050505086614241565b60008060008060008086806020019051810190613a699190615873565b945094509450945094506000856000015186602001518760400151604051602001613a9491906159cd565b6040516020818303038152906040528860600151604051602001613ab89190615a0c565b60408051601f198184030181529082905260808b015160a08c0151613ae296959493602001615a36565b60405160208183030381529060405290508315613bb657613b1d600080516020615be68339815191526109918860c001518960e001516129e2565b1515600114613b695760405162461bcd60e51b8152602060048201526018602482015277546865207369676e6572206973206e6f742061206e6f646560401b6044820152606401610df4565b8051602082012060c08701518114613bb45760405162461bcd60e51b815260206004820152600e60248201526d496e636f7272656374206461746160901b6044820152606401610df4565b505b85516001600160a01b0390811660009081526003602090815260408220895181546001600160a01b03191694169390931783558801516001830155608088015160078301555b8451811015613cf457838181518110613c1757613c17615125565b602002602001015160136000878481518110613c3557613c35615125565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555060046000868381518110613c7757613c77615125565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615613ce2576000848281518110613cb757613cb7615125565b60200260200101511115613ce257838181518110613cd757613cd7615125565b602002602001015198505b80613cec81615169565b915050613bfc565b506000805b886040015151811015613ebe57613d2c89604001518281518110613d1f57613d1f615125565b60200260200101516143db565b88606001518181518110613d4257613d42615125565b60200260200101518360020160008b604001518481518110613d6657613d66615125565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254613d9d919061526c565b92505081905550600460008a604001518381518110613dbe57613dbe615125565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615613eac5760019150600089606001518281518110613e0657613e06615125565b602002602001015189613e19919061526c565b1115613eac5788516001600160a01b0316600090815260116020526040812080548a9290613e4890849061526c565b92505081905550613eaa89604001518281518110613e6857613e68615125565b60200260200101518b8b606001518481518110613e8757613e87615125565b60200260200101518b613e9a919061526c565b613ea4919061526c565b30614465565b505b80613eb681615169565b915050613cf9565b5080158015613ecd5750600087115b15613f1c5787516001600160a01b031660009081526011602052604081208054899290613efb90849061526c565b9091555050600a54613f1a906001600160a01b0316613ea48b8a61526c565b505b7fc53f0aae5ad30d5251e6054a1874116c45eaf54274cdb1940ee106d67c10b3a5886000015189604001518a606001518b60a00151604051613f619493929190615aa5565b60405180910390a150505050505050505050505050565b600c80546001600160a01b03191690556126b88161370e565b606081613f9f81601f61526c565b1015613fde5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610df4565b613fe8828461526c565b8451101561402c5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610df4565b60608215801561404b5760405191506000825260208201604052614095565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561408457805183526020928301920161406c565b5050858452601f01601f1916604052505b50949350505050565b600080600083516041146140f45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610df4565b5050506020810151604082015160609092015160001a92909190565b6131d982826144e5565b6000606060008060008661ffff166001600160401b0381111561413f5761413f6147a2565b6040519080825280601f01601f191660200182016040528015614169576020820181803683370190505b50905060008087516020890160008d8df191503d92508683111561418b578692505b828152826000602083013e909890975095505050505050565b8180519060200120601060008761ffff1661ffff168152602001908152602001600020856040516141d59190615af0565b9081526040805191829003602090810183206001600160401b0388166000908152915220919091557fe183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c906142329087908790879087908790615b0c565b60405180910390a15050505050565b61ffff86166000908152600d60205260408120805461425f90614e41565b80601f016020809104026020016040519081016040528092919081815260200182805461428b90614e41565b80156142d85780601f106142ad576101008083540402835291602001916142d8565b820191906000526020600020905b8154815290600101906020018083116142bb57829003601f168201915b5050505050905080516000036143495760405162461bcd60e51b815260206004820152603060248201527f4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742060448201526f61207472757374656420736f7572636560801b6064820152608401610df4565b60405162c5803160e81b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c58031009084906143a0908b9086908c908c908c908c90600401615b5e565b6000604051808303818588803b1580156143b957600080fd5b505af11580156143cd573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b03811660009081526009602052604081205460ff16151590036126b8576001600160a01b03166000818152600960205260408120805460ff191660019081179091556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b0319169091179055565b600154604051631a4ca37b60e21b81526000916001600160a01b0316906369328dec9061449a908790879087906004016152d8565b6020604051808303816000875af11580156144b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144dd91906151c0565b949350505050565b6144ef82826126fd565b6131d95760008281526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790555050565b61ffff811681146126b857600080fd5b60008083601f84011261454657600080fd5b5081356001600160401b0381111561455d57600080fd5b60208301915083602082850101111561457557600080fd5b9250929050565b80356001600160401b038116811461459357600080fd5b919050565b600080600080600080608087890312156145b157600080fd5b86356145bc81614524565b955060208701356001600160401b03808211156145d857600080fd5b6145e48a838b01614534565b90975095508591506145f860408a0161457c565b9450606089013591508082111561460e57600080fd5b5061461b89828a01614534565b979a9699509497509295939492505050565b6001600160a01b03811681146126b857600080fd5b60006020828403121561465457600080fd5b81356125be8161462d565b6001600160a01b0391909116815260200190565b60006020828403121561468557600080fd5b81356125be81614524565b60005b838110156146ab578181015183820152602001614693565b50506000910152565b600081518084526146cc816020860160208601614690565b601f01601f19169290920160200192915050565b6020815260006125be60208301846146b4565b80151581146126b857600080fd5b60006020828403121561471357600080fd5b81356125be816146f3565b60008060006040848603121561473357600080fd5b833561473e81614524565b925060208401356001600160401b0381111561475957600080fd5b61476586828701614534565b9497909650939450505050565b6000806040838503121561478557600080fd5b8235915060208301356147978161462d565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b03811182821017156147db576147db6147a2565b60405290565b60405161010081016001600160401b03811182821017156147db576147db6147a2565b604051601f8201601f191681016001600160401b038111828210171561482c5761482c6147a2565b604052919050565b60006001600160401b0382111561484d5761484d6147a2565b5060051b60200190565b600082601f83011261486857600080fd5b8135602061487d61487883614834565b614804565b82815260059290921b8401810191818101908684111561489c57600080fd5b8286015b848110156148c05780356148b38161462d565b83529183019183016148a0565b509695505050505050565b600080604083850312156148de57600080fd5b82356001600160401b03808211156148f557600080fd5b818501915085601f83011261490957600080fd5b8135602061491961487883614834565b82815260059290921b8401810191818101908984111561493857600080fd5b948201945b838610156149565785358252948201949082019061493d565b9650508601359250508082111561496c57600080fd5b5061497985828601614857565b9150509250929050565b6000806040838503121561499657600080fd5b82356149a18161462d565b915060208301356147978161462d565b600080604083850312156149c457600080fd5b82356149cf8161462d565b946020939093013593505050565b600080604083850312156149f057600080fd5b82356149a181614524565b600060208284031215614a0d57600080fd5b5035919050565b60006001600160401b03821115614a2d57614a2d6147a2565b50601f01601f191660200190565b600082601f830112614a4c57600080fd5b8135614a5a61487882614a14565b818152846020838601011115614a6f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215614aa157600080fd5b8335614aac81614524565b925060208401356001600160401b03811115614ac757600080fd5b614ad386828701614a3b565b925050614ae26040850161457c565b90509250925092565b60008060408385031215614afe57600080fd5b82356149cf81614524565b60008060408385031215614b1c57600080fd5b8235614b2781614524565b9150602083013561479781614524565b60008060408385031215614b4a57600080fd5b8235614b558161462d565b91506020830135614797816146f3565b60008060408385031215614b7857600080fd5b82356001600160401b03811115614b8e57600080fd5b614b9a85828601614857565b9250506020830135614797816146f3565b600080600080600060608688031215614bc357600080fd5b8535614bce81614524565b945060208601356001600160401b0380821115614bea57600080fd5b614bf689838a01614534565b90965094506040880135915080821115614c0f57600080fd5b50614c1c88828901614534565b969995985093965092949392505050565b60008060408385031215614c4057600080fd5b8235915060208301356001600160401b03811115614c5d57600080fd5b61497985828601614a3b565b600080600080600060808688031215614c8157600080fd5b8535614c8c81614524565b94506020860135614c9c81614524565b93506040860135925060608601356001600160401b03811115614cbe57600080fd5b614c1c88828901614534565b600081518084526020808501945080840160005b83811015614d035781516001600160a01b031687529582019590820190600101614cde565b509495945050505050565b600081518084526020808501945080840160005b83811015614d0357815187529582019590820190600101614d22565b604081526000614d516040830185614cca565b828103602084015261334f8185614d0e565b600080600060608486031215614d7857600080fd5b8335614d8381614524565b92506020840135614d9381614524565b929592945050506040919091013590565b60008060008060808587031215614dba57600080fd5b8435614dc581614524565b93506020850135614dd581614524565b92506040850135614de58161462d565b9396929550929360600135925050565b60018060a01b038616815284602082015260a060408201526000614e1c60a0830186614cca565b8281036060840152614e2e8186614d0e565b9150508260808301529695505050505050565b600181811c90821680614e5557607f821691505b602082108103614e7557634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b600060208284031215614e9d57600080fd5b604051602081016001600160401b0381118282101715614ebf57614ebf6147a2565b6040529151825250919050565b80516001600160801b038116811461459357600080fd5b805164ffffffffff8116811461459357600080fd5b80516145938161462d565b805160ff8116811461459357600080fd5b60006101808284031215614f2757600080fd5b614f2f6147b8565b614f398484614e8b565b8152614f4760208401614ecc565b6020820152614f5860408401614ecc565b6040820152614f6960608401614ecc565b6060820152614f7a60808401614ecc565b6080820152614f8b60a08401614ecc565b60a0820152614f9c60c08401614ee3565b60c0820152614fad60e08401614ef8565b60e0820152610100614fc0818501614ef8565b90820152610120614fd2848201614ef8565b90820152610140614fe4848201614ef8565b90820152610160614ff6848201614f03565b908201529392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff8416815260406020820152600061334f604083018486615001565b8051614593816146f3565b60006020828403121561506557600080fd5b81516125be816146f3565b602080825260079082015266636c6f73696e6760c81b604082015260600190565b6020808252601490820152734e6f742073756666696369656e742066756e647360601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156126e8576126e86150bf565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052603260045260246000fd5b60208082526014908201527310985b185b98d9481a5b9cdd59999a58da595b9d60621b604082015260600190565b60006001820161517b5761517b6150bf565b5060010190565b6060815260006151956060830186614cca565b82810360208401526151a78186614d0e565b91505060018060a01b0383166040830152949350505050565b6000602082840312156151d257600080fd5b5051919050565b6000602082840312156151eb57600080fd5b6125be82614ee3565b6001600160a01b0392831681529116602082015260400190565b60208082526010908201526f27379030baba3437b934bd30ba34b7b760811b604082015260600190565b6020808252601a90820152796e6f7420656e6f756768206e617469766520666f72206665657360301b604082015260600190565b808201808211156126e8576126e86150bf565b6001600160a01b0387811682528616602082015260408101859052831515606082015260c08101600584106152c457634e487b7160e01b600052602160045260246000fd5b608082019390935260a00152949350505050565b6001600160a01b0393841681526020810192909252909116604082015260600190565b60006020828403121561530d57600080fd5b81516125be81614524565b600061ffff80871683528086166020840152508360408301526080606083015261534560808301846146b4565b9695505050505050565b61ffff861681526000602060018060a01b0387168184015260a0604084015261537b60a08401876146b4565b851515606085015283810360808501526000855461539881614e41565b808452600182811680156153b357600181146153cd576153fb565b60ff1984168688015282151560051b8601870194506153fb565b896000528660002060005b848110156153f35781548882018a01529083019088016153d8565b870188019550505b50929c9b505050505050505050505050565b6000806040838503121561542057600080fd5b505080516020909101519092909150565b601f82111561260b57600081815260208120601f850160051c810160208610156154585750805b601f850160051c820191505b818110156124cb57828155600101615464565b600019600383901b1c191660019190911b1790565b81516001600160401b038111156154a5576154a56147a2565b6154b9816154b38454614e41565b84615431565b602080601f8311600181146154e857600084156154d65750858301515b6154e08582615477565b8655506124cb565b600085815260208120601f198616915b82811015615517578886015182559484019460019091019084016154f8565b50858210156155355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8284823760609190911b6001600160601b0319169101908152601401919050565b61ffff86168152606060208201526000615584606083018688615001565b8281036040840152615597818587615001565b98975050505050505050565b600061ffff8088168352808716602084015250846040830152608060608301526155d1608083018486615001565b979650505050505050565b61ffff861681526080602082015260006155fa608083018688615001565b6001600160401b0394909416604083015250606001529392505050565b61ffff94851681529290931660208301526001600160a01b03166040820152606081019190915260800190565b600082601f83011261565557600080fd5b815161566361487882614a14565b81815284602083860101111561567857600080fd5b6144dd826020830160208701614690565b60006020828403121561569b57600080fd5b81516001600160401b038111156156b157600080fd5b6144dd84828501615644565b6001600160401b038311156156d4576156d46147a2565b6156e8836156e28354614e41565b83615431565b6000601f84116001811461571657600085156157045750838201355b61570e8682615477565b8455506110b0565b600083815260209020601f19861690835b828110156157475786850135825560209485019460019092019101615727565b50868210156157645760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b61ffff8516815260806020820152600061579360808301866146b4565b6001600160401b038516604084015282810360608401526155d181856146b4565b600082601f8301126157c557600080fd5b815160206157d561487883614834565b82815260059290921b840181019181810190868411156157f457600080fd5b8286015b848110156148c057805161580b8161462d565b83529183019183016157f8565b600082601f83011261582957600080fd5b8151602061583961487883614834565b82815260059290921b8401810191818101908684111561585857600080fd5b8286015b848110156148c0578051835291830191830161585c565b600080600080600060a0868803121561588b57600080fd5b85516001600160401b03808211156158a257600080fd5b90870190610100828a0312156158b757600080fd5b6158bf6147e1565b6158c883614ef8565b8152602083015160208201526040830151828111156158e657600080fd5b6158f28b8286016157b4565b60408301525060608301518281111561590a57600080fd5b6159168b828601615818565b6060830152506080830151608082015261593260a08401614f03565b60a082015260c083015160c082015260e08301518281111561595357600080fd5b61595f8b828601615644565b60e0830152506020890151909750955061597b60408901615048565b9450606088015191508082111561599157600080fd5b61599d89838a016157b4565b935060808801519150808211156159b357600080fd5b506159c088828901615818565b9150509295509295909350565b815160009082906020808601845b83811015615a005781516001600160a01b0316855293820193908201906001016159db565b50929695505050505050565b815160009082906020808601845b83811015615a0057815185529382019390820190600101615a1a565b606087901b6001600160601b0319168152601481018690528451600090615a64816034850160208a01614690565b855190830190615a7b816034840160208a01614690565b6034910190810194909452505060f81b6001600160f81b0319166054820152605501949350505050565b6001600160a01b0385168152608060208201819052600090615ac990830186614cca565b8281036040840152615adb8186614d0e565b91505060ff8316606083015295945050505050565b60008251615b02818460208701614690565b9190910192915050565b61ffff8616815260a060208201526000615b2960a08301876146b4565b6001600160401b03861660408401528281036060840152615b4a81866146b4565b9050828103608084015261559781856146b4565b61ffff8716815260c060208201526000615b7b60c08301886146b4565b8281036040840152615b8d81886146b4565b6001600160a01b0387811660608601528616608085015283810360a08501529050615bb881856146b4565b999850505050505050505056fef33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df1557c872046f094b8a493ec5eb6ea374eafbc3c05951e40de3c4302a41f3f127baa2646970667358221220e7879c436a9da870317fc799e00fdd3394d53b0532d2b806f362206f43f5b98e64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x309 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x1D3567 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x21B9359 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x707A0F0 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x83118D5 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x85A10CF EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xEAF6EA6 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x1210AAC2 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x16E57652 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x19FC2E61 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x28DD2D01 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x29E26B10 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x2A0276F8 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0x30C593F7 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0x3D8B38F6 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x5F5 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0x4893C26A EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0x492E527E EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x504F1671 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x5358FBDA EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x57463D35 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0x5B8C41E6 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0x5E5C06E2 EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0x66AD5C8A EQ PUSH2 0x7DC JUMPI DUP1 PUSH4 0x68637549 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0x6D1DAA28 EQ PUSH2 0x81C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x83C JUMPI DUP1 PUSH4 0x7533D788 EQ PUSH2 0x851 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x871 JUMPI DUP1 PUSH4 0x7A4FDA3D EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0x7AAA3470 EQ PUSH2 0x8B3 JUMPI DUP1 PUSH4 0x806B834D EQ PUSH2 0x8E9 JUMPI DUP1 PUSH4 0x819FAF7B EQ PUSH2 0x909 JUMPI DUP1 PUSH4 0x8CFD8F5C EQ PUSH2 0x929 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x976 JUMPI DUP1 PUSH4 0x950C8A74 EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0x9F38369A EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0xA304DCF4 EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xA4CA74DB EQ PUSH2 0xA0B JUMPI DUP1 PUSH4 0xA6C3D165 EQ PUSH2 0xA2B JUMPI DUP1 PUSH4 0xAAFF5F16 EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0xB273F207 EQ PUSH2 0xA6B JUMPI DUP1 PUSH4 0xB353AAA7 EQ PUSH2 0xA8B JUMPI DUP1 PUSH4 0xB3CB890F EQ PUSH2 0xABF JUMPI DUP1 PUSH4 0xB7A745C6 EQ PUSH2 0xADF JUMPI DUP1 PUSH4 0xBAF3292D EQ PUSH2 0xB0F JUMPI DUP1 PUSH4 0xBD99D7E1 EQ PUSH2 0xB2F JUMPI DUP1 PUSH4 0xC392F766 EQ PUSH2 0xB5F JUMPI DUP1 PUSH4 0xC779C1C3 EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0xBB2 JUMPI DUP1 PUSH4 0xD1DEBA1F EQ PUSH2 0xBD2 JUMPI DUP1 PUSH4 0xD667A5DA EQ PUSH2 0xBE5 JUMPI DUP1 PUSH4 0xDF2A5B3B EQ PUSH2 0xC08 JUMPI DUP1 PUSH4 0xE2F28824 EQ PUSH2 0xC28 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xC48 JUMPI DUP1 PUSH4 0xE52249E3 EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xEB8D72B7 EQ PUSH2 0xC7D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC9D JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0xCBD JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0xCDD JUMPI DUP1 PUSH4 0xFB895733 EQ PUSH2 0xD0E JUMPI DUP1 PUSH4 0xFD9BE522 EQ PUSH2 0xD30 JUMPI DUP1 PUSH4 0xFF464D3F EQ PUSH2 0xD50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x4598 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x102E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x46E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x4701 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x11F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x4772 JUMP JUMPDEST PUSH2 0x124F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x48CB JUMP JUMPDEST PUSH2 0x137A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH32 0x52941335797217779AB62CF10A3AE2B6D453B5F3A1285E7A816EB9F63A58D669 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x4983 JUMP JUMPDEST PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH5 0xFFFFFFFFFF AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BC6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x350 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x5C2 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x5F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x610 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x1B50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x555 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x32E PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x49B1 JUMP JUMPDEST PUSH2 0x1BD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x65D CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x68D CALLDATASIZE PUSH1 0x4 PUSH2 0x49DD JUMP JUMPDEST PUSH2 0x209D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x6AD CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x217E JUMP JUMPDEST PUSH2 0x32E PUSH2 0x6C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x49FB JUMP JUMPDEST PUSH2 0x2212 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E5 PUSH2 0x6E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x233E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x715 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A8C JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP5 MLOAD DUP1 DUP7 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 KECCAK256 SWAP5 MSTORE SWAP3 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A5 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x35D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x7F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4598 JUMP JUMPDEST PUSH2 0x23F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x817 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x24D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x837 CALLDATASIZE PUSH1 0x4 PUSH2 0x4AEB JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x848 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x2610 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x86C CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x2624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x263D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x8A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x8CE CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x904 CALLDATASIZE PUSH1 0x4 PUSH2 0x4983 JUMP JUMPDEST PUSH2 0x26BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x350 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x944 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B09 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x26EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x991 CALLDATASIZE PUSH1 0x4 PUSH2 0x4772 JUMP JUMPDEST PUSH2 0x26FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x350 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x9D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x2728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA06 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B37 JUMP JUMPDEST PUSH2 0x2837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA26 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B65 JUMP JUMPDEST PUSH2 0x286A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA46 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x28D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xA66 CALLDATASIZE PUSH1 0x4 PUSH2 0x4BAB JUMP JUMPDEST PUSH2 0x2955 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0xA86 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C2D JUMP JUMPDEST PUSH2 0x29E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xADA CALLDATASIZE PUSH1 0x4 PUSH2 0x49FB JUMP JUMPDEST PUSH2 0x2A6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0xAFA CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xB2A CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x2AC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xB4A CALLDATASIZE PUSH1 0x4 PUSH2 0x49FB JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x350 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xBA0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xBCD CALLDATASIZE PUSH1 0x4 PUSH2 0x4C69 JUMP JUMPDEST PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x32E PUSH2 0xBE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4598 JUMP JUMPDEST PUSH2 0x2B7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBFA PUSH2 0x2D91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP3 SWAP2 SWAP1 PUSH2 0x4D3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xC23 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D63 JUMP JUMPDEST PUSH2 0x2FBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0xC43 CALLDATASIZE PUSH1 0x4 PUSH2 0x4673 JUMP JUMPDEST PUSH2 0x3070 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH2 0x31A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xC78 CALLDATASIZE PUSH1 0x4 PUSH2 0x49B1 JUMP JUMPDEST PUSH2 0x31B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xC98 CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x31F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xCB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x324F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCD8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4DA4 JUMP JUMPDEST PUSH2 0x32B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCFD PUSH2 0xCF8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH2 0x3358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0xD4B CALLDATASIZE PUSH1 0x4 PUSH2 0x49B1 JUMP JUMPDEST PUSH2 0x35D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0xD6B CALLDATASIZE PUSH1 0x4 PUSH2 0x4642 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420656E64706F696E742063616C6C65720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xE1B SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE47 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD DUP7 DUP7 SWAP1 POP EQ DUP1 ISZERO PUSH2 0xEAF JUMPI POP PUSH1 0x0 DUP2 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0xED7 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0xECD SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xF32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A20696E76616C696420736F757263652073656E64696E6720636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFA8 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3760 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH2 0xFE2 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1000 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x4F14 JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1036 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7E0DB17 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7E0DB17 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x10C4 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1112 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x113D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1120 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x114D PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x757B753 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xEAF6EA6 SWAP1 PUSH2 0x11B0 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x502A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F1 SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11FF PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10DDB137 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x10DDB137 SWAP1 PUSH1 0x24 ADD PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5070 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5091 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x12C4 SWAP1 DUP5 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x12F7 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1316 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP PUSH32 0xBB992170D0382FEEB939A59875390A636BD942134E6E58925CAF64C99432820A CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x136E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5070 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x13F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x82E4E4C2F240DAD2E6DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1455 JUMPI PUSH2 0x1455 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 LT ISZERO PUSH2 0x147C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x513B JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x14AE JUMPI PUSH2 0x14AE PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP4 MLOAD PUSH1 0x0 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1501 JUMPI PUSH2 0x1501 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x156F JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1536 JUMPI PUSH2 0x1536 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1569 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x165C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x15AC JUMPI PUSH2 0x15AC PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D1 SWAP3 SWAP2 SWAP1 PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1614 SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x15DA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST POP JUMPDEST POP DUP1 PUSH2 0x1667 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F5 JUMP JUMPDEST POP PUSH32 0xD4DE851AE1BDF4EA540C1D68657B95BDC9710E532C03BF807C1A7107D238706B DUP3 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0x16A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH2 0x16F1 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x170F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x4F14 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1766 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1783 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A7 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x17DB SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP9 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1850 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1891 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x631A6FD5 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC634DFAA SWAP1 PUSH2 0x18C5 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1906 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x120 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xED1279F PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1DA24F3E SWAP1 PUSH2 0x193A SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP3 POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE78C9B3B DUP12 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19BE SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19FF SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x1E739AE3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79CE6B8C SWAP1 PUSH2 0x1A33 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A74 SWAP2 SWAP1 PUSH2 0x51D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1AA5 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD1 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B1E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AF3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B1E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B01 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B35 SWAP3 SWAP2 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B58 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x42D65A8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42D65A8D SWAP1 PUSH2 0x1BA8 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x502A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1C1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x436C6F73696E67 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1C9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563686172676520696E20746869732063757272656E6379206973206E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x81CDD5C1C1BDC9D1959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1CCA SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST LT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x513B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x1D59 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x51F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9A SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST LT ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x520E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1DE7 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E28 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1E5B SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x5101 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E9E SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP PUSH2 0x1EA9 DUP5 DUP3 PUSH2 0x50D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1ED5 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F16 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST EQ PUSH2 0x1F33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x513B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E CALLER PUSH2 0x233E JUMP JUMPDEST POP SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0x1F61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5238 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x2003 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 SWAP5 POP PUSH1 0x0 SWAP1 PUSH2 0x1FA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAE DUP8 DUP8 PUSH2 0x3838 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FC3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH2 0x1FCD DUP3 DUP9 PUSH2 0x526C JUMP JUMPDEST PUSH2 0x1FD7 SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST PUSH1 0x1 SUB PUSH2 0x2001 JUMPI PUSH1 0xA SLOAD PUSH2 0x1FF3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH2 0x1FFE SWAP1 PUSH1 0x1 PUSH2 0x526C JUMP JUMPDEST SWAP4 POP JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2018 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP5 POP PUSH2 0x205A SWAP2 PUSH2 0xFFFF SWAP1 SWAP2 AND SWAP1 PUSH2 0x2045 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x1 SWAP1 DUP12 SWAP1 PUSH1 0x20 ADD PUSH2 0x527F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x39B3 JUMP JUMPDEST PUSH32 0x448D2B6792A74A21BFA5114F7CD01A036F36236F4E3687339032E97103E653CE DUP7 DUP7 CALLER PUSH1 0x40 MLOAD PUSH2 0x208D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20A5 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B2B47B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 DUP3 SWAP1 PUSH4 0x96568F6 SWAP1 PUSH2 0x20FC SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x213D SWAP2 SWAP1 PUSH2 0x52FB JUMP JUMPDEST DUP6 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2150 SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5318 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH1 0x0 PUSH1 0xA PUSH2 0x21A9 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xFF SWAP7 DUP8 AND SWAP1 DUP9 ADD MSTORE SWAP4 DUP6 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x80 DUP7 ADD MSTORE DUP4 AND PUSH1 0xA0 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH3 0xF4240 PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5070 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2244 CALLER PUSH2 0x233E JUMP JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x2252 DUP3 DUP5 PUSH2 0x526C JUMP JUMPDEST GT ISZERO PUSH2 0x2292 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xC2DADEEADCE840DCDE40DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST CALLVALUE DUP2 GT ISZERO PUSH2 0x22B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5238 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xA SLOAD PUSH2 0x2309 SWAP3 PUSH2 0xFFFF SWAP1 SWAP3 AND SWAP2 CALLER SWAP2 DUP7 SWAP1 DUP3 SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x22DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22F4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x527F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF007803DA765BF8BFB79898E5892989976C0F6B9F69DD946CB8B949C781587A SWAP2 ADD PUSH2 0x136E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x40A7BB10 SWAP1 PUSH2 0xFFFF AND ADDRESS PUSH2 0x2387 DUP10 PUSH2 0x217E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23AB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x534F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23EB SWAP2 SWAP1 PUSH2 0x540D JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x2455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A2063616C6C6572206D757374206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x204C7A41707 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x24CB DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE DUP10 SWAP4 POP SWAP2 POP DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3A4C SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH2 0x2508 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x254A SWAP2 SWAP1 PUSH2 0x4F14 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x257D SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x259A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25BE SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25CD PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x42 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x2 SWAP1 DUP2 PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x548C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2618 PUSH2 0x37D9 JUMP JUMPDEST PUSH2 0x2622 PUSH1 0x0 PUSH2 0x3F78 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x10C4 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST CALLER DUP1 PUSH2 0x2647 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x26AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3732BB9037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x26B8 DUP2 PUSH2 0x3F78 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x26CA DUP6 DUP6 PUSH2 0x16B0 JUMP JUMPDEST POP POP POP POP POP SWAP3 POP POP SWAP2 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x26E2 SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP2 SWAP1 PUSH2 0x274B SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2777 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2799 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x27A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x281C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A206E6F20747275737465642070617468207265636F7264000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x25BE PUSH1 0x0 PUSH1 0x14 DUP4 MLOAD PUSH2 0x282F SWAP2 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST DUP4 SWAP2 SWAP1 PUSH2 0x3F91 JUMP JUMPDEST PUSH2 0x283F PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2872 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x260B JUMPI DUP2 PUSH1 0x12 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2895 JUMPI PUSH2 0x2895 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x28D1 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2875 JUMP JUMPDEST PUSH2 0x28E1 PUSH2 0x37D9 JUMP JUMPDEST DUP2 DUP2 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5545 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH2 0x2921 SWAP1 DUP3 PUSH2 0x548C JUMP JUMPDEST POP PUSH32 0x8C0400CFE2D1199B1A725C78960BCC2A344D869B80590D0F2BD005DB15A572CE DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x502A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x557FAF8B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xAAFF5F16 SWAP1 PUSH2 0x29A9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5566 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29EE DUP5 PUSH2 0x2A6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x29FE DUP7 PUSH2 0x409E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH28 0xCA2BA3432B932BAB69029B4B3B732B21026B2B9B9B0B3B29D051999 PUSH1 0x21 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC9 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5DB758E995A17EC1AD84BDEF7E8C3293A0BD6179BCCE400DFF5D4C3D87DB726B SWAP1 PUSH2 0x2B14 SWAP1 DUP4 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2B27 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32FB62E7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xCBED8B9C SWAP1 PUSH2 0x29A9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x55A3 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x2B9E SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x2C1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A206E6F2073746F726564206D657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2C2F SWAP3 SWAP2 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E626C6F636B696E674C7A4170703A20696E76616C6964207061796C6F61 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x2CB1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x4E7B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP5 MSTORE DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1F DUP9 ADD DUP3 SWAP1 DIV DUP3 MUL DUP4 ADD DUP3 ADD SWAP1 MSTORE DUP7 DUP3 MSTORE PUSH2 0x2D49 SWAP2 DUP10 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE DUP11 SWAP4 POP SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x3A4C SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC264D91F3ADC5588250E1551F547752CA0CFA8F6B530D243B9F9F4CAB10EA8E5 DUP8 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2D80 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x0 PUSH1 0x13 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2DBB JUMPI PUSH2 0x2DBB PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x2DF4 JUMPI DUP2 PUSH2 0x2DF0 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x2DFE DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D98 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E21 JUMPI PUSH2 0x2E21 PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E4A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E67 JUMPI PUSH2 0x2E67 PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E90 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2FB6 JUMPI PUSH1 0x0 PUSH1 0x13 PUSH1 0x0 PUSH1 0x8 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2EB9 JUMPI PUSH2 0x2EB9 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x2FA4 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2EF7 JUMPI PUSH2 0x2EF7 PUSH2 0x5125 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F27 JUMPI PUSH2 0x2F27 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x13 PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2F5E JUMPI PUSH2 0x2F5E PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2F97 JUMPI PUSH2 0x2F97 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST DUP1 PUSH2 0x2FAE DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2E96 JUMP JUMPDEST POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x2FC6 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x300E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C7A4170703A20696E76616C6964206D696E476173 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x9D5C7C0B934DA8FEFA9C7760C98383778A12DFBFC0C3B3106518F43FB9508AC0 SWAP1 PUSH1 0x60 ADD PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF5ECBDBC PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x96568F6 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30EE SWAP2 SWAP1 PUSH2 0x465F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x310B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x312F SWAP2 SWAP1 PUSH2 0x52FB JUMP JUMPDEST DUP6 ADDRESS PUSH1 0x6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3152 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x316F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x3197 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5689 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x31B9 PUSH2 0x37D9 JUMP JUMPDEST DUP1 PUSH1 0x1 SUB PUSH2 0x31DD JUMPI PUSH2 0x31D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x4110 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x31D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BC6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x4110 JUMP JUMPDEST PUSH2 0x31FD PUSH2 0x37D9 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x321B DUP3 DUP5 DUP4 PUSH2 0x56BD JUMP JUMPDEST POP PUSH32 0xFA41487AD5D6728F0B19276FA1EDDC16558578F5109FC39D2DC33C3230470DAB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x502A JUMP JUMPDEST PUSH2 0x3257 PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x327D PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D7B2F6F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xF5ECBDBC SWAP1 PUSH2 0x330A SWAP1 DUP9 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5617 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3327 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x334F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5689 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP4 SWAP1 DUP2 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x33E9 JUMPI DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x339F JUMPI PUSH2 0x339F PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x33D7 JUMPI DUP2 PUSH2 0x33D3 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x33E1 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x337C JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3404 JUMPI PUSH2 0x3404 PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x342D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x344A JUMPI PUSH2 0x344A PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3473 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x35A7 JUMPI DUP6 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x349D JUMPI PUSH2 0x349D PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x3595 JUMPI PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x34DA JUMPI PUSH2 0x34DA PUSH2 0x5125 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x350A JUMPI PUSH2 0x350A PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP6 PUSH1 0x2 ADD PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3543 JUMPI PUSH2 0x3543 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x357C JUMPI PUSH2 0x357C PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x3591 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x359F DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x347A JUMP JUMPDEST POP POP DUP4 SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP12 SWAP5 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x35DB PUSH2 0x37D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x3613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x5091 JUMP JUMPDEST PUSH2 0x362B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BC6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x26FD JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14195C9B5A5CDCDA5BDB8811195B9A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3698 SWAP1 DUP5 SWAP1 PUSH2 0x50D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x36CB SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x37C3 GAS PUSH1 0x96 PUSH4 0x66AD5C8A PUSH1 0xE0 SHL DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3788 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5776 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE ADDRESS SWAP3 SWAP2 SWAP1 PUSH2 0x411A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x24CB JUMPI PUSH2 0x24CB DUP7 DUP7 DUP7 DUP7 DUP6 PUSH2 0x41A4 JUMP JUMPDEST CALLER PUSH2 0x37E2 PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x386C SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x50E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x388B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38AF SWAP2 SWAP1 PUSH2 0x5053 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x38E5 SWAP3 ADDRESS SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x51F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3902 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3926 SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST LT ISZERO PUSH2 0x3944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF4 SWAP1 PUSH2 0x520E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x399F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x260B DUP4 DUP4 CALLER PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD PUSH2 0x39C8 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39F4 SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A16 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 PUSH2 0x4241 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3A69 SWAP2 SWAP1 PUSH2 0x5873 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3A94 SWAP2 SWAP1 PUSH2 0x59CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3AB8 SWAP2 SWAP1 PUSH2 0x5A0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH2 0x3AE2 SWAP7 SWAP6 SWAP5 SWAP4 PUSH1 0x20 ADD PUSH2 0x5A36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP4 ISZERO PUSH2 0x3BB6 JUMPI PUSH2 0x3B1D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x991 DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0xE0 ADD MLOAD PUSH2 0x29E2 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x3B69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x546865207369676E6572206973206E6F742061206E6F6465 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0xC0 DUP8 ADD MLOAD DUP2 EQ PUSH2 0x3BB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E636F72726563742064617461 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST POP JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP10 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE DUP9 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3CF4 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3C17 JUMPI PUSH2 0x3C17 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x13 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3C35 JUMPI PUSH2 0x3C35 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3C77 JUMPI PUSH2 0x3C77 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3CE2 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3CB7 JUMPI PUSH2 0x3CB7 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x3CE2 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3CD7 JUMPI PUSH2 0x3CD7 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP9 POP JUMPDEST DUP1 PUSH2 0x3CEC DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3BFC JUMP JUMPDEST POP PUSH1 0x0 DUP1 JUMPDEST DUP9 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x3EBE JUMPI PUSH2 0x3D2C DUP10 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3D1F JUMPI PUSH2 0x3D1F PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x43DB JUMP JUMPDEST DUP9 PUSH1 0x60 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3D42 JUMPI PUSH2 0x3D42 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP12 PUSH1 0x40 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3D66 JUMPI PUSH2 0x3D66 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D9D SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP11 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3DBE JUMPI PUSH2 0x3DBE PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3EAC JUMPI PUSH1 0x1 SWAP2 POP PUSH1 0x0 DUP10 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E06 JUMPI PUSH2 0x3E06 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 PUSH2 0x3E19 SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST GT ISZERO PUSH2 0x3EAC JUMPI DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP11 SWAP3 SWAP1 PUSH2 0x3E48 SWAP1 DUP5 SWAP1 PUSH2 0x526C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3EAA DUP10 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E68 JUMPI PUSH2 0x3E68 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP12 PUSH1 0x60 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3E87 JUMPI PUSH2 0x3E87 PUSH2 0x5125 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH2 0x3E9A SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST PUSH2 0x3EA4 SWAP2 SWAP1 PUSH2 0x526C JUMP JUMPDEST ADDRESS PUSH2 0x4465 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x3EB6 DUP2 PUSH2 0x5169 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3CF9 JUMP JUMPDEST POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x3ECD JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST ISZERO PUSH2 0x3F1C JUMPI DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP10 SWAP3 SWAP1 PUSH2 0x3EFB SWAP1 DUP5 SWAP1 PUSH2 0x526C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x3F1A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3EA4 DUP12 DUP11 PUSH2 0x526C JUMP JUMPDEST POP JUMPDEST PUSH32 0xC53F0AAE5AD30D5251E6054A1874116C45EAF54274CDB1940EE106D67C10B3A5 DUP9 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP12 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3F61 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x26B8 DUP2 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x3F9F DUP2 PUSH1 0x1F PUSH2 0x526C JUMP JUMPDEST LT ISZERO PUSH2 0x3FDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x3FE8 DUP3 DUP5 PUSH2 0x526C JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x402C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x404B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4095 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x4084 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x406C JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x40F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xDF4 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x0 BYTE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x31D9 DUP3 DUP3 PUSH2 0x44E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x413F JUMPI PUSH2 0x413F PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4169 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP8 MLOAD PUSH1 0x20 DUP10 ADD PUSH1 0x0 DUP14 DUP14 CALL SWAP2 POP RETURNDATASIZE SWAP3 POP DUP7 DUP4 GT ISZERO PUSH2 0x418B JUMPI DUP7 SWAP3 POP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x10 PUSH1 0x0 DUP8 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x40 MLOAD PUSH2 0x41D5 SWAP2 SWAP1 PUSH2 0x5AF0 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xE183F33DE2837795525B4792CA4CD60535BD77C53B7E7030060BFCF5734D6B0C SWAP1 PUSH2 0x4232 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x5B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x425F SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428B SWAP1 PUSH2 0x4E41 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x4349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C7A4170703A2064657374696E6174696F6E20636861696E206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x61207472757374656420736F75726365 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xC58031 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xC5803100 SWAP1 DUP5 SWAP1 PUSH2 0x43A0 SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x5B5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP1 SUB PUSH2 0x26B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH2 0x449A SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x52D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44DD SWAP2 SWAP1 PUSH2 0x51C0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x44EF DUP3 DUP3 PUSH2 0x26FD JUMP JUMPDEST PUSH2 0x31D9 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x455D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x45B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x45BC DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x45D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45E4 DUP11 DUP4 DUP12 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x45F8 PUSH1 0x40 DUP11 ADD PUSH2 0x457C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x460E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x461B DUP10 DUP3 DUP11 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BE DUP2 PUSH2 0x462D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BE DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x46AB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4693 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x46CC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4690 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x46B4 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BE DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x473E DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4765 DUP7 DUP3 DUP8 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x462D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x47DB JUMPI PUSH2 0x47DB PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x47DB JUMPI PUSH2 0x47DB PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x482C JUMPI PUSH2 0x482C PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x484D JUMPI PUSH2 0x484D PUSH2 0x47A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x487D PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST PUSH2 0x4804 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x489C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x48C0 JUMPI DUP1 CALLDATALOAD PUSH2 0x48B3 DUP2 PUSH2 0x462D JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x48A0 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x48F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4919 PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x4938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x4956 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x493D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x496C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4979 DUP6 DUP3 DUP7 ADD PUSH2 0x4857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49A1 DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x462D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49CF DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49A1 DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4A2D JUMPI PUSH2 0x4A2D PUSH2 0x47A2 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4A5A PUSH2 0x4878 DUP3 PUSH2 0x4A14 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4AAC DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4AC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4AD3 DUP7 DUP3 DUP8 ADD PUSH2 0x4A3B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x4AE2 PUSH1 0x40 DUP6 ADD PUSH2 0x457C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x49CF DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B27 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B55 DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B9A DUP6 DUP3 DUP7 ADD PUSH2 0x4857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4797 DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4BCE DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4BEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BF6 DUP10 DUP4 DUP11 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4C0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C1C DUP9 DUP3 DUP10 ADD PUSH2 0x4534 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4C5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4979 DUP6 DUP3 DUP7 ADD PUSH2 0x4A3B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4C8C DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4C9C DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C1C DUP9 DUP3 DUP10 ADD PUSH2 0x4534 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D03 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4CDE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D03 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4D22 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4D51 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x334F DUP2 DUP6 PUSH2 0x4D0E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4D83 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x4D93 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x4DC5 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x4DD5 DUP2 PUSH2 0x4524 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x4DE5 DUP2 PUSH2 0x462D JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4E1C PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4E2E DUP2 DUP7 PUSH2 0x4D0E JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4E55 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4E75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4EBF JUMPI PUSH2 0x4EBF PUSH2 0x47A2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4593 DUP2 PUSH2 0x462D JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F2F PUSH2 0x47B8 JUMP JUMPDEST PUSH2 0x4F39 DUP5 DUP5 PUSH2 0x4E8B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4F47 PUSH1 0x20 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4F58 PUSH1 0x40 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x4F69 PUSH1 0x60 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x4F7A PUSH1 0x80 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x4F8B PUSH1 0xA0 DUP5 ADD PUSH2 0x4ECC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4F9C PUSH1 0xC0 DUP5 ADD PUSH2 0x4EE3 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4FAD PUSH1 0xE0 DUP5 ADD PUSH2 0x4EF8 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x4FC0 DUP2 DUP6 ADD PUSH2 0x4EF8 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x4FD2 DUP5 DUP3 ADD PUSH2 0x4EF8 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x4FE4 DUP5 DUP3 ADD PUSH2 0x4EF8 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0x4FF6 DUP5 DUP3 ADD PUSH2 0x4F03 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x334F PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x5001 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4593 DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x25BE DUP2 PUSH2 0x46F3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x636C6F73696E67 PUSH1 0xC8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F742073756666696369656E742066756E6473 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x26E8 JUMPI PUSH2 0x26E8 PUSH2 0x50BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x10985B185B98D9481A5B9CDD59999A58DA595B9D PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x517B JUMPI PUSH2 0x517B PUSH2 0x50BF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5195 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x51A7 DUP2 DUP7 PUSH2 0x4D0E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25BE DUP3 PUSH2 0x4EE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x27379030BABA3437B934BD30BA34B7B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH26 0x6E6F7420656E6F756768206E617469766520666F722066656573 PUSH1 0x30 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E8 JUMPI PUSH2 0x26E8 PUSH2 0x50BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP4 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x5 DUP5 LT PUSH2 0x52C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x530D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x25BE DUP2 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5345 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x46B4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x537B PUSH1 0xA0 DUP5 ADD DUP8 PUSH2 0x46B4 JUMP JUMPDEST DUP6 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 DUP6 SLOAD PUSH2 0x5398 DUP2 PUSH2 0x4E41 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x53B3 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x53CD JUMPI PUSH2 0x53FB JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP7 DUP9 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD DUP8 ADD SWAP5 POP PUSH2 0x53FB JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x53F3 JUMPI DUP2 SLOAD DUP9 DUP3 ADD DUP11 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x53D8 JUMP JUMPDEST DUP8 ADD DUP9 ADD SWAP6 POP POP JUMPDEST POP SWAP3 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x5458 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24CB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5464 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x54A5 JUMPI PUSH2 0x54A5 PUSH2 0x47A2 JUMP JUMPDEST PUSH2 0x54B9 DUP2 PUSH2 0x54B3 DUP5 SLOAD PUSH2 0x4E41 JUMP JUMPDEST DUP5 PUSH2 0x5431 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x54E8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x54D6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH2 0x54E0 DUP6 DUP3 PUSH2 0x5477 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5517 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x54F8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x5535 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5584 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x5001 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5597 DUP2 DUP6 DUP8 PUSH2 0x5001 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x55D1 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x5001 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x55FA PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x5001 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5663 PUSH2 0x4878 DUP3 PUSH2 0x4A14 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x5678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44DD DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4690 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x569B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x56B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44DD DUP5 DUP3 DUP6 ADD PUSH2 0x5644 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x56D4 JUMPI PUSH2 0x56D4 PUSH2 0x47A2 JUMP JUMPDEST PUSH2 0x56E8 DUP4 PUSH2 0x56E2 DUP4 SLOAD PUSH2 0x4E41 JUMP JUMPDEST DUP4 PUSH2 0x5431 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x5716 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x5704 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH2 0x570E DUP7 DUP3 PUSH2 0x5477 JUMP JUMPDEST DUP5 SSTORE POP PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5747 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5727 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x5764 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5793 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x55D1 DUP2 DUP6 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x57D5 PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x57F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x48C0 JUMPI DUP1 MLOAD PUSH2 0x580B DUP2 PUSH2 0x462D JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x57F8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x5839 PUSH2 0x4878 DUP4 PUSH2 0x4834 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x5858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x48C0 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x585C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x588B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x58A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP8 ADD SWAP1 PUSH2 0x100 DUP3 DUP11 SUB SLT ISZERO PUSH2 0x58B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58BF PUSH2 0x47E1 JUMP JUMPDEST PUSH2 0x58C8 DUP4 PUSH2 0x4EF8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x58E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58F2 DUP12 DUP3 DUP7 ADD PUSH2 0x57B4 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x590A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5916 DUP12 DUP3 DUP7 ADD PUSH2 0x5818 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x5932 PUSH1 0xA0 DUP5 ADD PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x5953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x595F DUP12 DUP3 DUP7 ADD PUSH2 0x5644 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP SWAP6 POP PUSH2 0x597B PUSH1 0x40 DUP10 ADD PUSH2 0x5048 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x599D DUP10 DUP4 DUP11 ADD PUSH2 0x57B4 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x59B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C0 DUP9 DUP3 DUP10 ADD PUSH2 0x5818 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A00 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x59DB JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5A00 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5A1A JUMP JUMPDEST PUSH1 0x60 DUP8 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x14 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x5A64 DUP2 PUSH1 0x34 DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4690 JUMP JUMPDEST DUP6 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x5A7B DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x4690 JUMP JUMPDEST PUSH1 0x34 SWAP2 ADD SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE POP POP PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5AC9 SWAP1 DUP4 ADD DUP7 PUSH2 0x4CCA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5ADB DUP2 DUP7 PUSH2 0x4D0E JUMP JUMPDEST SWAP2 POP POP PUSH1 0xFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x5B02 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4690 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5B29 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5B4A DUP2 DUP7 PUSH2 0x46B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x5597 DUP2 DUP6 PUSH2 0x46B4 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x5B7B PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x46B4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x5B8D DUP2 DUP9 PUSH2 0x46B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xA0 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x5BB8 DUP2 DUP6 PUSH2 0x46B4 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP INVALID RETURN EXTCODEHASH 0xE7 DUP15 0xB7 0xC8 BLOCKHASH 0xE8 0xBF PUSH9 0x670029904B6F0DA8E7 SWAP4 CHAINID SWAP5 SHR 0x27 DUP11 0x4E PUSH23 0x76D473DF1557C872046F094B8A493EC5EB6EA374EAFBC3 0xC0 MSIZE MLOAD 0xE4 0xD 0xE3 0xC4 ADDRESS 0x2A COINBASE RETURN CALL 0x27 0xBA LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP8 SWAP13 NUMBER PUSH11 0x9DA870317FC799E00FDD33 SWAP5 0xD5 EXTCODESIZE SDIV ORIGIN 0xD2 0xB8 MOD RETURN PUSH3 0x206F43 CREATE2 0xB9 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"444:14610:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:753:14;;;;;;;;;;-1:-1:-1;1040:753:14;;;;;:::i;:::-;;:::i;:::-;;8473:209:11;;;;;;;;;;-1:-1:-1;8473:209:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4746:157;;;;;;;;;;-1:-1:-1;4746:157:11;;;;;:::i;:::-;-1:-1:-1;;;;;4844:15:11;4802:4;4844:15;;;:8;:15;;;;;4878:17;;;;4746:157;;;;2334:25:21;;;2322:2;2307:18;4746:157:11;2188:177:21;4191:121:14;;;;;;;;;;-1:-1:-1;4191:121:14;;;;;:::i;:::-;;:::i;534:26:12:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9423:73:11:-;;;;;;;;;;-1:-1:-1;9423:73:11;;;;;:::i;:::-;;:::i;3818:154:14:-;;;;;;;;;;-1:-1:-1;3818:154:14;;;;;:::i;:::-;;:::i;4318:127::-;;;;;;;;;;-1:-1:-1;4318:127:14;;;;;:::i;:::-;;:::i;5326:369:11:-;;;;;;;;;;-1:-1:-1;5326:369:11;;;;;:::i;:::-;;:::i;2853:869::-;;;;;;;;;;-1:-1:-1;2853:869:11;;;;;:::i;:::-;;:::i;255:62:12:-;;;;;;;;;;;;293:24;255:62;;7189:1274:11;;;;;;;;;;-1:-1:-1;7189:1274:11;;;;;:::i;:::-;;:::i;:::-;;;;8528:25:21;;;8584:2;8569:18;;8562:34;;;;8612:18;;;8605:34;;;;8670:2;8655:18;;8648:34;;;;8713:3;8698:19;;8691:35;8757:3;8742:19;;8735:35;8801:3;8786:19;;8779:35;8863:12;8851:25;8845:3;8830:19;;8823:54;8515:3;8500:19;7189:1274:11;8187:696:21;558:42:11;;;;;;;;;;-1:-1:-1;558:42:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9053:14:21;;9046:22;9028:41;;9016:2;9001:18;558:42:11;8888:187:21;387:56:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;387:56:12;;1606:19;;;;;;;;;;-1:-1:-1;1606:19:12;;;;-1:-1:-1;;;;;1606:19:12;;;450:24;;;;;;;;;;-1:-1:-1;450:24:12;;;;;;;;;;;9254:6:21;9242:19;;;9224:38;;9212:2;9197:18;450:24:12;9080:188:21;6101:247:14;;;;;;;;;;-1:-1:-1;6101:247:14;;;;;:::i;:::-;;:::i;4451:176::-;;;;;;;;;;-1:-1:-1;4451:176:14;;;;;:::i;:::-;;:::i;1016:18:12:-;;;;;;;;;;-1:-1:-1;1016:18:12;;;;;;;;942:1326:11;;;;;;:::i;:::-;;:::i;1550:45:12:-;;;;;;;;;;-1:-1:-1;1550:45:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;13108:253:11;;;;;;;;;;-1:-1:-1;13108:253:11;;;;;:::i;:::-;;:::i;8998:164::-;;;;;;;;;;-1:-1:-1;8998:164:11;;;;;:::i;:::-;;:::i;2274:469::-;;;;;;:::i;:::-;;:::i;9172:244::-;;;;;;;;;;-1:-1:-1;9172:244:11;;;;;:::i;:::-;;:::i;:::-;;;;10343:25:21;;;10399:2;10384:18;;10377:34;;;;10316:18;9172:244:11;10169:248:21;616:85:15;;;;;;;;;;-1:-1:-1;616:85:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:43:12;;;;;;;;;;-1:-1:-1;861:43:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:43:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11915:32:21;;;11897:51;;11979:2;11964:18;;11957:34;;;;12007:18;;;12000:34;;;;12065:2;12050:18;;12043:34;12108:3;12093:19;;12086:35;11935:3;12137:19;;12130:35;11884:3;11869:19;861:43:12;11610:561:21;1819:342:15;;;;;;;;;;-1:-1:-1;1819:342:15;;;;;:::i;:::-;;:::i;14709::11:-;;;;;;;;;;-1:-1:-1;14709:342:11;;;;;:::i;:::-;;:::i;6589:178::-;;;;;;;;;;-1:-1:-1;6589:178:11;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;525:51:14:-;;;;;;;;;;-1:-1:-1;525:51:14;;;;;:::i;:::-;;:::i;1734:206:1:-;;;;;;;;;;;;;:::i;606:44:11:-;;;;;;;;;;-1:-1:-1;606:44:11;;;;;:::i;:::-;;;;;;;;;;;;;;4909:114;;;;;;;;;;-1:-1:-1;4909:114:11;;;;;:::i;:::-;-1:-1:-1;;;;;4995:21:11;4968:7;4995:21;;;:14;:21;;;;;;;4909:114;6825:358;;;;;;;;;;-1:-1:-1;6825:358:11;;;;;:::i;:::-;;:::i;509:19:12:-;;;;;;;;;;-1:-1:-1;509:19:12;;;;-1:-1:-1;;;;;509:19:12;;;582:65:14;;;;;;;;;;-1:-1:-1;582:65:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;10647:129:11:-;;;;;;;;;;-1:-1:-1;10647:129:11;;;;;:::i;:::-;;:::i;653:23:14:-;;;;;;;;;;-1:-1:-1;653:23:14;;;;-1:-1:-1;;;;;653:23:14;;;5255:326;;;;;;;;;;-1:-1:-1;5255:326:14;;;;;:::i;:::-;;:::i;1469:49:12:-;;;;;;;;;;-1:-1:-1;1469:49:12;1514:4;1469:49;;2749:94:11;;;;;;;;;;-1:-1:-1;2749:94:11;;;;;:::i;:::-;;:::i;10459:182::-;;;;;;;;;;-1:-1:-1;10459:182:11;;;;;:::i;:::-;;:::i;4971:278:14:-;;;;;;;;;;-1:-1:-1;4971:278:14;;;;;:::i;:::-;;:::i;3631:181::-;;;;;;;;;;-1:-1:-1;3631:181:14;;;;;:::i;:::-;;:::i;3728:277:11:-;;;;;;;;;;-1:-1:-1;3728:277:11;;;;;:::i;:::-;;:::i;473:46:14:-;;;;;;;;;;;;;;;13371:212:11;;;;;;;;;;-1:-1:-1;13371:212:11;;;;;:::i;:::-;;:::i;656:41::-;;;;;;;;;;-1:-1:-1;656:41:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;5587:133:14;;;;;;;;;;-1:-1:-1;5587:133:14;;;;;:::i;:::-;;:::i;1420:42:12:-;;;;;;;;;;-1:-1:-1;1420:42:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;480:23;;;;;;;;;;-1:-1:-1;480:23:12;;;;;;;-1:-1:-1;;;;;480:23:12;;;502:50:11;;;;;;;;;;-1:-1:-1;502:50:11;;;;;:::i;:::-;;;;;;;;;;;;;;3983:202:14;;;;;;;;;;-1:-1:-1;3983:202:14;;;;;:::i;:::-;;:::i;2342:757:15:-;;;;;;:::i;:::-;;:::i;14111:592:11:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;5726:280:14:-;;;;;;;;;;-1:-1:-1;5726:280:14;;;;;:::i;:::-;;:::i;8688:300:11:-;;;;;;;;;;-1:-1:-1;8688:300:11;;;;;:::i;:::-;;:::i;847:99:1:-;;;;;;;;;;;;;:::i;5029:201:11:-;;;;;;;;;;-1:-1:-1;5029:201:11;;;;;:::i;:::-;;:::i;4770:195:14:-;;;;;;;;;;-1:-1:-1;4770:195:14;;;;;:::i;:::-;;:::i;1139:178:1:-;;;;;;;;;;-1:-1:-1;1139:178:1;;;;;:::i;:::-;;:::i;3363:209:14:-;;;;;;;;;;-1:-1:-1;3363:209:14;;;;;:::i;:::-;;:::i;5701:882:11:-;;;;;;;;;;-1:-1:-1;5701:882:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;323:58:12:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:58:12;;13800:305:11;;;;;;;;;;-1:-1:-1;13800:305:11;;;;;:::i;:::-;;:::i;913:39:12:-;;;;;;;;;;-1:-1:-1;913:39:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;1040:753:14;719:10:4;1278::14;-1:-1:-1;;;;;1254:35:14;;1246:78;;;;-1:-1:-1;;;1246:78:14;;19841:2:21;1246:78:14;;;19823:21:21;19880:2;19860:18;;;19853:30;19919:32;19899:18;;;19892:60;19969:18;;1246:78:14;;;;;;;;;1364:32;;;1335:26;1364:32;;;:19;:32;;;;;1335:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:13;:20;1546:11;;:18;;:42;:70;;;;;1615:1;1592:13;:20;:24;1546:70;:124;;;;-1:-1:-1;1646:24:14;;;;;;1620:22;;;;1630:11;;;;1620:22;:::i;:::-;;;;;;;;:50;1546:124;1538:175;;;;-1:-1:-1;;;1538:175:14;;20861:2:21;1538:175:14;;;20843:21:21;20900:2;20880:18;;;20873:30;20939:34;20919:18;;;20912:62;-1:-1:-1;;;20990:18:21;;;20983:36;21036:19;;1538:175:14;20659:402:21;1538:175:14;1724:62;1743:11;1756;;1724:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1724:62:14;;;;;;;;;;;;;;;;;;;;;;1769:6;;-1:-1:-1;1724:62:14;-1:-1:-1;1777:8:14;;;;;;1724:62;;1777:8;;;;1724:62;;;;;;;;;-1:-1:-1;1724:18:14;;-1:-1:-1;;;1724:62:14:i;:::-;1171:622;1040:753;;;;;;:::o;8473:209:11:-;8635:4;;8622:39;;-1:-1:-1;;;8622:39:11;;8535:7;;-1:-1:-1;;;;;8635:4:11;;8622:33;;:39;;8656:4;;8622:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;;8473:209;-1:-1:-1;;8473:209:11:o;4191:121:14:-;1094:13:0;:11;:13::i;:::-;4270:35:14::1;::::0;-1:-1:-1;;;4270:35:14;;9254:6:21;9242:19;;4270:35:14::1;::::0;::::1;9224:38:21::0;4270:10:14::1;-1:-1:-1::0;;;;;4270:25:14::1;::::0;::::1;::::0;9197:18:21;;4270:35:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4191:121:::0;:::o;534:26:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9423:73:11:-;1094:13:0;:11;:13::i;:::-;9477:6:11::1;:12:::0;;-1:-1:-1;;9477:12:11::1;::::0;::::1;;::::0;;;::::1;::::0;;9423:73::o;3818:154:14:-;3913:52;;-1:-1:-1;;;3913:52:14;;-1:-1:-1;;;;;3913:10:14;:27;;;;:52;;3941:11;;3953;;;;3913:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3818:154;;;:::o;4318:127::-;1094:13:0;:11;:13::i;:::-;4400:38:14::1;::::0;-1:-1:-1;;;4400:38:14;;9254:6:21;9242:19;;4400:38:14::1;::::0;::::1;9224::21::0;4400:10:14::1;-1:-1:-1::0;;;;;4400:28:14::1;::::0;::::1;::::0;9197:18:21;;4400:38:14::1;9080:188:21::0;5326:369:11;5412:6;;;;:14;;:6;:14;5404:33;;;;-1:-1:-1;;;5404:33:11;;;;;;;:::i;:::-;5470:10;5455:26;;;;:14;:26;;;;;;:37;-1:-1:-1;5455:37:11;5447:69;;;;-1:-1:-1;;;5447:69:11;;;;;;;:::i;:::-;5541:10;5526:26;;;;:14;:26;;;;;:37;;5556:7;;5526:26;:37;;5556:7;;5526:37;:::i;:::-;;;;-1:-1:-1;;5573:47:11;;-1:-1:-1;;;5573:47:11;;-1:-1:-1;;;;;5573:26:11;;;;;:47;;5600:10;;5612:7;;5573:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5635:53;5657:10;5669:9;5680:7;5635:53;;;;;;;;:::i;:::-;;;;;;;;5326:369;;:::o;2853:869::-;2959:6;;;;:14;;:6;:14;2951:33;;;;-1:-1:-1;;;2951:33:11;;;;;;;:::i;:::-;3026:10;2994:19;3017:20;;;:8;:20;;;;;3073:16;;3055:14;;:34;3047:60;;;;-1:-1:-1;;;3047:60:11;;26302:2:21;3047:60:11;;;26284:21:21;26341:2;26321:18;;;26314:30;-1:-1:-1;;;26360:18:21;;;26353:44;26414:18;;3047:60:11;26100:338:21;3047:60:11;3122:9;3118:540;3139:7;:14;3137:1;:16;3118:540;;;3174:15;3192:3;:18;;:32;3211:9;3221:1;3211:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3192:32:11;-1:-1:-1;;;;;3192:32:11;;;;;;;;;;;;;3174:50;;3257:7;3265:1;3257:10;;;;;;;;:::i;:::-;;;;;;;3246:7;:21;;3238:53;;;;-1:-1:-1;;;3238:53:11;;;;;;;:::i;:::-;3341:7;3349:1;3341:10;;;;;;;;:::i;:::-;;;;;;;3305:3;:18;;:32;3324:9;3334:1;3324:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3305:32:11;-1:-1:-1;;;;;3305:32:11;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;3381:12:11;;3405:1;;3381:9;;3391:1;;3381:12;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3381:26:11;;3378:270;;3434:10;-1:-1:-1;;;;;3426:28:11;:40;3455:7;3463:1;3455:10;;;;;;;;:::i;:::-;;;;;;;3426:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3378:270;;;3503:14;3526:9;3536:1;3526:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3519:29:11;;3549:10;3561:7;3569:1;3561:10;;;;;;;;:::i;:::-;;;;;;;3519:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3503:69;-1:-1:-1;3610:4:11;3598:16;;;;3590:43;;;;-1:-1:-1;;;3590:43:11;;27126:2:21;3590:43:11;;;27108:21:21;27165:2;27145:18;;;27138:30;-1:-1:-1;;;27184:18:21;;;27177:45;27239:18;;3590:43:11;26924:339:21;3590:43:11;3485:163;3378:270;-1:-1:-1;3155:3:11;;;;:::i;:::-;;;;3118:540;;;;3672:43;3686:9;3696:7;3704:10;3672:43;;;;;;;;:::i;:::-;;;;;;;;2941:781;2853:869;;:::o;7189:1274::-;7665:4;;7652:40;;-1:-1:-1;;;7652:40:11;;7304:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7665:4:11;;7652:33;;:40;;7686:5;;7652:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7740:21;;;;7725:53;;-1:-1:-1;;;7725:53:11;;7605:87;;-1:-1:-1;;;;;;7725:47:11;;;;:53;;7773:4;;7725:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7825:32;;;;7810:64;;-1:-1:-1;;;7810:64:11;;7702:76;;-1:-1:-1;;;;;;7810:58:11;;;;:64;;7869:4;;7810:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7919:30;;;;7904:62;;-1:-1:-1;;;7904:62:11;;7788:86;;-1:-1:-1;;;;;;7904:56:11;;;;:62;;7961:4;;7904:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8015:30;;;;7998:73;;-1:-1:-1;;;7998:73:11;;7884:82;;-1:-1:-1;;;;;;7998:67:11;;;;:73;;8066:4;;7998:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8121:32;;;;8102:74;;-1:-1:-1;;;8102:74:11;;7976:95;;-1:-1:-1;;;;;;8102:68:11;;;;:74;;8171:4;;8102:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8081:95;;8202:7;:28;;;-1:-1:-1;;;;;8186:44:11;;;8276:7;:30;;;-1:-1:-1;;;;;8259:66:11;;8326:4;8259:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8382:30;;;;8365:91;;-1:-1:-1;;;8365:91:11;;8240;;-1:-1:-1;;;;;;8365:67:11;;;;:91;;8442:4;;8365:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8341:115;;7595:868;7189:1274;;;;;;;;;;;:::o;6101:247:14:-;6242:32;;;6197:4;6242:32;;;:19;:32;;;;;6213:61;;6197:4;;6242:32;6213:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6329:11;;6319:22;;;;;;;:::i;:::-;;;;;;;;6301:13;6291:24;;;;;;:50;6284:57;;;6101:247;;;;;:::o;4451:176::-;1094:13:0;:11;:13::i;:::-;4565:55:14::1;::::0;-1:-1:-1;;;4565:55:14;;-1:-1:-1;;;;;4565:10:14::1;:29;::::0;::::1;::::0;:55:::1;::::0;4595:11;;4608;;;;4565:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;942:1326:11::0;1082:6;;1026:13;;;;1082:6;;:14;;:6;:14;1074:33;;;;-1:-1:-1;;;1074:33:11;;28577:2:21;1074:33:11;;;28559:21:21;28616:1;28596:18;;;28589:29;-1:-1:-1;;;28634:18:21;;;28627:37;28681:18;;1074:33:11;28375:330:21;1074:33:11;-1:-1:-1;;;;;1125:17:11;;;;;;:10;:17;;;;;;;;:25;;:17;:25;1117:80;;;;-1:-1:-1;;;1117:80:11;;28912:2:21;1117:80:11;;;28894:21:21;28951:2;28931:18;;;28924:30;28990:34;28970:18;;;28963:62;-1:-1:-1;;;29041:18:21;;;29034:40;29091:19;;1117:80:11;28710:406:21;1117:80:11;1216:35;;-1:-1:-1;;;1216:35:11;;1255:7;;-1:-1:-1;;;;;1216:23:11;;;;;:35;;1240:10;;1216:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;1208:79;;;;-1:-1:-1;;;1208:79:11;;;;;;;:::i;:::-;1305:49;;-1:-1:-1;;;1305:49:11;;1358:7;;-1:-1:-1;;;;;1305:23:11;;;;;:49;;1329:10;;1348:4;;1305:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;1297:88;;;;-1:-1:-1;;;1297:88:11;;;;;;;:::i;:::-;1415:35;;-1:-1:-1;;;1415:35:11;;1396:15;;-1:-1:-1;;;;;1415:23:11;;;;;:35;;1439:10;;1415:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1460:60;;-1:-1:-1;;;1460:60:11;;1396:54;;-1:-1:-1;;;;;;1460:26:11;;;;;:60;;1487:10;;1506:4;;1512:7;;1460:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1577:15:11;1585:7;1577;:15;:::i;:::-;1538:35;;-1:-1:-1;;;1538:35:11;;-1:-1:-1;;;;;1538:23:11;;;;;:35;;1562:10;;1538:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;1530:87;;;;-1:-1:-1;;;1530:87:11;;;;;;;:::i;:::-;1637:10;1652:23;1664:10;1652:11;:23::i;:::-;1636:39;;;1699:9;1693:2;:15;;1685:53;;;;-1:-1:-1;;;1685:53:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1752:14:11;;;;;;:7;:14;;;;;;;;:22;;:14;:22;1749:303;;1855:4;;1798;;-1:-1:-1;1816:22:11;;1841:19;;-1:-1:-1;;;;;1855:4:11;1841:13;:19::i;:::-;1816:44;;1874:29;1889:5;1895:7;1874:14;:29::i;:::-;1962:4;;1948:19;;-1:-1:-1;;;;;1962:4:11;1948:13;:19::i;:::-;1922:23;1931:14;1922:7;:23;:::i;:::-;:45;;;;:::i;:::-;1971:1;1922:50;1918:120;;2016:4;;2002:19;;-1:-1:-1;;;;;2016:4:11;2002:13;:19::i;:::-;:21;;2022:1;2002:21;:::i;:::-;1992:31;;1918:120;1775:277;1749:303;2085:4;;2071:19;;-1:-1:-1;;;;;2085:4:11;2071:13;:19::i;:::-;2111:10;;2122:74;;2061:29;;-1:-1:-1;2101:106:11;;2111:10;;;;;2122:74;;2133:10;;2144:5;;2150:7;;2158:8;;2111:10;;2061:29;;2122:74;;;:::i;:::-;;;;;;;;;;;;;2197:9;2101;:106::i;:::-;2223:38;2236:5;2242:7;2250:10;2223:38;;;;;;;;:::i;:::-;;;;;;;;1016:1252;;;;942:1326;;:::o;13108:253::-;1094:13:0;:11;:13::i;:::-;13268:40:11::1;::::0;-1:-1:-1;;;13268:40:11;;13210:1:::1;::::0;-1:-1:-1;;;;;13247:10:11::1;:20;::::0;::::1;::::0;;;13268:25:::1;::::0;:40:::1;::::0;13302:4:::1;::::0;13268:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13310:10;13322:11;13346:6;13335:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;13247:107;;;;;;;;;;;;;;;;;;:::i;8998:164::-:0;9051:20;9105:5;9111:1;9114;9116:5;9122:1;9124:2;9127:19;9141:4;;;;;;;;;-1:-1:-1;;;;;9141:4:11;9127:13;:19::i;:::-;9094:61;;;-1:-1:-1;;;;;32553:32:21;;;9094:61:11;;;32535:51:21;32634:4;32622:17;;;32602:18;;;32595:45;32676:17;;;32656:18;;;32649:45;32742:6;32730:19;;;32710:18;;;32703:47;32787:17;;32766:19;;;32759:46;32842:17;;;;32821:19;;;32814:46;32876:19;;;32869:35;9147:7:11;32920:19:21;;;32913:50;32507:19;;9094:61:11;;;;;;;;;;;;9083:72;;8998:164;;;:::o;2274:469::-;2355:6;;;;:14;;:6;:14;2347:33;;;;-1:-1:-1;;;2347:33:11;;;;;;;:::i;:::-;2391:10;2406:23;2418:10;2406:11;:23::i;:::-;-1:-1:-1;2390:39:11;-1:-1:-1;2461:9:11;2447:10;2390:39;2447:7;:10;:::i;:::-;:23;;2439:50;;;;-1:-1:-1;;;2439:50:11;;33176:2:21;2439:50:11;;;33158:21:21;33215:2;33195:18;;;33188:30;-1:-1:-1;;;33234:18:21;;;33227:45;33289:18;;2439:50:11;32974:339:21;2439:50:11;2513:9;2507:2;:15;;2499:53;;;;-1:-1:-1;;;2499:53:11;;;;;;;:::i;:::-;2581:10;;;2676:4;;2571:115;;2581:10;;;;;2603;;2625:7;;2581:10;;2639:22;;2662:19;;-1:-1:-1;;;;;2676:4:11;2662:13;:19::i;:::-;2592:90;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2683:2;2571:9;:115::i;:::-;2701:35;;;33492:25:21;;;2725:10:11;33548:2:21;33533:18;;33526:60;2701:35:11;;33465:18:21;2701:35:11;33318:274:21;9172:244:11;9228:14;9316:10;;9228:14;;;;;;-1:-1:-1;;;;;9292:10:11;:23;;;;9316:10;;9336:4;9343:14;9351:5;9343:7;:14::i;:::-;9359:5;9366:13;9292:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9267:113;;;;-1:-1:-1;9172:244:11;-1:-1:-1;;;;9172:244:11:o;1819:342:15:-;719:10:4;2031:4:15;2007:29;1999:80;;;;-1:-1:-1;;;1999:80:15;;35530:2:21;1999:80:15;;;35512:21:21;35569:2;35549:18;;;35542:30;35608:34;35588:18;;;35581:62;-1:-1:-1;;;35659:18:21;;;35652:36;35705:19;;1999:80:15;35328:402:21;1999:80:15;2089:65;2111:11;2124;;2089:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2089:65:15;;;;;;;;;;;;;;;;;;;;;;2137:6;;-1:-1:-1;2089:65:15;-1:-1:-1;2145:8:15;;;;;;2089:65;;2145:8;;;;2089:65;;;;;;;;;-1:-1:-1;2089:21:15;;-1:-1:-1;;;2089:65:15:i;:::-;1819:342;;;;;;:::o;14709::11:-;14922:4;;14909:40;;-1:-1:-1;;;14909:40:11;;14809:28;;;;-1:-1:-1;;;;;14922:4:11;;;;14909:33;;:40;;14943:5;;14909:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14997:21;;;;14982:62;;-1:-1:-1;;;14982:62:11;;14862:87;;-1:-1:-1;;;;;;14982:47:11;;;;:62;;15038:4;;14982:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14959:85;14709:342;-1:-1:-1;;;14709:342:11:o;6589:178::-;1094:13:0;:11;:13::i;:::-;6707:53:11::1;::::0;-1:-1:-1;;;;;;35928:3:21;35906:16;;;35902:38;6707:53:11::1;::::0;::::1;35890:51:21::0;35957:11;;;35950:27;;;35993:12;;6707:53:11::1;;;;;;;;;;;;6691:13;:69;;;;;;:::i;:::-;;6589:178:::0;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;525:51:14:-;;;;;;;;;;;;;;;;:::i;1734:206:1:-;719:10:4;;1827:14:1;:12;:14::i;:::-;-1:-1:-1;;;;;1827:24:1;;1819:78;;;;-1:-1:-1;;;1819:78:1;;38291:2:21;1819:78:1;;;38273:21:21;38330:2;38310:18;;;38303:30;38369:34;38349:18;;;38342:62;-1:-1:-1;;;38420:18:21;;;38413:39;38469:19;;1819:78:1;38089:405:21;1819:78:1;1907:26;1926:6;1907:18;:26::i;:::-;1770:170;1734:206::o;6825:358:11:-;6906:7;6981:22;7006:28;7044:35;7063:5;7070:8;7044:18;:35::i;:::-;6980:99;;;;;;;;;;7089:19;7128:20;7111:14;:37;;;;:::i;:::-;7089:59;-1:-1:-1;;;;6825:358:11;;;;;:::o;1201:85:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;;1201:85::o;10647:129:11:-;10717:4;10740:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;10740:29:11;;;;;;;;;;;;;;;10647:129::o;5255:326:14:-;5378:35;;;5358:17;5378:35;;;:19;:35;;;;;5358:55;;5334:12;;5358:17;5378:35;5358:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5431:4;:11;5446:1;5431:16;5423:58;;;;-1:-1:-1;;;5423:58:14;;38701:2:21;5423:58:14;;;38683:21:21;38740:2;38720:18;;;38713:30;38779:31;38759:18;;;38752:59;38828:18;;5423:58:14;38499:353:21;5423:58:14;5498:31;5509:1;5526:2;5512:4;:11;:16;;;;:::i;:::-;5498:4;;:31;:10;:31::i;2749:94:11:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2818:13:11;;;::::1;;::::0;;;:7:::1;:13;::::0;;;;:18;;-1:-1:-1;;2818:18:11::1;::::0;::::1;;::::0;;;::::1;::::0;;2749:94::o;10459:182::-;1094:13:0;:11;:13::i;:::-;10550:9:11::1;10546:89;10566:5;:12;10564:1;:14;10546:89;;;10621:3;10598:10;:20;10609:5;10615:1;10609:8;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;10598:20:11::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;10598:20:11;:26;;-1:-1:-1;;10598:26:11::1;::::0;::::1;;::::0;;;::::1;::::0;;10580:3;::::1;::::0;::::1;:::i;:::-;;;;10546:89;;4971:278:14::0;1094:13:0;:11;:13::i;:::-;5142:14:14::1;;5166:4;5125:47;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;5125:47:14;;::::1;::::0;;;;;;5087:35:::1;::::0;::::1;;::::0;;;:19:::1;5125:47;5087:35:::0;;;:85:::1;::::0;:35;:85:::1;:::i;:::-;;5187:55;5211:14;5227;;5187:55;;;;;;;;:::i;3631:181::-:0;3747:58;;-1:-1:-1;;;3747:58:14;;-1:-1:-1;;;;;3747:10:14;:23;;;;:58;;3771:11;;3783;;;;3796:8;;;;3747:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3631:181;;;;;:::o;3728:277:11:-;3819:24;3855:12;3870:24;3882:11;3870;:24::i;:::-;3855:39;;3905:7;3914:9;3925;3938:18;3946:9;3938:7;:18::i;:::-;3974:24;;;;;;;;;;;;39959:25:21;;;40032:4;40020:17;;40000:18;;;39993:45;;;;40054:18;;;40047:34;;;40097:18;;;40090:34;;;3904:52:11;;-1:-1:-1;3904:52:11;;-1:-1:-1;3904:52:11;-1:-1:-1;3974:24:11;;39931:19:21;;3974:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3974:24:11;;-1:-1:-1;;3974:24:11;;;3728:277;-1:-1:-1;;;;;;;;3728:277:11:o;13371:212::-;13486:61;;-1:-1:-1;;;13486:61:11;;;40365:80:21;40461:12;;;40454:28;;;13431:19:11;;40498:12:21;;13486:61:11;;;;;;;;;;;;13476:72;;;;;;13462:86;;13371:212;;;:::o;5587:133:14:-;1094:13:0;:11;:13::i;:::-;5656:8:14::1;:20:::0;;-1:-1:-1;;;;;;5656:20:14::1;-1:-1:-1::0;;;;;5656:20:14;::::1;;::::0;;5691:22:::1;::::0;::::1;::::0;::::1;::::0;5656:20;;5691:22:::1;:::i;:::-;;;;;;;;5587:133:::0;:::o;3983:202::-;1094:13:0;:11;:13::i;:::-;4116:62:14::1;::::0;-1:-1:-1;;;4116:62:14;;-1:-1:-1;;;;;4116:10:14::1;:20;::::0;::::1;::::0;:62:::1;::::0;4137:8;;4147;;4157:11;;4170:7;;;;4116:62:::1;;;:::i;2342:757:15:-:0;2551:27;;;2529:19;2551:27;;;:14;:27;;;;;;:40;;;;2579:11;;;;2551:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2551:48:15;;;;;;;;;;;;-1:-1:-1;2551:48:15;2609:73;;;;-1:-1:-1;;;2609:73:15;;41226:2:21;2609:73:15;;;41208:21:21;41265:2;41245:18;;;41238:30;41304:34;41284:18;;;41277:62;-1:-1:-1;;;41355:18:21;;;41348:33;41398:19;;2609:73:15;41024:399:21;2609:73:15;2723:11;2710:8;;2700:19;;;;;;;:::i;:::-;;;;;;;;:34;2692:80;;;;-1:-1:-1;;;2692:80:15;;41630:2:21;2692:80:15;;;41612:21:21;41669:2;41649:18;;;41642:30;41708:34;41688:18;;;41681:62;-1:-1:-1;;;41759:18:21;;;41752:31;41800:19;;2692:80:15;41428:397:21;2692:80:15;2818:27;;;2877:1;2818:27;;;:14;:27;;;;;;:40;;;;2846:11;;;;2818:40;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2818:48:15;;;;;;;;;;;;:61;;;;2946:65;;;;;;;;;;;;;;;;;;;2968:11;;2981;;2946:65;;;;;;2981:11;2946:65;;2981:11;2946:65;;;;;;;;;-1:-1:-1;;2946:65:15;;;;;;;;;;;;;;;;;;;;;;2994:6;;-1:-1:-1;2946:65:15;-1:-1:-1;3002:8:15;;;;;;2946:65;;3002:8;;;;2946:65;;;;;;;;;-1:-1:-1;2946:21:15;;-1:-1:-1;;;2946:65:15:i;:::-;3026:66;3046:11;3059;;3072:6;3080:11;3026:66;;;;;;;;;;:::i;:::-;;;;;;;;2475:624;2342:757;;;;;;:::o;14111:592:11:-;14148:21;14170:23;14204:13;14236:9;14232:135;14252:8;:15;14250:17;;14232:135;;;14314:1;14290:8;:21;14299:8;14308:1;14299:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14299:11:11;14290:21;;;;;;;;;;;;;:25;14287:70;;;14335:7;;;;:::i;:::-;;;;14287:70;14269:3;;;;:::i;:::-;;;;14232:135;;;;14377:21;14415:5;-1:-1:-1;;;;;14401:20:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14401:20:11;;14377:44;;14431:23;14471:5;-1:-1:-1;;;;;14457:20:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14457:20:11;;14431:46;;14493:9;14489:201;14509:8;:15;14507:17;;14489:201;;;14571:1;14547:8;:21;14556:8;14565:1;14556:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14556:11:11;14547:21;;;;;;;;;;;;;:25;14544:136;;;14602:8;14611:1;14602:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14602:11:11;14592:4;14597:1;14592:7;;;;;;;;:::i;:::-;;;;;;:21;-1:-1:-1;;;;;14592:21:11;;;-1:-1:-1;;;;;14592:21:11;;;;;14644:8;:21;14653:8;14662:1;14653:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14653:11:11;14644:21;;;;;;;;;;;;;14632:9;;:6;;14639:1;;14632:9;;;;;;:::i;:::-;;;;;;:33;;;;;14544:136;14526:3;;;;:::i;:::-;;;;14489:201;;;;14194:509;;;14111:592;;:::o;5726:280:14:-;1094:13:0;:11;:13::i;:::-;5849:1:14::1;5839:7;:11;5831:45;;;::::0;-1:-1:-1;;;5831:45:14;;42530:2:21;5831:45:14::1;::::0;::::1;42512:21:21::0;42569:2;42549:18;;;42542:30;-1:-1:-1;;;42588:18:21;;;42581:51;42649:18;;5831:45:14::1;42328:345:21::0;5831:45:14::1;5886:28;::::0;;::::1;;::::0;;;:15:::1;:28;::::0;;;;;;;:41;;::::1;::::0;;;;;;;;;;:51;;;5952:47;;42901:34:21;;;42951:18;;42944:43;;;;43003:18;;;42996:34;;;5952:47:14::1;::::0;42864:2:21;42849:18;5952:47:14::1;42678:358:21::0;8688:300:11;8752:15;8779:24;8806:10;-1:-1:-1;;;;;8806:20:11;;8827:10;-1:-1:-1;;;;;8827:25:11;;8861:4;8827:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8869:13;8892:4;8899:1;8806:95;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8806:95:11;;;;;;;;;;;;:::i;:::-;8968:2;8951:20;8945:27;;8688:300;-1:-1:-1;;;8688:300:11:o;847:99:1:-;926:13;;-1:-1:-1;;;;;926:13:1;;847:99::o;5029:201:11:-;1094:13:0;:11;:13::i;:::-;5110:5:11::1;5117:1;5110:8:::0;5107:117:::1;;5135:25;-1:-1:-1::0;;;;;;;;;;;5156:3:11::1;5135:10;:25::i;:::-;5029:201:::0;;:::o;5107:117::-:1;5189:24;-1:-1:-1::0;;;;;;;;;;;5209:3:11::1;5189:10;:24::i;4770:195:14:-:0;1094:13:0;:11;:13::i;:::-;4867:32:14::1;::::0;::::1;;::::0;;;:19:::1;:32;::::0;;;;:40:::1;4902:5:::0;;4867:32;:40:::1;:::i;:::-;;4922:36;4939:11;4952:5;;4922:36;;;;;;;;:::i;1139:178:1:-:0;1094:13:0;:11;:13::i;:::-;1228::1::1;:24:::0;;-1:-1:-1;;;;;;1228:24:1::1;-1:-1:-1::0;;;;;1228:24:1;::::1;::::0;;::::1;::::0;;;1292:7:::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;1267:43:1::1;;;;;;;;;;;1139:178:::0;:::o;3363:209:14:-;3497:68;;-1:-1:-1;;;3497:68:14;;3466:12;;-1:-1:-1;;;;;3497:10:14;:20;;;;:68;;3518:8;;3528;;3546:4;;3553:11;;3497:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3497:68:14;;;;;;;;;;;;:::i;:::-;3490:75;3363:209;-1:-1:-1;;;;;3363:209:14:o;5701:882:11:-;-1:-1:-1;;;;;5857:18:11;;5760:7;5857:18;;;:8;:18;;;;;5760:7;;5776:16;;;;5760:7;;;;5914:156;5938:8;:15;5934:19;;5914:156;;;5978:7;:22;;:35;6001:8;6010:1;6001:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6001:11:11;5978:35;;;;;;;;;;;;;:40;5974:86;;6038:7;;;;:::i;:::-;;;;5974:86;5955:3;;;;:::i;:::-;;;;5914:156;;;;6080:21;6118:5;-1:-1:-1;;;;;6104:20:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6104:20:11;;6080:44;;6134:23;6174:5;-1:-1:-1;;;;;6160:20:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6160:20:11;;6134:46;;6192:13;6224:9;6219:268;6243:8;:15;6239:19;;6219:268;;;6283:7;:22;;:35;6306:8;6315:1;6306:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6306:11:11;6283:35;;;;;;;;;;;;;:40;6279:198;;6357:8;6366:1;6357:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6357:11:11;6343:4;6348:5;6343:11;;;;;;;;:::i;:::-;;;;;;:25;-1:-1:-1;;;;;6343:25:11;;;-1:-1:-1;;;;;6343:25:11;;;;;6402:7;:22;;:35;6425:8;6434:1;6425:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6425:11:11;6402:35;;;;;;;;;;;;;6386:13;;:6;;6393:5;;6386:13;;;;;;:::i;:::-;;;;;;;;;;:51;6455:7;;;;:::i;:::-;;;;6279:198;6260:3;;;;:::i;:::-;;;;6219:268;;;-1:-1:-1;;6504:12:11;;;6517:25;;;6555:20;;;;;-1:-1:-1;;;;;6504:12:11;;;;6517:25;;-1:-1:-1;6543:4:11;;-1:-1:-1;6543:4:11;-1:-1:-1;6555:20:11;-1:-1:-1;5701:882:11;;-1:-1:-1;;;5701:882:11:o;13800:305::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;13888:14:11;::::1;;::::0;;;:8:::1;:14;::::0;;;;;:25;-1:-1:-1;13888:25:11::1;13880:57;;;;-1:-1:-1::0;;;13880:57:11::1;;;;;;;:::i;:::-;13955:28;-1:-1:-1::0;;;;;;;;;;;13972:10:11::1;13955:7;:28::i;:::-;:34;;13985:4;13955:34;13947:63;;;::::0;-1:-1:-1;;;13947:63:11;;46166:2:21;13947:63:11::1;::::0;::::1;46148:21:21::0;46205:2;46185:18;;;46178:30;-1:-1:-1;;;46224:18:21;;;46217:47;46281:18;;13947:63:11::1;45964:341:21::0;13947:63:11::1;-1:-1:-1::0;;;;;14020:14:11;::::1;;::::0;;;:8:::1;:14;::::0;;;;:26;;14039:7;;14020:14;:26:::1;::::0;14039:7;;14020:26:::1;:::i;:::-;::::0;;;-1:-1:-1;;14056:42:11::1;::::0;-1:-1:-1;;;14056:42:11;;-1:-1:-1;;;;;14056:21:11;::::1;::::0;::::1;::::0;:42:::1;::::0;14078:10:::1;::::0;14090:7;;14056:42:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2433:187:0:-:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;979:508:15:-;1128:12;1142:19;1165:153;1199:9;1210:3;1238:34;;;1274:11;1287;1300:6;1308:8;1215:102;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1215:102:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1215:102:15;-1:-1:-1;;;;;;1215:102:15;;;;;;;;;;1173:4;;1165:153;;:33;:153::i;:::-;1127:191;;;;1376:7;1371:110;;1399:71;1419:11;1432;1445:6;1453:8;1463:6;1399:19;:71::i;1359:130:0:-;719:10:4;1422:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:0;;1414:68;;;;-1:-1:-1;;;1414:68:0;;47072:2:21;1414:68:0;;;47054:21:21;;;47091:18;;;47084:30;47150:34;47130:18;;;47123:62;47202:18;;1414:68:0;46870:356:21;9688:274:11;9782:4;;9760:35;;-1:-1:-1;;;9760:35:11;;-1:-1:-1;;;;;9760:21:11;;;;;;:35;;9782:4;;;;9787:7;;9760:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9851:4:11;;9813:43;;-1:-1:-1;;;9813:43:11;;9860:7;;-1:-1:-1;;;;;9813:23:11;;;;;;:43;;9845:4;;9851;;;9813:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;9805:82;;;;-1:-1:-1;;;9805:82:11;;;;;;;:::i;:::-;9910:4;;9897:58;;-1:-1:-1;;;9897:58:11;;-1:-1:-1;;;;;47525:15:21;;;9897:58:11;;;47507:34:21;47557:18;;;47550:34;;;9947:4:11;47600:18:21;;;47593:43;9910:4:11;47652:18:21;;;47645:47;9910:4:11;;;;9897:26;;47441:19:21;;9897:58:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9502:180;9592:83;9600:11;9613:5;9628:10;9649:3;9655:13;9592:83;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9669:5;9592:7;:83::i;10786:2316::-;10904:15;10931:18;10951:23;10975:10;10987:25;11013:26;11054:8;11043:63;;;;;;;;;;;;:::i;:::-;10930:176;;;;;;;;;;11116:24;11173:4;:9;;;11196:4;:22;;;11249:4;:13;;;11232:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;11294:4;:20;;;11277:38;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11277:38:11;;;;;;;;;;11329:14;;;;11357:17;;;;11143:241;;;;;11277:38;11143:241;;:::i;:::-;;;;;;;;;;;;;11116:268;;11398:5;11395:285;;;11426:69;-1:-1:-1;;;;;;;;;;;11445:49:11;11461:4;:16;;;11479:4;:14;;;11445:15;:49::i;11426:69::-;:77;;11499:4;11426:77;11418:113;;;;-1:-1:-1;;;11418:113:11;;53189:2:21;11418:113:11;;;53171:21:21;53228:2;53208:18;;;53201:30;-1:-1:-1;;;53247:18:21;;;53240:54;53311:18;;11418:113:11;52987:348:21;11418:113:11;11570:22;;;;;;11633:16;;;;11614:35;;11606:62;;;;-1:-1:-1;;;11606:62:11;;53542:2:21;11606:62:11;;;53524:21:21;53581:2;53561:18;;;53554:30;-1:-1:-1;;;53600:18:21;;;53593:44;53654:18;;11606:62:11;53340:338:21;11606:62:11;11404:276;11395:285;11727:9;;-1:-1:-1;;;;;11718:19:11;;;11690:25;11718:19;;;:8;:19;;;;;;;11764:9;;11747:26;;-1:-1:-1;;;;;;11747:26:11;;;;;;;;;11814:22;;;-1:-1:-1;11783:27:11;;:53;11868:14;;;;11846:19;;;:36;11921:250;11941:7;:14;11938:1;:17;11921:250;;;11998:9;12008:1;11998:12;;;;;;;;:::i;:::-;;;;;;;11975:8;:20;11984:7;11992:1;11984:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11975:20:11;-1:-1:-1;;;;;11975:20:11;;;;;;;;;;;;:35;;;;12027:7;:19;12035:7;12043:1;12035:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;12027:19:11;;;;;;;;;;;-1:-1:-1;12027:19:11;;;;12024:137;;;12083:1;12068:9;12078:1;12068:12;;;;;;;;:::i;:::-;;;;;;;:16;12065:82;;;12116:9;12126:1;12116:12;;;;;;;;:::i;:::-;;;;;;;12105:23;;12065:82;11957:3;;;;:::i;:::-;;;;11921:250;;;;12181:9;12212;12208:602;12231:4;:13;;;:20;12227:1;:24;12208:602;;;12271:28;12282:4;:13;;;12296:1;12282:16;;;;;;;;:::i;:::-;;;;;;;12271:10;:28::i;:::-;12359:4;:20;;;12380:1;12359:23;;;;;;;;:::i;:::-;;;;;;;12313:9;:24;;:42;12338:4;:13;;;12352:1;12338:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;12313:42:11;-1:-1:-1;;;;;12313:42:11;;;;;;;;;;;;;:69;;;;;;;:::i;:::-;;;;;;;;12456:7;:25;12464:4;:13;;;12478:1;12464:16;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;12456:25:11;;;;;;;;;;;-1:-1:-1;12456:25:11;;;;12453:347;;;12507:4;12500:11;;12576:1;12550:4;:20;;;12571:1;12550:23;;;;;;;;:::i;:::-;;;;;;;12532:15;:41;;;;:::i;:::-;:45;12529:257;;;12615:9;;-1:-1:-1;;;;;12600:25:11;;;;;:14;:25;;;;;:44;;12629:15;;12600:25;:44;;12629:15;;12600:44;:::i;:::-;;;;;;;;12666:101;12684:4;:13;;;12698:1;12684:16;;;;;;;;:::i;:::-;;;;;;;12744:7;12720:4;:20;;;12741:1;12720:23;;;;;;;;:::i;:::-;;;;;;;12702:15;:41;;;;:::i;:::-;:49;;;;:::i;:::-;12761:4;12666:17;:101::i;:::-;;12529:257;12253:3;;;;:::i;:::-;;;;12208:602;;;;12824:4;12823:5;:28;;;;;12850:1;12832:15;:19;12823:28;12820:180;;;12881:9;;-1:-1:-1;;;;;12866:25:11;;;;;:14;:25;;;;;:44;;12895:15;;12866:25;:44;;12895:15;;12866:44;:::i;:::-;;;;-1:-1:-1;;12942:4:11;;12924:65;;-1:-1:-1;;;;;12942:4:11;12948:25;12966:7;12948:15;:25;:::i;12924:65::-;;12820:180;13015:76;13028:4;:9;;;13038:4;:13;;;13052:4;:20;;;13073:4;:17;;;13015:76;;;;;;;;;:::i;:::-;;;;;;;;10894:2208;;;;;;;;;10786:2316;;;;:::o;1501:153:1:-;1590:13;1583:20;;-1:-1:-1;;;;;;1583:20:1;;;1613:34;1638:8;1613:24;:34::i;8865:2712:19:-;8999:12;9051:7;9035:12;9051:7;9045:2;9035:12;:::i;:::-;:23;;9027:50;;;;-1:-1:-1;;;9027:50:19;;54532:2:21;9027:50:19;;;54514:21:21;54571:2;54551:18;;;54544:30;-1:-1:-1;;;54590:18:21;;;54583:44;54644:18;;9027:50:19;54330:338:21;9027:50:19;9112:16;9121:7;9112:6;:16;:::i;:::-;9095:6;:13;:33;;9087:63;;;;-1:-1:-1;;;9087:63:19;;54875:2:21;9087:63:19;;;54857:21:21;54914:2;54894:18;;;54887:30;-1:-1:-1;;;54933:18:21;;;54926:47;54990:18;;9087:63:19;54673:341:21;9087:63:19;9161:22;9224:15;;9252:1895;;;;11288:4;11282:11;11269:24;;11466:1;11455:9;11448:20;11514:4;11503:9;11499:20;11493:4;11486:34;9217:2317;;9252:1895;9426:4;9420:11;9407:24;;10053:2;10044:7;10040:16;10419:9;10412:17;10406:4;10402:28;10390:9;10379;10375:25;10371:60;10467:7;10463:2;10459:16;10711:6;10697:9;10690:17;10684:4;10680:28;10668:9;10660:6;10656:22;10652:57;10648:70;10493:417;10744:3;10740:2;10737:11;10493:417;;;10882:9;;10871:21;;10785:4;10777:13;;;;10817;10493:417;;;-1:-1:-1;;10928:26:19;;;11128:2;11111:11;-1:-1:-1;;11107:25:19;11101:4;11094:39;-1:-1:-1;9217:2317:19;-1:-1:-1;11561:9:19;8865:2712;-1:-1:-1;;;;8865:2712:19:o;4011:729:11:-;4075:5;4082:7;4091;4152:9;:16;4172:2;4152:22;4148:94;;4190:41;;-1:-1:-1;;;4190:41:11;;55221:2:21;4190:41:11;;;55203:21:21;55260:2;55240:18;;;55233:30;55299:33;55279:18;;;55272:61;55350:18;;4190:41:11;55019:355:21;4148:94:11;-1:-1:-1;;;4592:4:11;4577:20;;4571:27;4637:4;4622:20;;4616:27;4690:4;4675:20;;;4669:27;4308:9;4661:36;;4571:27;;4616;4011:729::o;10151:110::-;10229:25;10240:4;10246:7;10229:10;:25::i;1118:1240:20:-;1275:4;1281:12;1341:15;1366:13;1389:24;1426:8;1416:19;;-1:-1:-1;;;;;1416:19:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1416:19:20;;1389:46;;1904:1;1879;1846:9;1840:16;1812:4;1801:9;1797:20;1767:1;1733:7;1708:4;1690:239;1678:251;;1992:16;1981:27;;2036:8;2027:7;2024:21;2021:76;;;2075:8;2064:19;;2021:76;2178:7;2165:11;2158:28;2294:7;2291:1;2284:4;2271:11;2267:22;2252:50;2329:8;;;;-1:-1:-1;1118:1240:20;-1:-1:-1;;;;;;1118:1240:20:o;1493:320:15:-;1716:8;1706:19;;;;;;1655:14;:27;1670:11;1655:27;;;;;;;;;;;;;;;1683:11;1655:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1655:48:15;;;;;;;;;:70;;;;1740:66;;;;1754:11;;1767;;1696:6;;1788:8;;1798:7;;1740:66;:::i;:::-;;;;;;;;1493:320;;;;;:::o;2077:491:14:-;2299:32;;;2270:26;2299:32;;;:19;:32;;;;;2270:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:13;:20;2373:1;2349:25;2341:86;;;;-1:-1:-1;;;2341:86:14;;56594:2:21;2341:86:14;;;56576:21:21;56633:2;56613:18;;;56606:30;56672:34;56652:18;;;56645:62;-1:-1:-1;;;56723:18:21;;;56716:46;56779:19;;2341:86:14;56392:412:21;2341:86:14;2437:124;;-1:-1:-1;;;2437:124:14;;-1:-1:-1;;;;;2437:10:14;:15;;;;2460:10;;2437:124;;2472:11;;2485:13;;2500:8;;2510:14;;2526:18;;2546:14;;2437:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2260:308;2077:491;;;;;;:::o;13589:205:11:-;-1:-1:-1;;;;;13651:27:11;;;;;;:13;:27;;;;;;;;:36;;;;13648:140;;-1:-1:-1;;;;;13702:27:11;;;;;:13;:27;;;;;:34;;-1:-1:-1;;13702:34:11;13732:4;13702:34;;;;;;13750:8;:27;;;;;;;;;;;;;;-1:-1:-1;;;;;;13750:27:11;;;;;;13589:205::o;9968:177::-;10098:4;;10085:53;;-1:-1:-1;;;10085:53:11;;10060:7;;-1:-1:-1;;;;;10098:4:11;;10085:27;;:53;;10113:5;;10120:7;;10128:9;;10085:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10078:60;9968:177;-1:-1:-1;;;;9968:177:11:o;10267:186::-;10350:22;10358:4;10364:7;10350;:22::i;:::-;10345:102;;10388:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;10388:29:11;;;;;;;;;:36;;-1:-1:-1;;10388:36:11;10420:4;10388:36;;;10267:186;;:::o;14:117:21:-;99:6;92:5;88:18;81:5;78:29;68:57;;121:1;118;111:12;136:347;187:8;197:6;251:3;244:4;236:6;232:17;228:27;218:55;;269:1;266;259:12;218:55;-1:-1:-1;292:20:21;;-1:-1:-1;;;;;324:30:21;;321:50;;;367:1;364;357:12;321:50;404:4;396:6;392:17;380:29;;456:3;449:4;440:6;432;428:19;424:30;421:39;418:59;;;473:1;470;463:12;418:59;136:347;;;;;:::o;488:171::-;555:20;;-1:-1:-1;;;;;604:30:21;;594:41;;584:69;;649:1;646;639:12;584:69;488:171;;;:::o;664:923::-;770:6;778;786;794;802;810;863:3;851:9;842:7;838:23;834:33;831:53;;;880:1;877;870:12;831:53;919:9;906:23;938:30;962:5;938:30;:::i;:::-;987:5;-1:-1:-1;1043:2:21;1028:18;;1015:32;-1:-1:-1;;;;;1096:14:21;;;1093:34;;;1123:1;1120;1113:12;1093:34;1162:58;1212:7;1203:6;1192:9;1188:22;1162:58;:::i;:::-;1239:8;;-1:-1:-1;1136:84:21;-1:-1:-1;1136:84:21;;-1:-1:-1;1293:37:21;1326:2;1311:18;;1293:37;:::i;:::-;1283:47;;1383:2;1372:9;1368:18;1355:32;1339:48;;1412:2;1402:8;1399:16;1396:36;;;1428:1;1425;1418:12;1396:36;;1467:60;1519:7;1508:8;1497:9;1493:24;1467:60;:::i;:::-;664:923;;;;-1:-1:-1;664:923:21;;-1:-1:-1;664:923:21;;1546:8;;664:923;-1:-1:-1;;;664:923:21:o;1592:131::-;-1:-1:-1;;;;;1667:31:21;;1657:42;;1647:70;;1713:1;1710;1703:12;1728:247;1787:6;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;1895:9;1882:23;1914:31;1939:5;1914:31;:::i;1980:203::-;-1:-1:-1;;;;;2144:32:21;;;;2126:51;;2114:2;2099:18;;1980:203::o;2370:245::-;2428:6;2481:2;2469:9;2460:7;2456:23;2452:32;2449:52;;;2497:1;2494;2487:12;2449:52;2536:9;2523:23;2555:30;2579:5;2555:30;:::i;2620:250::-;2705:1;2715:113;2729:6;2726:1;2723:13;2715:113;;;2805:11;;;2799:18;2786:11;;;2779:39;2751:2;2744:10;2715:113;;;-1:-1:-1;;2862:1:21;2844:16;;2837:27;2620:250::o;2875:270::-;2916:3;2954:5;2948:12;2981:6;2976:3;2969:19;2997:76;3066:6;3059:4;3054:3;3050:14;3043:4;3036:5;3032:16;2997:76;:::i;:::-;3127:2;3106:15;-1:-1:-1;;3102:29:21;3093:39;;;;3134:4;3089:50;;2875:270;-1:-1:-1;;2875:270:21:o;3150:217::-;3297:2;3286:9;3279:21;3260:4;3317:44;3357:2;3346:9;3342:18;3334:6;3317:44;:::i;3372:118::-;3458:5;3451:13;3444:21;3437:5;3434:32;3424:60;;3480:1;3477;3470:12;3495:241;3551:6;3604:2;3592:9;3583:7;3579:23;3575:32;3572:52;;;3620:1;3617;3610:12;3572:52;3659:9;3646:23;3678:28;3700:5;3678:28;:::i;3741:542::-;3819:6;3827;3835;3888:2;3876:9;3867:7;3863:23;3859:32;3856:52;;;3904:1;3901;3894:12;3856:52;3943:9;3930:23;3962:30;3986:5;3962:30;:::i;:::-;4011:5;-1:-1:-1;4067:2:21;4052:18;;4039:32;-1:-1:-1;;;;;4083:30:21;;4080:50;;;4126:1;4123;4116:12;4080:50;4165:58;4215:7;4206:6;4195:9;4191:22;4165:58;:::i;:::-;3741:542;;4242:8;;-1:-1:-1;4139:84:21;;-1:-1:-1;;;;3741:542:21:o;4288:315::-;4356:6;4364;4417:2;4405:9;4396:7;4392:23;4388:32;4385:52;;;4433:1;4430;4423:12;4385:52;4469:9;4456:23;4446:33;;4529:2;4518:9;4514:18;4501:32;4542:31;4567:5;4542:31;:::i;:::-;4592:5;4582:15;;;4288:315;;;;;:::o;4608:127::-;4669:10;4664:3;4660:20;4657:1;4650:31;4700:4;4697:1;4690:15;4724:4;4721:1;4714:15;4740:252;4812:2;4806:9;4854:3;4842:16;;-1:-1:-1;;;;;4873:34:21;;4909:22;;;4870:62;4867:88;;;4935:18;;:::i;:::-;4971:2;4964:22;4740:252;:::o;4997:255::-;5069:2;5063:9;5111:6;5099:19;;-1:-1:-1;;;;;5133:34:21;;5169:22;;;5130:62;5127:88;;;5195:18;;:::i;5257:275::-;5328:2;5322:9;5393:2;5374:13;;-1:-1:-1;;5370:27:21;5358:40;;-1:-1:-1;;;;;5413:34:21;;5449:22;;;5410:62;5407:88;;;5475:18;;:::i;:::-;5511:2;5504:22;5257:275;;-1:-1:-1;5257:275:21:o;5537:183::-;5597:4;-1:-1:-1;;;;;5619:30:21;;5616:56;;;5652:18;;:::i;:::-;-1:-1:-1;5697:1:21;5693:14;5709:4;5689:25;;5537:183::o;5725:737::-;5779:5;5832:3;5825:4;5817:6;5813:17;5809:27;5799:55;;5850:1;5847;5840:12;5799:55;5886:6;5873:20;5912:4;5936:60;5952:43;5992:2;5952:43;:::i;:::-;5936:60;:::i;:::-;6030:15;;;6116:1;6112:10;;;;6100:23;;6096:32;;;6061:12;;;;6140:15;;;6137:35;;;6168:1;6165;6158:12;6137:35;6204:2;6196:6;6192:15;6216:217;6232:6;6227:3;6224:15;6216:217;;;6312:3;6299:17;6329:31;6354:5;6329:31;:::i;:::-;6373:18;;6411:12;;;;6249;;6216:217;;;-1:-1:-1;6451:5:21;5725:737;-1:-1:-1;;;;;;5725:737:21:o;6467:1140::-;6585:6;6593;6646:2;6634:9;6625:7;6621:23;6617:32;6614:52;;;6662:1;6659;6652:12;6614:52;6689:23;;-1:-1:-1;;;;;6761:14:21;;;6758:34;;;6788:1;6785;6778:12;6758:34;6826:6;6815:9;6811:22;6801:32;;6871:7;6864:4;6860:2;6856:13;6852:27;6842:55;;6893:1;6890;6883:12;6842:55;6929:2;6916:16;6951:4;6975:60;6991:43;7031:2;6991:43;:::i;6975:60::-;7069:15;;;7151:1;7147:10;;;;7139:19;;7135:28;;;7100:12;;;;7175:19;;;7172:39;;;7207:1;7204;7197:12;7172:39;7231:11;;;;7251:142;7267:6;7262:3;7259:15;7251:142;;;7333:17;;7321:30;;7284:12;;;;7371;;;;7251:142;;;7412:5;-1:-1:-1;;7455:18:21;;7442:32;;-1:-1:-1;;7486:16:21;;;7483:36;;;7515:1;7512;7505:12;7483:36;;7538:63;7593:7;7582:8;7571:9;7567:24;7538:63;:::i;:::-;7528:73;;;6467:1140;;;;;:::o;7794:388::-;7862:6;7870;7923:2;7911:9;7902:7;7898:23;7894:32;7891:52;;;7939:1;7936;7929:12;7891:52;7978:9;7965:23;7997:31;8022:5;7997:31;:::i;:::-;8047:5;-1:-1:-1;8104:2:21;8089:18;;8076:32;8117:33;8076:32;8117:33;:::i;9273:315::-;9341:6;9349;9402:2;9390:9;9381:7;9377:23;9373:32;9370:52;;;9418:1;9415;9408:12;9370:52;9457:9;9444:23;9476:31;9501:5;9476:31;:::i;:::-;9526:5;9578:2;9563:18;;;;9550:32;;-1:-1:-1;;;9273:315:21:o;9593:386::-;9660:6;9668;9721:2;9709:9;9700:7;9696:23;9692:32;9689:52;;;9737:1;9734;9727:12;9689:52;9776:9;9763:23;9795:30;9819:5;9795:30;:::i;9984:180::-;10043:6;10096:2;10084:9;10075:7;10071:23;10067:32;10064:52;;;10112:1;10109;10102:12;10064:52;-1:-1:-1;10135:23:21;;9984:180;-1:-1:-1;9984:180:21:o;10422:186::-;10470:4;-1:-1:-1;;;;;10492:30:21;;10489:56;;;10525:18;;:::i;:::-;-1:-1:-1;10591:2:21;10570:15;-1:-1:-1;;10566:29:21;10597:4;10562:40;;10422:186::o;10613:462::-;10655:5;10708:3;10701:4;10693:6;10689:17;10685:27;10675:55;;10726:1;10723;10716:12;10675:55;10762:6;10749:20;10793:48;10809:31;10837:2;10809:31;:::i;10793:48::-;10866:2;10857:7;10850:19;10912:3;10905:4;10900:2;10892:6;10888:15;10884:26;10881:35;10878:55;;;10929:1;10926;10919:12;10878:55;10994:2;10987:4;10979:6;10975:17;10968:4;10959:7;10955:18;10942:55;11042:1;11017:16;;;11035:4;11013:27;11006:38;;;;11021:7;10613:462;-1:-1:-1;;;10613:462:21:o;11080:525::-;11164:6;11172;11180;11233:2;11221:9;11212:7;11208:23;11204:32;11201:52;;;11249:1;11246;11239:12;11201:52;11288:9;11275:23;11307:30;11331:5;11307:30;:::i;:::-;11356:5;-1:-1:-1;11412:2:21;11397:18;;11384:32;-1:-1:-1;;;;;11428:30:21;;11425:50;;;11471:1;11468;11461:12;11425:50;11494:49;11535:7;11526:6;11515:9;11511:22;11494:49;:::i;:::-;11484:59;;;11562:37;11595:2;11584:9;11580:18;11562:37;:::i;:::-;11552:47;;11080:525;;;;;:::o;12176:313::-;12243:6;12251;12304:2;12292:9;12283:7;12279:23;12275:32;12272:52;;;12320:1;12317;12310:12;12272:52;12359:9;12346:23;12378:30;12402:5;12378:30;:::i;12494:384::-;12560:6;12568;12621:2;12609:9;12600:7;12596:23;12592:32;12589:52;;;12637:1;12634;12627:12;12589:52;12676:9;12663:23;12695:30;12719:5;12695:30;:::i;:::-;12744:5;-1:-1:-1;12801:2:21;12786:18;;12773:32;12814;12773;12814;:::i;13203:382::-;13268:6;13276;13329:2;13317:9;13308:7;13304:23;13300:32;13297:52;;;13345:1;13342;13335:12;13297:52;13384:9;13371:23;13403:31;13428:5;13403:31;:::i;:::-;13453:5;-1:-1:-1;13510:2:21;13495:18;;13482:32;13523:30;13482:32;13523:30;:::i;13590:477::-;13680:6;13688;13741:2;13729:9;13720:7;13716:23;13712:32;13709:52;;;13757:1;13754;13747:12;13709:52;13784:23;;-1:-1:-1;;;;;13819:30:21;;13816:50;;;13862:1;13859;13852:12;13816:50;13885:61;13938:7;13929:6;13918:9;13914:22;13885:61;:::i;:::-;13875:71;;;13996:2;13985:9;13981:18;13968:32;14009:28;14031:5;14009:28;:::i;14072:850::-;14170:6;14178;14186;14194;14202;14255:2;14243:9;14234:7;14230:23;14226:32;14223:52;;;14271:1;14268;14261:12;14223:52;14310:9;14297:23;14329:30;14353:5;14329:30;:::i;:::-;14378:5;-1:-1:-1;14434:2:21;14419:18;;14406:32;-1:-1:-1;;;;;14487:14:21;;;14484:34;;;14514:1;14511;14504:12;14484:34;14553:58;14603:7;14594:6;14583:9;14579:22;14553:58;:::i;:::-;14630:8;;-1:-1:-1;14527:84:21;-1:-1:-1;14718:2:21;14703:18;;14690:32;;-1:-1:-1;14734:16:21;;;14731:36;;;14763:1;14760;14753:12;14731:36;;14802:60;14854:7;14843:8;14832:9;14828:24;14802:60;:::i;:::-;14072:850;;;;-1:-1:-1;14072:850:21;;-1:-1:-1;14881:8:21;;14776:86;14072:850;-1:-1:-1;;;14072:850:21:o;14927:388::-;15004:6;15012;15065:2;15053:9;15044:7;15040:23;15036:32;15033:52;;;15081:1;15078;15071:12;15033:52;15104:23;;;-1:-1:-1;15178:2:21;15163:18;;15150:32;-1:-1:-1;;;;;15194:30:21;;15191:50;;;15237:1;15234;15227:12;15191:50;15260:49;15301:7;15292:6;15281:9;15277:22;15260:49;:::i;15740:750::-;15835:6;15843;15851;15859;15867;15920:3;15908:9;15899:7;15895:23;15891:33;15888:53;;;15937:1;15934;15927:12;15888:53;15976:9;15963:23;15995:30;16019:5;15995:30;:::i;:::-;16044:5;-1:-1:-1;16101:2:21;16086:18;;16073:32;16114;16073;16114;:::i;:::-;16165:7;-1:-1:-1;16219:2:21;16204:18;;16191:32;;-1:-1:-1;16274:2:21;16259:18;;16246:32;-1:-1:-1;;;;;16290:30:21;;16287:50;;;16333:1;16330;16323:12;16287:50;16372:58;16422:7;16413:6;16402:9;16398:22;16372:58;:::i;16495:461::-;16548:3;16586:5;16580:12;16613:6;16608:3;16601:19;16639:4;16668:2;16663:3;16659:12;16652:19;;16705:2;16698:5;16694:14;16726:1;16736:195;16750:6;16747:1;16744:13;16736:195;;;16815:13;;-1:-1:-1;;;;;16811:39:21;16799:52;;16871:12;;;;16906:15;;;;16847:1;16765:9;16736:195;;;-1:-1:-1;16947:3:21;;16495:461;-1:-1:-1;;;;;16495:461:21:o;16961:435::-;17014:3;17052:5;17046:12;17079:6;17074:3;17067:19;17105:4;17134:2;17129:3;17125:12;17118:19;;17171:2;17164:5;17160:14;17192:1;17202:169;17216:6;17213:1;17210:13;17202:169;;;17277:13;;17265:26;;17311:12;;;;17346:15;;;;17238:1;17231:9;17202:169;;17401:465;17658:2;17647:9;17640:21;17621:4;17684:56;17736:2;17725:9;17721:18;17713:6;17684:56;:::i;:::-;17788:9;17780:6;17776:22;17771:2;17760:9;17756:18;17749:50;17816:44;17853:6;17845;17816:44;:::i;17871:452::-;17946:6;17954;17962;18015:2;18003:9;17994:7;17990:23;17986:32;17983:52;;;18031:1;18028;18021:12;17983:52;18070:9;18057:23;18089:30;18113:5;18089:30;:::i;:::-;18138:5;-1:-1:-1;18195:2:21;18180:18;;18167:32;18208;18167;18208;:::i;:::-;17871:452;;18259:7;;-1:-1:-1;;;18313:2:21;18298:18;;;;18285:32;;17871:452::o;18328:594::-;18412:6;18420;18428;18436;18489:3;18477:9;18468:7;18464:23;18460:33;18457:53;;;18506:1;18503;18496:12;18457:53;18545:9;18532:23;18564:30;18588:5;18564:30;:::i;:::-;18613:5;-1:-1:-1;18670:2:21;18655:18;;18642:32;18683;18642;18683;:::i;:::-;18734:7;-1:-1:-1;18793:2:21;18778:18;;18765:32;18806:33;18765:32;18806:33;:::i;:::-;18328:594;;;;-1:-1:-1;18858:7:21;;18912:2;18897:18;18884:32;;-1:-1:-1;;18328:594:21:o;18927:707::-;19297:1;19293;19288:3;19284:11;19280:19;19272:6;19268:32;19257:9;19250:51;19337:6;19332:2;19321:9;19317:18;19310:34;19380:3;19375:2;19364:9;19360:18;19353:31;19231:4;19407:57;19459:3;19448:9;19444:19;19436:6;19407:57;:::i;:::-;19512:9;19504:6;19500:22;19495:2;19484:9;19480:18;19473:50;19540:44;19577:6;19569;19540:44;:::i;:::-;19532:52;;;19621:6;19615:3;19604:9;19600:19;19593:35;18927:707;;;;;;;;:::o;19998:380::-;20077:1;20073:12;;;;20120;;;20141:61;;20195:4;20187:6;20183:17;20173:27;;20141:61;20248:2;20240:6;20237:14;20217:18;20214:38;20211:161;;20294:10;20289:3;20285:20;20282:1;20275:31;20329:4;20326:1;20319:15;20357:4;20354:1;20347:15;20211:161;;19998:380;;;:::o;20383:271::-;20566:6;20558;20553:3;20540:33;20522:3;20592:16;;20617:13;;;20592:16;20383:271;-1:-1:-1;20383:271:21:o;21066:426::-;21147:5;21195:4;21183:9;21178:3;21174:19;21170:30;21167:50;;;21213:1;21210;21203:12;21167:50;21246:2;21240:9;21288:4;21276:17;;-1:-1:-1;;;;;21308:34:21;;21344:22;;;21305:62;21302:88;;;21370:18;;:::i;:::-;21406:2;21399:22;21469:16;;21454:32;;-1:-1:-1;21439:6:21;21066:426;-1:-1:-1;21066:426:21:o;21497:177::-;21576:13;;-1:-1:-1;;;;;21618:31:21;;21608:42;;21598:70;;21664:1;21661;21654:12;21679:169;21757:13;;21810:12;21799:24;;21789:35;;21779:63;;21838:1;21835;21828:12;21853:138;21932:13;;21954:31;21932:13;21954:31;:::i;21996:160::-;22073:13;;22126:4;22115:16;;22105:27;;22095:55;;22146:1;22143;22136:12;22161:1337;22259:6;22312:3;22300:9;22291:7;22287:23;22283:33;22280:53;;;22329:1;22326;22319:12;22280:53;22355:22;;:::i;:::-;22400:72;22464:7;22453:9;22400:72;:::i;:::-;22393:5;22386:87;22505:49;22550:2;22539:9;22535:18;22505:49;:::i;:::-;22500:2;22493:5;22489:14;22482:73;22587:49;22632:2;22621:9;22617:18;22587:49;:::i;:::-;22582:2;22575:5;22571:14;22564:73;22669:49;22714:2;22703:9;22699:18;22669:49;:::i;:::-;22664:2;22657:5;22653:14;22646:73;22752:50;22797:3;22786:9;22782:19;22752:50;:::i;:::-;22746:3;22739:5;22735:15;22728:75;22836:50;22881:3;22870:9;22866:19;22836:50;:::i;:::-;22830:3;22823:5;22819:15;22812:75;22920:49;22964:3;22953:9;22949:19;22920:49;:::i;:::-;22914:3;22907:5;22903:15;22896:74;23003:50;23048:3;23037:9;23033:19;23003:50;:::i;:::-;22997:3;22990:5;22986:15;22979:75;23073:3;23108:49;23153:2;23142:9;23138:18;23108:49;:::i;:::-;23092:14;;;23085:73;23177:3;23212:49;23242:18;;;23212:49;:::i;:::-;23196:14;;;23189:73;23281:3;23316:49;23346:18;;;23316:49;:::i;:::-;23300:14;;;23293:73;23385:3;23420:47;23448:18;;;23420:47;:::i;:::-;23404:14;;;23397:71;23408:5;22161:1337;-1:-1:-1;;;22161:1337:21:o;23503:266::-;23591:6;23586:3;23579:19;23643:6;23636:5;23629:4;23624:3;23620:14;23607:43;-1:-1:-1;23695:1:21;23670:16;;;23688:4;23666:27;;;23659:38;;;;23751:2;23730:15;;;-1:-1:-1;;23726:29:21;23717:39;;;23713:50;;23503:266::o;23774:326::-;23969:6;23961;23957:19;23946:9;23939:38;24013:2;24008;23997:9;23993:18;23986:30;23920:4;24033:61;24090:2;24079:9;24075:18;24067:6;24059;24033:61;:::i;24105:132::-;24181:13;;24203:28;24181:13;24203:28;:::i;24242:245::-;24309:6;24362:2;24350:9;24341:7;24337:23;24333:32;24330:52;;;24378:1;24375;24368:12;24330:52;24410:9;24404:16;24429:28;24451:5;24429:28;:::i;24492:330::-;24694:2;24676:21;;;24733:1;24713:18;;;24706:29;-1:-1:-1;;;24766:2:21;24751:18;;24744:37;24813:2;24798:18;;24492:330::o;24827:344::-;25029:2;25011:21;;;25068:2;25048:18;;;25041:30;-1:-1:-1;;;25102:2:21;25087:18;;25080:50;25162:2;25147:18;;24827:344::o;25176:127::-;25237:10;25232:3;25228:20;25225:1;25218:31;25268:4;25265:1;25258:15;25292:4;25289:1;25282:15;25308:128;25375:9;;;25396:11;;;25393:37;;;25410:18;;:::i;25441:274::-;-1:-1:-1;;;;;25633:32:21;;;;25615:51;;25697:2;25682:18;;25675:34;25603:2;25588:18;;25441:274::o;25720:375::-;-1:-1:-1;;;;;25978:15:21;;;25960:34;;26030:15;;;;26025:2;26010:18;;26003:43;26077:2;26062:18;;26055:34;;;;25910:2;25895:18;;25720:375::o;26443:127::-;26504:10;26499:3;26495:20;26492:1;26485:31;26535:4;26532:1;26525:15;26559:4;26556:1;26549:15;26575:344;26777:2;26759:21;;;26816:2;26796:18;;;26789:30;-1:-1:-1;;;26850:2:21;26835:18;;26828:50;26910:2;26895:18;;26575:344::o;27268:135::-;27307:3;27328:17;;;27325:43;;27348:18;;:::i;:::-;-1:-1:-1;27395:1:21;27384:13;;27268:135::o;27408:562::-;27693:2;27682:9;27675:21;27656:4;27719:56;27771:2;27760:9;27756:18;27748:6;27719:56;:::i;:::-;27823:9;27815:6;27811:22;27806:2;27795:9;27791:18;27784:50;27851:44;27888:6;27880;27851:44;:::i;:::-;27843:52;;;27960:1;27956;27951:3;27947:11;27943:19;27935:6;27931:32;27926:2;27915:9;27911:18;27904:60;27408:562;;;;;;:::o;27975:184::-;28045:6;28098:2;28086:9;28077:7;28073:23;28069:32;28066:52;;;28114:1;28111;28104:12;28066:52;-1:-1:-1;28137:16:21;;27975:184;-1:-1:-1;27975:184:21:o;28164:206::-;28233:6;28286:2;28274:9;28265:7;28261:23;28257:32;28254:52;;;28302:1;28299;28292:12;28254:52;28325:39;28354:9;28325:39;:::i;29121:304::-;-1:-1:-1;;;;;29351:15:21;;;29333:34;;29403:15;;29398:2;29383:18;;29376:43;29283:2;29268:18;;29121:304::o;29430:340::-;29632:2;29614:21;;;29671:2;29651:18;;;29644:30;-1:-1:-1;;;29705:2:21;29690:18;;29683:46;29761:2;29746:18;;29430:340::o;29775:350::-;29977:2;29959:21;;;30016:2;29996:18;;;29989:30;-1:-1:-1;;;30050:2:21;30035:18;;30028:56;30116:2;30101:18;;29775:350::o;30130:125::-;30195:9;;;30216:10;;;30213:36;;;30229:18;;:::i;30260:768::-;-1:-1:-1;;;;;30611:15:21;;;30593:34;;30663:15;;30658:2;30643:18;;30636:43;30710:2;30695:18;;30688:34;;;30765:14;;30758:22;30753:2;30738:18;;30731:50;30542:3;30527:19;;30811:1;30800:13;;30790:144;;30856:10;30851:3;30847:20;30844:1;30837:31;30891:4;30888:1;30881:15;30919:4;30916:1;30909:15;30790:144;30965:3;30950:19;;30943:35;;;;31009:3;30994:19;30987:35;30260:768;;-1:-1:-1;;;;30260:768:21:o;31033:375::-;-1:-1:-1;;;;;31291:15:21;;;31273:34;;31338:2;31323:18;;31316:34;;;;31386:15;;;31381:2;31366:18;;31359:43;31223:2;31208:18;;31033:375::o;31413:249::-;31482:6;31535:2;31523:9;31514:7;31510:23;31506:32;31503:52;;;31551:1;31548;31541:12;31503:52;31583:9;31577:16;31602:30;31626:5;31602:30;:::i;31667:471::-;31857:4;31886:6;31931:2;31923:6;31919:15;31908:9;31901:34;31983:2;31975:6;31971:15;31966:2;31955:9;31951:18;31944:43;;32023:6;32018:2;32007:9;32003:18;31996:34;32066:3;32061:2;32050:9;32046:18;32039:31;32087:45;32127:3;32116:9;32112:19;32104:6;32087:45;:::i;:::-;32079:53;31667:471;-1:-1:-1;;;;;;31667:471:21:o;33722:1351::-;34000:6;33992;33988:19;33977:9;33970:38;33951:4;34027:2;34094:1;34090;34085:3;34081:11;34077:19;34069:6;34065:32;34060:2;34049:9;34045:18;34038:60;34134:3;34129:2;34118:9;34114:18;34107:31;34161:45;34201:3;34190:9;34186:19;34178:6;34161:45;:::i;:::-;34256:6;34249:14;34242:22;34237:2;34226:9;34222:18;34215:50;34314:9;34306:6;34302:22;34296:3;34285:9;34281:19;34274:51;34345:1;34378:6;34372:13;34408:36;34434:9;34408:36;:::i;:::-;34453:22;;;34494:1;34511:18;;;34538:152;;;;34704:1;34699:348;;;;34504:543;;34538:152;-1:-1:-1;;34583:24:21;;34566:15;;;34559:49;34658:14;;34651:22;34648:1;34644:30;34632:43;;34628:52;;;-1:-1:-1;34538:152:21;;34699:348;34730:6;34727:1;34720:17;34778:2;34775:1;34765:16;34803:1;34817:177;34831:6;34828:1;34825:13;34817:177;;;34921:14;;34900;;;34896:23;;34889:47;34964:16;;;;34846:10;;34817:177;;;35018:14;;35014:23;;;-1:-1:-1;;34504:543:21;-1:-1:-1;35064:3:21;;33722:1351;-1:-1:-1;;;;;;;;;;;;33722:1351:21:o;35078:245::-;35157:6;35165;35218:2;35206:9;35197:7;35193:23;35189:32;35186:52;;;35234:1;35231;35224:12;35186:52;-1:-1:-1;;35257:16:21;;35313:2;35298:18;;;35292:25;35257:16;;35292:25;;-1:-1:-1;35078:245:21:o;36016:544::-;36117:2;36112:3;36109:11;36106:448;;;36153:1;36178:5;36174:2;36167:17;36223:4;36219:2;36209:19;36293:2;36281:10;36277:19;36274:1;36270:27;36264:4;36260:38;36329:4;36317:10;36314:20;36311:47;;;-1:-1:-1;36352:4:21;36311:47;36407:2;36402:3;36398:12;36395:1;36391:20;36385:4;36381:31;36371:41;;36462:82;36480:2;36473:5;36470:13;36462:82;;;36525:17;;;36506:1;36495:13;36462:82;;36565:166;-1:-1:-1;;36693:1:21;36689:11;;;36685:24;36681:29;36671:40;36717:1;36713:11;;;;36668:57;;36565:166::o;36736:1348::-;36854:10;;-1:-1:-1;;;;;36876:30:21;;36873:56;;;36909:18;;:::i;:::-;36938:96;37027:6;36987:38;37019:4;37013:11;36987:38;:::i;:::-;36981:4;36938:96;:::i;:::-;37089:4;;37153:2;37142:14;;37170:1;37165:662;;;;37871:1;37888:6;37885:89;;;-1:-1:-1;37940:19:21;;;37934:26;37885:89;38000:67;38060:6;38053:5;38000:67;:::i;:::-;37994:4;37987:81;;37135:943;;37165:662;33669:1;33662:14;;;33706:4;33693:18;;-1:-1:-1;;37201:20:21;;;37318:236;37332:7;37329:1;37326:14;37318:236;;;37421:19;;;37415:26;37400:42;;37513:27;;;;37481:1;37469:14;;;;37348:19;;37318:236;;;37322:3;37582:6;37573:7;37570:19;37567:201;;;37643:19;;;37637:26;-1:-1:-1;;37726:1:21;37722:14;;;37738:3;37718:24;37714:37;37710:42;37695:58;37680:74;;37567:201;-1:-1:-1;;;;;37814:1:21;37798:14;;;37794:22;37781:36;;-1:-1:-1;36736:1348:21:o;38857:352::-;39068:6;39060;39055:3;39042:33;39163:2;39134:15;;;;-1:-1:-1;;;;;;39130:45:21;39094:16;;39119:57;;;39200:2;39192:11;;38857:352;-1:-1:-1;38857:352:21:o;39214:513::-;39465:6;39457;39453:19;39442:9;39435:38;39509:2;39504;39493:9;39489:18;39482:30;39416:4;39535:61;39592:2;39581:9;39577:18;39569:6;39561;39535:61;:::i;:::-;39644:9;39636:6;39632:22;39627:2;39616:9;39612:18;39605:50;39672:49;39714:6;39706;39698;39672:49;:::i;:::-;39664:57;39214:513;-1:-1:-1;;;;;;;;39214:513:21:o;40521:498::-;40721:4;40750:6;40795:2;40787:6;40783:15;40772:9;40765:34;40847:2;40839:6;40835:15;40830:2;40819:9;40815:18;40808:43;;40887:6;40882:2;40871:9;40867:18;40860:34;40930:3;40925:2;40914:9;40910:18;40903:31;40951:62;41008:3;40997:9;40993:19;40985:6;40977;40951:62;:::i;:::-;40943:70;40521:498;-1:-1:-1;;;;;;;40521:498:21:o;41830:493::-;42079:6;42071;42067:19;42056:9;42049:38;42123:3;42118:2;42107:9;42103:18;42096:31;42030:4;42144:62;42201:3;42190:9;42186:19;42178:6;42170;42144:62;:::i;:::-;-1:-1:-1;;;;;42242:31:21;;;;42262:2;42222:18;;42215:59;-1:-1:-1;42305:2:21;42290:18;42283:34;42136:70;41830:493;-1:-1:-1;;;41830:493:21:o;43041:464::-;43286:6;43319:15;;;43301:34;;43371:15;;;;43366:2;43351:18;;43344:43;-1:-1:-1;;;;;43423:32:21;43418:2;43403:18;;43396:60;43487:2;43472:18;;43465:34;;;;43263:3;43248:19;;43041:464::o;43510:441::-;43563:5;43616:3;43609:4;43601:6;43597:17;43593:27;43583:55;;43634:1;43631;43624:12;43583:55;43663:6;43657:13;43694:48;43710:31;43738:2;43710:31;:::i;43694:48::-;43767:2;43758:7;43751:19;43813:3;43806:4;43801:2;43793:6;43789:15;43785:26;43782:35;43779:55;;;43830:1;43827;43820:12;43779:55;43843:77;43917:2;43910:4;43901:7;43897:18;43890:4;43882:6;43878:17;43843:77;:::i;43956:335::-;44035:6;44088:2;44076:9;44067:7;44063:23;44059:32;44056:52;;;44104:1;44101;44094:12;44056:52;44131:16;;-1:-1:-1;;;;;44159:30:21;;44156:50;;;44202:1;44199;44192:12;44156:50;44225:60;44277:7;44268:6;44257:9;44253:22;44225:60;:::i;44296:1202::-;-1:-1:-1;;;;;44410:27:21;;44407:53;;;44440:18;;:::i;:::-;44469:93;44558:3;44518:38;44550:4;44544:11;44518:38;:::i;:::-;44512:4;44469:93;:::i;:::-;44588:1;44613:2;44608:3;44605:11;44630:1;44625:615;;;;45284:1;45301:3;45298:93;;;-1:-1:-1;45357:19:21;;;45344:33;45298:93;45417:64;45477:3;45470:5;45417:64;:::i;:::-;45411:4;45404:78;;44598:894;;44625:615;33669:1;33662:14;;;33706:4;33693:18;;-1:-1:-1;;44661:17:21;;;44761:9;44783:229;44797:7;44794:1;44791:14;44783:229;;;44886:19;;;44873:33;44858:49;;44993:4;44978:20;;;;44946:1;44934:14;;;;44813:12;44783:229;;;44787:3;45040;45031:7;45028:16;45025:159;;;45164:1;45160:6;45154:3;45148;45145:1;45141:11;45137:21;45133:34;45129:39;45116:9;45111:3;45107:19;45094:33;45090:79;45082:6;45075:95;45025:159;;;45227:1;45221:3;45218:1;45214:11;45210:19;45204:4;45197:33;44598:894;;44296:1202;;;:::o;46310:555::-;46567:6;46559;46555:19;46544:9;46537:38;46611:3;46606:2;46595:9;46591:18;46584:31;46518:4;46638:45;46678:3;46667:9;46663:19;46655:6;46638:45;:::i;:::-;-1:-1:-1;;;;;46719:31:21;;46739:2;46699:18;;46692:59;46787:22;;;46782:2;46767:18;;46760:50;46827:32;46791:6;46844;46827:32;:::i;47703:734::-;47768:5;47821:3;47814:4;47806:6;47802:17;47798:27;47788:55;;47839:1;47836;47829:12;47788:55;47868:6;47862:13;47894:4;47918:60;47934:43;47974:2;47934:43;:::i;47918:60::-;48012:15;;;48098:1;48094:10;;;;48082:23;;48078:32;;;48043:12;;;;48122:15;;;48119:35;;;48150:1;48147;48140:12;48119:35;48186:2;48178:6;48174:15;48198:210;48214:6;48209:3;48206:15;48198:210;;;48287:3;48281:10;48304:31;48329:5;48304:31;:::i;:::-;48348:18;;48386:12;;;;48231;;48198:210;;48442:659;48507:5;48560:3;48553:4;48545:6;48541:17;48537:27;48527:55;;48578:1;48575;48568:12;48527:55;48607:6;48601:13;48633:4;48657:60;48673:43;48713:2;48673:43;:::i;48657:60::-;48751:15;;;48837:1;48833:10;;;;48821:23;;48817:32;;;48782:12;;;;48861:15;;;48858:35;;;48889:1;48886;48879:12;48858:35;48925:2;48917:6;48913:15;48937:135;48953:6;48948:3;48945:15;48937:135;;;49019:10;;49007:23;;49050:12;;;;48970;;48937:135;;49106:1904;49283:6;49291;49299;49307;49315;49368:3;49356:9;49347:7;49343:23;49339:33;49336:53;;;49385:1;49382;49375:12;49336:53;49412:16;;-1:-1:-1;;;;;49477:14:21;;;49474:34;;;49504:1;49501;49494:12;49474:34;49527:22;;;;49583:6;49565:16;;;49561:29;49558:49;;;49603:1;49600;49593:12;49558:49;49629:22;;:::i;:::-;49674:33;49704:2;49674:33;:::i;:::-;49667:5;49660:48;49754:2;49750;49746:11;49740:18;49735:2;49728:5;49724:14;49717:42;49798:2;49794;49790:11;49784:18;49827:2;49817:8;49814:16;49811:36;;;49843:1;49840;49833:12;49811:36;49879:67;49938:7;49927:8;49923:2;49919:17;49879:67;:::i;:::-;49874:2;49867:5;49863:14;49856:91;;49986:2;49982;49978:11;49972:18;50015:2;50005:8;50002:16;49999:36;;;50031:1;50028;50021:12;49999:36;50067:67;50126:7;50115:8;50111:2;50107:17;50067:67;:::i;:::-;50062:2;50055:5;50051:14;50044:91;;50182:3;50178:2;50174:12;50168:19;50162:3;50155:5;50151:15;50144:44;50221:41;50257:3;50253:2;50249:12;50221:41;:::i;:::-;50215:3;50208:5;50204:15;50197:66;50310:3;50306:2;50302:12;50296:19;50290:3;50283:5;50279:15;50272:44;50355:3;50351:2;50347:12;50341:19;50385:2;50375:8;50372:16;50369:36;;;50401:1;50398;50391:12;50369:36;50438:55;50485:7;50474:8;50470:2;50466:17;50438:55;:::i;:::-;50432:3;50421:15;;50414:80;-1:-1:-1;50558:2:21;50543:18;;50537:25;50425:5;;-1:-1:-1;50537:25:21;-1:-1:-1;50581:46:21;50623:2;50608:18;;50581:46;:::i;:::-;50571:56;;50673:2;50662:9;50658:18;50652:25;50636:41;;50702:2;50692:8;50689:16;50686:36;;;50718:1;50715;50708:12;50686:36;50741:74;50807:7;50796:8;50785:9;50781:24;50741:74;:::i;:::-;50731:84;;50861:3;50850:9;50846:19;50840:26;50824:42;;50891:2;50881:8;50878:16;50875:36;;;50907:1;50904;50897:12;50875:36;;50930:74;50996:7;50985:8;50974:9;50970:24;50930:74;:::i;:::-;50920:84;;;49106:1904;;;;;;;;:::o;51015:569::-;51233:13;;51176:3;;51207;;51286:4;51313:15;;;51176:3;51356:201;51370:6;51367:1;51364:13;51356:201;;;51437:13;;-1:-1:-1;;;;;51433:39:21;51419:54;;51495:14;;;;51532:15;;;;51469:1;51385:9;51356:201;;;-1:-1:-1;51573:5:21;;51015:569;-1:-1:-1;;;;;;51015:569:21:o;51589:543::-;51807:13;;51750:3;;51781;;51860:4;51887:15;;;51750:3;51930:175;51944:6;51941:1;51938:13;51930:175;;;52007:13;;51993:28;;52043:14;;;;52080:15;;;;51966:1;51959:9;51930:175;;52137:845;52483:2;52454:15;;;-1:-1:-1;;;;;;52450:45:21;52438:58;;52521:2;52512:12;;52505:28;;;52556:13;;-1:-1:-1;;52578:75:21;52556:13;52641:2;52632:12;;52625:4;52613:17;;52578:75;:::i;:::-;52713:13;;52672:16;;;;52735:76;52713:13;52797:2;52789:11;;52782:4;52770:17;;52735:76;:::i;:::-;52871:2;52830:17;;52863:11;;;52856:27;;;;-1:-1:-1;;52938:3:21;52916:16;-1:-1:-1;;;;;;52912:36:21;52907:2;52899:11;;52892:57;52973:2;52965:11;;52137:845;-1:-1:-1;;;;52137:845:21:o;53683:642::-;-1:-1:-1;;;;;53992:32:21;;53974:51;;54061:3;54056:2;54041:18;;54034:31;;;-1:-1:-1;;54088:57:21;;54125:19;;54117:6;54088:57;:::i;:::-;54193:9;54185:6;54181:22;54176:2;54165:9;54161:18;54154:50;54221:44;54258:6;54250;54221:44;:::i;:::-;54213:52;;;54313:4;54305:6;54301:17;54296:2;54285:9;54281:18;54274:45;53683:642;;;;;;;:::o;55379:287::-;55508:3;55546:6;55540:13;55562:66;55621:6;55616:3;55609:4;55601:6;55597:17;55562:66;:::i;:::-;55644:16;;;;;55379:287;-1:-1:-1;;55379:287:21:o;55671:716::-;55974:6;55966;55962:19;55951:9;55944:38;56018:3;56013:2;56002:9;55998:18;55991:31;55925:4;56045:45;56085:3;56074:9;56070:19;56062:6;56045:45;:::i;:::-;-1:-1:-1;;;;;56126:31:21;;56146:2;56106:18;;56099:59;56194:22;;;56189:2;56174:18;;56167:50;56240:32;56198:6;56257;56240:32;:::i;:::-;56226:46;;56321:9;56313:6;56309:22;56303:3;56292:9;56288:19;56281:51;56349:32;56374:6;56366;56349:32;:::i;56809:837::-;57158:6;57150;57146:19;57135:9;57128:38;57202:3;57197:2;57186:9;57182:18;57175:31;57109:4;57229:45;57269:3;57258:9;57254:19;57246:6;57229:45;:::i;:::-;57322:9;57314:6;57310:22;57305:2;57294:9;57290:18;57283:50;57356:32;57381:6;57373;57356:32;:::i;:::-;-1:-1:-1;;;;;57462:15:21;;;57457:2;57442:18;;57435:43;57515:15;;57509:3;57494:19;;57487:44;57568:22;;;57415:3;57547:19;;57540:51;57342:46;-1:-1:-1;57608:32:21;57342:46;57625:6;57608:32;:::i;:::-;57600:40;56809:837;-1:-1:-1;;;;;;;;;56809:837:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"4722200","executionCost":"infinite","totalCost":"infinite"},"external":{"DEFAULT_ADMIN_ROLE()":"1097","FEE_ROLE()":"infinite","NODE_ROLE()":"infinite","OWENER_ROLE()":"393","_roles(bytes32)":"2266","aave()":"1831","acceptOwnership()":"infinite","accounts(address)":"5985","adapterParams()":"infinite","deCoinList(address)":"1467","deposit(address,uint256)":"infinite","depositETH(uint256)":"infinite","dstChainId()":"1321","estimateFee(address)":"infinite","failedMessages(uint16,bytes,uint64)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getATokenWithToken(address)":"infinite","getAllFee()":"infinite","getBalance(address)":"infinite","getBalanceFromAAVE(address,address)":"infinite","getConfig(uint16,uint16,address,uint256)":"infinite","getInterest(address)":"1957","getNativeFee(address)":"1259","getOracle(uint16)":"infinite","getSize(address)":"infinite","getTotalValue(address)":"infinite","getTrustedRemoteAddress(uint16)":"infinite","getUserReserveData(address,address)":"infinite","hasRole(bytes32,address)":"2200","hasStoredPayload(uint16,bytes)":"infinite","hashMessage(bytes32)":"1506","interest()":"2216","interestAmount(address)":"2379","isOpen()":"1384","isSupDe(address)":"2699","isTrueForCoin(address)":"1643","isTrustedRemote(uint16,bytes)":"infinite","lzEndpoint()":"infinite","lzReceive(uint16,bytes,uint64,bytes)":"infinite","minDstGasLookup(uint16,uint16)":"infinite","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"infinite","owner()":"1884","pendingOwner()":"2368","precrime()":"1919","renounceOwnership()":"infinite","retryMessage(uint16,bytes,uint64,bytes)":"infinite","retryPayload(uint16,bytes,bytes)":"infinite","setAdapterParams(uint16,uint256)":"infinite","setConfig(uint16,uint16,uint256,bytes)":"infinite","setDeCoinList(address[],bool)":"infinite","setIsOpen(bool)":"22120","setMinDstGas(uint16,uint16,uint256)":"infinite","setOracle(uint16,address)":"infinite","setPrecrime(address)":"24278","setReceiveVersion(uint16)":"infinite","setSendVersion(uint16)":"infinite","setSupDe(address,bool)":"infinite","setTrustedRemote(uint16,bytes)":"infinite","setTrustedRemoteAddress(uint16,bytes)":"infinite","setWhilLlist(address,uint256)":"infinite","totalFee(address)":"1917","transferOwnership(address)":"infinite","trustedRemoteLookup(uint16)":"infinite","usdt()":"1347","verifyEcrecover(bytes32,bytes)":"infinite","whlieList(address)":"2303","withdraw(uint256[],address[])":"infinite","withdrawFee(address,uint256)":"infinite","withdrawInterest(uint256,address)":"infinite"},"internal":{"_depositToAAVE(address,uint256)":"infinite","_grantRole(bytes32,address)":"22016","_nonblockingLzReceive(uint16,bytes memory,uint64,bytes memory)":"infinite","_sentToL1(uint16,bytes memory,uint256)":"infinite","_setupRole(bytes32,address)":"22050","_withdrawFromAAVE(address,uint256,address)":"infinite","isCoinList(address)":"63522","recover(bytes memory)":"infinite"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","FEE_ROLE()":"2a0276f8","NODE_ROLE()":"fb895733","OWENER_ROLE()":"19fc2e61","_roles(bytes32)":"bd99d7e1","aave()":"819faf7b","acceptOwnership()":"79ba5097","accounts(address)":"5e5c06e2","adapterParams()":"083118d5","deCoinList(address)":"29e26b10","deposit(address,uint256)":"47e7ef24","depositETH(uint256)":"5358fbda","dstChainId()":"30c593f7","estimateFee(address)":"57463d35","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getATokenWithToken(address)":"021b9359","getAllFee()":"d667a5da","getBalance(address)":"f8b2cb4f","getBalanceFromAAVE(address,address)":"806b834d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInterest(address)":"7aaa3470","getNativeFee(address)":"0707a0f0","getOracle(uint16)":"e2f28824","getSize(address)":"504f1671","getTotalValue(address)":"68637549","getTrustedRemoteAddress(uint16)":"9f38369a","getUserReserveData(address,address)":"28dd2d01","hasRole(bytes32,address)":"91d14854","hasStoredPayload(uint16,bytes)":"0eaf6ea6","hashMessage(bytes32)":"b3cb890f","interest()":"c392f766","interestAmount(address)":"c779c1c3","isOpen()":"47535d7b","isSupDe(address)":"ff464d3f","isTrueForCoin(address)":"4893c26a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","pendingOwner()":"e30c3978","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","retryPayload(uint16,bytes,bytes)":"aaff5f16","setAdapterParams(uint16,uint256)":"6d1daa28","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setDeCoinList(address[],bool)":"a4ca74db","setIsOpen(bool)":"085a10cf","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setOracle(uint16,address)":"492e527e","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setSupDe(address,bool)":"a304dcf4","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","setWhilLlist(address,uint256)":"e52249e3","totalFee(address)":"7a4fda3d","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788","usdt()":"2f48ab7d","verifyEcrecover(bytes32,bytes)":"b273f207","whlieList(address)":"b7a745c6","withdraw(uint256[],address[])":"16e57652","withdrawFee(address,uint256)":"fd9be522","withdrawInterest(uint256,address)":"1210aac2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lendingPool_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lzEndpoint_\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"dstChainId_\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"usdt_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"coin_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interest_\",\"type\":\"uint256\"}],\"name\":\"eventCheckOutInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"type_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"eventDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"eventDepositETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"coinAdd_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"capitalValues_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"checkOutType\",\"type\":\"uint8\"}],\"name\":\"eventReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"re_\",\"type\":\"bool\"}],\"name\":\"eventSetWhilLlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"type_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"eventWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"coinType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestBalance\",\"type\":\"uint256\"}],\"name\":\"eventWithdrawInterest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NODE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWENER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aave\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"capitalMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"capitalNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tradingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tradingNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adapterParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deCoinList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"type_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dstChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"estimateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add_\",\"type\":\"address\"}],\"name\":\"getATokenWithToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFee\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"coin\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"type_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromAdd_\",\"type\":\"address\"}],\"name\":\"getBalanceFromAAVE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getNativeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getSize\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentATokenBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserReserveData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalStableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scaledVariableDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"stableRateLastUpdated\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"hashMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"interestAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSupDe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrueForCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"gasForDestinationLzReceive\",\"type\":\"uint256\"}],\"name\":\"setAdapterParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"coin_\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"re_\",\"type\":\"bool\"}],\"name\":\"setDeCoinList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"re_\",\"type\":\"bool\"}],\"name\":\"setIsOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"re\",\"type\":\"bool\"}],\"name\":\"setSupDe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"type_\",\"type\":\"uint256\"}],\"name\":\"setWhilLlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifyEcrecover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recoveredAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whlieList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amount_\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"coinType_\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"withdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"coinType_\",\"type\":\"address\"}],\"name\":\"withdrawInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() external {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Aave/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nlibrary DataTypes {\\n  // refer to the whitepaper, section 1.1 basic concepts for a formal description of these properties.\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    //tokens addresses\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint8 id;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: Reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60-63: reserved\\n    //bit 64-79: reserve factor\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    uint256 data;\\n  }\\n\\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\\n}\",\"keccak256\":\"0xabc65802c6291d7277431d8702d8745cdc822ba74927496e6dfac9dc217fe1da\",\"license\":\"agpl-3.0\"},\"contracts/Aave/ILendingPool.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\nimport {ILendingPoolAddressesProvider} from './ILendingPoolAddressesProvider.sol';\\nimport {DataTypes} from './DataTypes.sol';\\n\\ninterface ILendingPool {\\n  /**\\n   * @dev Emitted on deposit()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address initiating the deposit\\n   * @param onBehalfOf The beneficiary of the deposit, receiving the aTokens\\n   * @param amount The amount deposited\\n   * @param referral The referral code used\\n   **/\\n  event Deposit(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint16 indexed referral\\n  );\\n\\n  /**\\n   * @dev Emitted on withdraw()\\n   * @param reserve The address of the underlyng asset being withdrawn\\n   * @param user The address initiating the withdrawal, owner of aTokens\\n   * @param to Address that will receive the underlying\\n   * @param amount The amount to be withdrawn\\n   **/\\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\\n\\n  /**\\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\\n   * @param reserve The address of the underlying asset being borrowed\\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\\n   * initiator of the transaction on flashLoan()\\n   * @param onBehalfOf The address that will be getting the debt\\n   * @param amount The amount borrowed out\\n   * @param borrowRateMode The rate mode: 1 for Stable, 2 for Variable\\n   * @param borrowRate The numeric rate at which the user has borrowed\\n   * @param referral The referral code used\\n   **/\\n  event Borrow(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint256 borrowRateMode,\\n    uint256 borrowRate,\\n    uint16 indexed referral\\n  );\\n\\n  /**\\n   * @dev Emitted on repay()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The beneficiary of the repayment, getting his debt reduced\\n   * @param repayer The address of the user initiating the repay(), providing the funds\\n   * @param amount The amount repaid\\n   **/\\n  event Repay(\\n    address indexed reserve,\\n    address indexed user,\\n    address indexed repayer,\\n    uint256 amount\\n  );\\n\\n  /**\\n   * @dev Emitted on swapBorrowRateMode()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user swapping his rate mode\\n   * @param rateMode The rate mode that the user wants to swap to\\n   **/\\n  event Swap(address indexed reserve, address indexed user, uint256 rateMode);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on rebalanceStableBorrowRate()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user for which the rebalance has been executed\\n   **/\\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on flashLoan()\\n   * @param target The address of the flash loan receiver contract\\n   * @param initiator The address initiating the flash loan\\n   * @param asset The address of the asset being flash borrowed\\n   * @param amount The amount flash borrowed\\n   * @param premium The fee flash borrowed\\n   * @param referralCode The referral code used\\n   **/\\n  event FlashLoan(\\n    address indexed target,\\n    address indexed initiator,\\n    address indexed asset,\\n    uint256 amount,\\n    uint256 premium,\\n    uint16 referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted when the pause is triggered.\\n   */\\n  event Paused();\\n\\n  /**\\n   * @dev Emitted when the pause is lifted.\\n   */\\n  event Unpaused();\\n\\n  /**\\n   * @dev Emitted when a borrower is liquidated. This event is emitted by the LendingPool via\\n   * LendingPoolCollateral manager using a DELEGATECALL\\n   * This allows to have the events in the generated ABI for LendingPool.\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param liquidatedCollateralAmount The amount of collateral received by the liiquidator\\n   * @param liquidator The address of the liquidator\\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  event LiquidationCall(\\n    address indexed collateralAsset,\\n    address indexed debtAsset,\\n    address indexed user,\\n    uint256 debtToCover,\\n    uint256 liquidatedCollateralAmount,\\n    address liquidator,\\n    bool receiveAToken\\n  );\\n\\n  /**\\n   * @dev Emitted when the state of a reserve is updated. NOTE: This event is actually declared\\n   * in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal,\\n   * the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it\\n   * gets added to the LendingPool ABI\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param liquidityRate The new liquidity rate\\n   * @param stableBorrowRate The new stable borrow rate\\n   * @param variableBorrowRate The new variable borrow rate\\n   * @param liquidityIndex The new liquidity index\\n   * @param variableBorrowIndex The new variable borrow index\\n   **/\\n  event ReserveDataUpdated(\\n    address indexed reserve,\\n    uint256 liquidityRate,\\n    uint256 stableBorrowRate,\\n    uint256 variableBorrowRate,\\n    uint256 liquidityIndex,\\n    uint256 variableBorrowIndex\\n  );\\n\\n  /**\\n   * @dev Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User deposits 100 USDC and gets in return 100 aUSDC\\n   * @param asset The address of the underlying asset to deposit\\n   * @param amount The amount to be deposited\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function deposit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n   * @param asset The address of the underlying asset to withdraw\\n   * @param amount The underlying amount to be withdrawn\\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n   * @param to Address that will receive the underlying, same as msg.sender if the user\\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n   *   different wallet\\n   * @return The final amount withdrawn\\n   **/\\n  function withdraw(\\n    address asset,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n   * already deposited enough collateral, or he was given enough allowance by a credit delegator on the\\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n   * @param asset The address of the underlying asset to borrow\\n   * @param amount The amount to be borrowed\\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   * @param onBehalfOf Address of the user who will receive the debt. Should be the address of the borrower itself\\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n   * if he has been given credit delegation allowance\\n   **/\\n  function borrow(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    uint16 referralCode,\\n    address onBehalfOf\\n  ) external;\\n\\n  /**\\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param rateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n   * other borrower whose debt should be removed\\n   * @return The final amount repaid\\n   **/\\n  function repay(\\n    address asset,\\n    uint256 amount,\\n    uint256 rateMode,\\n    address onBehalfOf\\n  ) external returns (uint256);\\n\\n  /**\\n   * @dev Allows a borrower to swap his debt between stable and variable mode, or viceversa\\n   * @param asset The address of the underlying asset borrowed\\n   * @param rateMode The rate mode that the user wants to swap to\\n   **/\\n  function swapBorrowRateMode(address asset, uint256 rateMode) external;\\n\\n  /**\\n   * @dev Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n   * - Users can be rebalanced if the following conditions are satisfied:\\n   *     1. Usage ratio is above 95%\\n   *     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been\\n   *        borrowed at a stable rate and depositors are not earning enough\\n   * @param asset The address of the underlying asset borrowed\\n   * @param user The address of the user to be rebalanced\\n   **/\\n  function rebalanceStableBorrowRate(address asset, address user) external;\\n\\n  /**\\n   * @dev Allows depositors to enable/disable a specific deposited asset as collateral\\n   * @param asset The address of the underlying asset deposited\\n   * @param useAsCollateral `true` if the user wants to use the deposit as collateral, `false` otherwise\\n   **/\\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\\n\\n  /**\\n   * @dev Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param receiveAToken `true` if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  function liquidationCall(\\n    address collateralAsset,\\n    address debtAsset,\\n    address user,\\n    uint256 debtToCover,\\n    bool receiveAToken\\n  ) external;\\n\\n  /**\\n   * @dev Allows smartcontracts to access the liquidity of the pool within one transaction,\\n   * as long as the amount taken plus a fee is returned.\\n   * IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration.\\n   * For further details please visit https://developers.aave.com\\n   * @param receiverAddress The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface\\n   * @param assets The addresses of the assets being flash-borrowed\\n   * @param amounts The amounts amounts being flash-borrowed\\n   * @param modes Types of the debt to open if the flash loan is not returned:\\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n   * @param params Variadic packed params to pass to the receiver as extra information\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function flashLoan(\\n    address receiverAddress,\\n    address[] calldata assets,\\n    uint256[] calldata amounts,\\n    uint256[] calldata modes,\\n    address onBehalfOf,\\n    bytes calldata params,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Returns the user account data across all the reserves\\n   * @param user The address of the user\\n   * @return totalCollateralETH the total collateral in ETH of the user\\n   * @return totalDebtETH the total debt in ETH of the user\\n   * @return availableBorrowsETH the borrowing power left of the user\\n   * @return currentLiquidationThreshold the liquidation threshold of the user\\n   * @return ltv the loan to value of the user\\n   * @return healthFactor the current health factor of the user\\n   **/\\n  function getUserAccountData(address user)\\n    external\\n    view\\n    returns (\\n      uint256 totalCollateralETH,\\n      uint256 totalDebtETH,\\n      uint256 availableBorrowsETH,\\n      uint256 currentLiquidationThreshold,\\n      uint256 ltv,\\n      uint256 healthFactor\\n    );\\n\\n  function initReserve(\\n    address reserve,\\n    address aTokenAddress,\\n    address stableDebtAddress,\\n    address variableDebtAddress,\\n    address interestRateStrategyAddress\\n  ) external;\\n\\n  function setReserveInterestRateStrategyAddress(address reserve, address rateStrategyAddress)\\n    external;\\n\\n  function setConfiguration(address reserve, uint256 configuration) external;\\n\\n  /**\\n   * @dev Returns the configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The configuration of the reserve\\n   **/\\n  function getConfiguration(address asset)\\n    external\\n    view\\n    returns (DataTypes.ReserveConfigurationMap memory);\\n\\n  /**\\n   * @dev Returns the configuration of the user across all the reserves\\n   * @param user The user address\\n   * @return The configuration of the user\\n   **/\\n  function getUserConfiguration(address user)\\n    external\\n    view\\n    returns (DataTypes.UserConfigurationMap memory);\\n\\n  /**\\n   * @dev Returns the normalized income normalized income of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve's normalized income\\n   */\\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the normalized variable debt per unit of asset\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve normalized variable debt\\n   */\\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the state and configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The state of the reserve\\n   **/\\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\\n\\n  function finalizeTransfer(\\n    address asset,\\n    address from,\\n    address to,\\n    uint256 amount,\\n    uint256 balanceFromAfter,\\n    uint256 balanceToBefore\\n  ) external;\\n\\n  function getReservesList() external view returns (address[] memory);\\n\\n  function getAddressesProvider() external view returns (ILendingPoolAddressesProvider);\\n\\n  function setPause(bool val) external;\\n\\n  function paused() external view returns (bool);\\n}\",\"keccak256\":\"0xff3efa2f83eabd93b693633ebfe32fc2bc2b6f2cc31bee31506c258602ae082f\",\"license\":\"agpl-3.0\"},\"contracts/Aave/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n  event MarketIdSet(string newMarketId);\\n  event LendingPoolUpdated(address indexed newAddress);\\n  event ConfigurationAdminUpdated(address indexed newAddress);\\n  event EmergencyAdminUpdated(address indexed newAddress);\\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n  event PriceOracleUpdated(address indexed newAddress);\\n  event LendingRateOracleUpdated(address indexed newAddress);\\n  event ProxyCreated(bytes32 id, address indexed newAddress);\\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n  function getMarketId() external view returns (string memory);\\n\\n  function setMarketId(string calldata marketId) external;\\n\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  function getLendingPool() external view returns (address);\\n\\n  function setLendingPoolImpl(address pool) external;\\n\\n  function getLendingPoolConfigurator() external view returns (address);\\n\\n  function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n  function getLendingPoolCollateralManager() external view returns (address);\\n\\n  function setLendingPoolCollateralManager(address manager) external;\\n\\n  function getPoolAdmin() external view returns (address);\\n\\n  function setPoolAdmin(address admin) external;\\n\\n  function getEmergencyAdmin() external view returns (address);\\n\\n  function setEmergencyAdmin(address admin) external;\\n\\n  function getPriceOracle() external view returns (address);\\n\\n  function setPriceOracle(address priceOracle) external;\\n\\n  function getLendingRateOracle() external view returns (address);\\n\\n  function setLendingRateOracle(address lendingRateOracle) external;\\n}\",\"keccak256\":\"0xd7b04a3de502b4da5022668bf6a6820c3d2505ec9a5c37e0a50b3b6e3981637f\",\"license\":\"agpl-3.0\"},\"contracts/Aave/IScaledBalanceToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IScaledBalanceToken {\\n  /**\\n   * @dev Returns the scaled balance of the user. The scaled balance is the sum of all the\\n   * updated stored balance divided by the reserve's liquidity index at the moment of the update\\n   * @param user The user whose balance is calculated\\n   * @return The scaled balance of the user\\n   **/\\n  function scaledBalanceOf(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the scaled balance of the user and the scaled total supply.\\n   * @param user The address of the user\\n   * @return The scaled balance of the user\\n   * @return The scaled balance and the scaled total supply\\n   **/\\n  function getScaledUserBalanceAndSupply(address user) external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the scaled total supply of the variable debt token. Represents sum(debt/index)\\n   * @return The scaled total supply\\n   **/\\n  function scaledTotalSupply() external view returns (uint256);\\n}\",\"keccak256\":\"0xbf69758953378a1cd8d52e7af8f63bb352be5508c0d5194d18a109ef10a25f81\",\"license\":\"agpl-3.0\"},\"contracts/Aave/IStableDebtToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title IStableDebtToken\\n * @notice Defines the interface for the stable debt token\\n * @dev It does not inherit from IERC20 to save in code size\\n * @author Aave\\n **/\\n\\ninterface IStableDebtToken {\\n  /**\\n   * @dev Emitted when new stable debt is minted\\n   * @param user The address of the user who triggered the minting\\n   * @param onBehalfOf The recipient of stable debt tokens\\n   * @param amount The amount minted\\n   * @param currentBalance The current balance of the user\\n   * @param balanceIncrease The increase in balance since the last action of the user\\n   * @param newRate The rate of the debt after the minting\\n   * @param avgStableRate The new average stable rate after the minting\\n   * @param newTotalSupply The new total supply of the stable debt token after the action\\n   **/\\n  event Mint(\\n    address indexed user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint256 currentBalance,\\n    uint256 balanceIncrease,\\n    uint256 newRate,\\n    uint256 avgStableRate,\\n    uint256 newTotalSupply\\n  );\\n\\n  /**\\n   * @dev Emitted when new stable debt is burned\\n   * @param user The address of the user\\n   * @param amount The amount being burned\\n   * @param currentBalance The current balance of the user\\n   * @param balanceIncrease The the increase in balance since the last action of the user\\n   * @param avgStableRate The new average stable rate after the burning\\n   * @param newTotalSupply The new total supply of the stable debt token after the action\\n   **/\\n  event Burn(\\n    address indexed user,\\n    uint256 amount,\\n    uint256 currentBalance,\\n    uint256 balanceIncrease,\\n    uint256 avgStableRate,\\n    uint256 newTotalSupply\\n  );\\n\\n  /**\\n   * @dev Mints debt token to the `onBehalfOf` address.\\n   * - The resulting rate is the weighted average between the rate of the new debt\\n   * and the rate of the previous debt\\n   * @param user The address receiving the borrowed underlying, being the delegatee in case\\n   * of credit delegate, or same as `onBehalfOf` otherwise\\n   * @param onBehalfOf The address receiving the debt tokens\\n   * @param amount The amount of debt tokens to mint\\n   * @param rate The rate of the debt being minted\\n   **/\\n  function mint(\\n    address user,\\n    address onBehalfOf,\\n    uint256 amount,\\n    uint256 rate\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Burns debt of `user`\\n   * - The resulting rate is the weighted average between the rate of the new debt\\n   * and the rate of the previous debt\\n   * @param user The address of the user getting his debt burned\\n   * @param amount The amount of debt tokens getting burned\\n   **/\\n  function burn(address user, uint256 amount) external;\\n\\n  /**\\n   * @dev Returns the average rate of all the stable rate loans.\\n   * @return The average stable rate\\n   **/\\n  function getAverageStableRate() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the stable rate of the user debt\\n   * @return The stable rate of the user\\n   **/\\n  function getUserStableRate(address user) external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the timestamp of the last update of the user\\n   * @return The timestamp\\n   **/\\n  function getUserLastUpdated(address user) external view returns (uint40);\\n\\n  /**\\n   * @dev Returns the principal, the total supply and the average stable rate\\n   **/\\n  function getSupplyData()\\n    external\\n    view\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint40\\n    );\\n\\n  /**\\n   * @dev Returns the timestamp of the last update of the total supply\\n   * @return The timestamp\\n   **/\\n  function getTotalSupplyLastUpdated() external view returns (uint40);\\n\\n  /**\\n   * @dev Returns the total supply and the average stable rate\\n   **/\\n  function getTotalSupplyAndAvgRate() external view returns (uint256, uint256);\\n\\n  /**\\n   * @dev Returns the principal debt balance of the user\\n   * @return The debt balance of the user since the last burn/mint action\\n   **/\\n  function principalBalanceOf(address user) external view returns (uint256);\\n}\",\"keccak256\":\"0xe2aad84b992e77023a36035849b19d1f4d8876607efa42a531249e4e3d8c57ca\",\"license\":\"agpl-3.0\"},\"contracts/Aave/IVariableDebtToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IScaledBalanceToken} from './IScaledBalanceToken.sol';\\n\\n/**\\n * @title IVariableDebtToken\\n * @author Aave\\n * @notice Defines the basic interface for a variable debt token.\\n **/\\ninterface IVariableDebtToken is IScaledBalanceToken {\\n  /**\\n   * @dev Emitted after the mint action\\n   * @param from The address performing the mint\\n   * @param onBehalfOf The address of the user on which behalf minting has been performed\\n   * @param value The amount to be minted\\n   * @param index The last index of the reserve\\n   **/\\n  event Mint(address indexed from, address indexed onBehalfOf, uint256 value, uint256 index);\\n\\n  /**\\n   * @dev Mints debt token to the `onBehalfOf` address\\n   * @param user The address receiving the borrowed underlying, being the delegatee in case\\n   * of credit delegate, or same as `onBehalfOf` otherwise\\n   * @param onBehalfOf The address receiving the debt tokens\\n   * @param amount The amount of debt being minted\\n   * @param index The variable debt index of the reserve\\n   * @return `true` if the the previous balance of the user is 0\\n   **/\\n  function mint(\\n    address user,\\n    address onBehalfOf,\\n    uint256 amount,\\n    uint256 index\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when variable debt is burnt\\n   * @param user The user which debt has been burned\\n   * @param amount The amount of debt being burned\\n   * @param index The index of the user\\n   **/\\n  event Burn(address indexed user, uint256 amount, uint256 index);\\n\\n  /**\\n   * @dev Burns user variable debt\\n   * @param user The user which debt is burnt\\n   * @param index The variable debt index of the reserve\\n   **/\\n  function burn(\\n    address user,\\n    uint256 amount,\\n    uint256 index\\n  ) external;\\n}\",\"keccak256\":\"0x9892b6bd31a50c430d04199d8aa1072b9a5795da38368642798a0d02675d3466\",\"license\":\"agpl-3.0\"},\"contracts/L1/Vault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./interface/IVault.sol\\\";\\nimport \\\"./data/VaultData.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"../LayerZero/NonblockingLzApp.sol\\\";\\nimport \\\"../Aave/ILendingPool.sol\\\";\\nimport \\\"../Aave/DataTypes.sol\\\";\\nimport \\\"../Aave/IStableDebtToken.sol\\\";\\nimport \\\"../Aave/IVariableDebtToken.sol\\\";\\n\\ncontract Vault is IVault,VaultData,NonblockingLzApp{\\n\\n    mapping(address => uint256 ) public interestAmount;\\n    mapping(address => bool) public deCoinList;\\n    mapping(address => uint256 ) public totalFee;\\n    mapping(address => bool) public whlieList;\\n\\n    constructor(address lendingPool_, address lzEndpoint_, uint16 dstChainId_,address usdt_)NonblockingLzApp(lzEndpoint_) {\\n       aave = lendingPool_;\\n       dstChainId =dstChainId_;\\n       isOpen = true;\\n       usdt =usdt_ ;\\n    }\\n    \\n    function deposit(address type_, uint256 amount_) payable override external{\\n        bool isSupDe_;\\n        uint256 _amount;\\n        require(isOpen == true,\\\"Closing\\\");\\n        require(deCoinList[type_] == true, \\\"Recharge in this currency is not supported\\\");\\n\\n        require(IERC20(type_).balanceOf(msg.sender) >= amount_, \\\"Balance insufficient\\\");\\n        require(IERC20(type_).allowance(msg.sender,address(this)) >= amount_,\\\"No authorization\\\");\\n\\n        uint256 balance =  IERC20(type_).balanceOf(msg.sender);\\n        IERC20(type_).transferFrom(msg.sender,address(this),amount_);\\n        require(IERC20(type_).balanceOf(msg.sender) == balance-amount_, \\\"Balance insufficient\\\");\\n        \\n        (uint256 va,) = estimateFee(msg.sender);\\n        require(va <= msg.value,\\\"not enough native for fees\\\");\\n\\n        if(isSupDe[type_] == true){\\n            isSupDe_=true;\\n            uint256 _oldTotalValue = getTotalValue(usdt);\\n            _depositToAAVE(type_,amount_);\\n\\n            if( amount_ +_oldTotalValue - getTotalValue(usdt) == 1 ) {\\n               _amount = getTotalValue(usdt)+1;\\n            }    \\n        }\\n        _amount = getTotalValue(usdt);\\n\\n        _sentToL1(dstChainId,abi.encode(msg.sender,type_,amount_,isSupDe_, OperateType.DEPOSIT,_amount),msg.value);\\n\\n        emit eventDeposit(type_,amount_,msg.sender);\\n    }\\n\\n    function depositETH(uint256 amount_) override external payable {\\n        require(isOpen == true,\\\"closing\\\");\\n        (uint256 va,) = estimateFee(msg.sender);\\n        require(amount_+va <= msg.value,\\\"amount no match\\\");\\n        require(va <= msg.value,\\\"not enough native for fees\\\");\\n        \\n        _sentToL1(dstChainId,abi.encode(msg.sender,address(0),amount_,false,OperateType.DEPOSITETH,getTotalValue(usdt)),va);\\n        emit eventDepositETH(amount_,msg.sender);\\n    }\\n\\n    function setSupDe(address add_,bool re) external onlyOwner {\\n        isSupDe[add_] = re;\\n    }\\n    \\n    function withdraw(uint256[] memory amount_,address[] memory coinType_) override external{\\n        require(isOpen == true,\\\"closing\\\");\\n        Account storage _ac  = accounts[msg.sender];\\n        require(amount_.length == coinType_.length,\\\"Array mismatch\\\");\\n\\n        for(uint256 i = 0; i<amount_.length; i++ ){\\n            uint256 balance = _ac.capitalBalance[coinType_[i]];\\n            require(balance >= amount_[i],\\\"Balance insufficient\\\");\\n            _ac.capitalBalance[coinType_[i]] -= amount_[i];\\n            \\n            if(coinType_[i] == address(0)){\\n                payable(msg.sender).transfer(amount_[i]);\\n            }else{\\n                bool  transfer= IERC20(coinType_[i]).transfer(msg.sender, amount_[i]);\\n                require(transfer == true,\\\"Withdraw failed\\\");\\n            }\\n        }\\n        emit eventWithdraw(coinType_,amount_,msg.sender);\\n    }\\n\\n    function verifyEcrecover(bytes32  messageHash, bytes memory signature) public pure returns(address recoveredAddress) {\\n        bytes32 hash = hashMessage(messageHash);\\n        (uint8 v, bytes32 r, bytes32 s) = recover(signature);\\n        return  ecrecover(hash, v, r, s);\\n    }\\n\\n    function recover(bytes memory signature) internal pure returns (uint8, bytes32, bytes32) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        return (v, r, s);\\n    }\\n\\n    function getNativeFee(address user_)view public returns(uint){\\n        Account  storage account = accounts[user_]; \\n        return (account.nativeFee);\\n    }\\n\\n    function  getInterest(address user_) external view returns(uint256) {\\n        return  interestAmount[user_];\\n    }\\n\\n    function setWhilLlist(address  add,uint256 type_) external onlyOwner{\\n        if(type_==1) {\\n             _setupRole(NODE_ROLE,add);\\n        }else{\\n            _setupRole(FEE_ROLE,add);\\n        }\\n    }\\n\\n    //\\u5229\\u606f\\u5927\\u7ed3\\u7b97\\u4e4b\\u540e,\\u76f4\\u63a5\\u628a\\u6700\\u65b0\\u7684\\u5229\\u606f\\u5206\\u914d\\u5230L1,\\u7136\\u540e\\u7ef4\\u62a4L1\\u548cL2\\u8d26\\u672c\\n    function withdrawInterest(uint256 amount_,address coinType_) public {\\n        require(isOpen == true,\\\"closing\\\");\\n        require(interestAmount[msg.sender] >= amount_,\\\"Not sufficient funds\\\");\\n        interestAmount[msg.sender] -= amount_;\\n        IERC20(coinType_).transfer(msg.sender ,amount_);\\n        emit eventWithdrawInterest(msg.sender, coinType_, amount_);\\n    }\\n\\n    function getBalance(address address_) public view returns (address,bytes32,address[] memory, uint256 [] memory,uint256) {\\n        Account storage account = accounts[address_]; \\n        uint256 count = 0;\\n\\n        for (uint256 i = 0; i < coinList.length; i++) {\\n            if (account.capitalBalance[coinList[i]] != 0) {\\n                count++;\\n            }\\n        }\\n\\n        address[] memory coin = new address[](count);\\n        uint256[] memory amount = new uint256[](count); \\n\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < coinList.length; i++) {\\n            if (account.capitalBalance[coinList[i]] != 0) {\\n                coin[index] = coinList[i];\\n                amount[index] = account.capitalBalance[coinList[i]];\\n                index++;\\n            }\\n        }\\n        return (account.user,account.capitalMerkleRoot,coin,amount,account.capitalNonce);\\n    }\\n\\n    function setAdapterParams(uint16 version,uint  gasForDestinationLzReceive) onlyOwner public {\\n        adapterParams = abi.encodePacked(version, gasForDestinationLzReceive);\\n    }\\n\\n    // Function to get the USDT balance of the user\\n    function getBalanceFromAAVE(address type_,address fromAdd_) public view returns (uint256) {\\n        // // Get the user data of the current address\\n        (uint256 currentBalance,, uint256 currentBorrowBalance,,,,, ) = getUserReserveData(type_, fromAdd_);\\n        uint256 usdtBalance = currentBalance - currentBorrowBalance;\\n        return usdtBalance;\\n    }\\n\\n    function getUserReserveData(address asset, address user)    \\n        public\\n        view\\n        returns (\\n        uint256 currentATokenBalance,\\n        uint256 currentStableDebt,\\n        uint256 currentVariableDebt,\\n        uint256 principalStableDebt,\\n        uint256 scaledVariableDebt,\\n        uint256 stableBorrowRate,\\n        uint256 liquidityRate,\\n        uint40 stableRateLastUpdated\\n        )\\n    {\\n        DataTypes.ReserveData memory reserve =\\n        ILendingPool(aave).getReserveData(asset);\\n        currentATokenBalance = IERC20Metadata(reserve.aTokenAddress).balanceOf(user);\\n        currentVariableDebt = IERC20Metadata(reserve.variableDebtTokenAddress).balanceOf(user);\\n        currentStableDebt = IERC20Metadata(reserve.stableDebtTokenAddress).balanceOf(user);\\n        principalStableDebt = IStableDebtToken(reserve.stableDebtTokenAddress).principalBalanceOf(user);\\n        scaledVariableDebt = IVariableDebtToken(reserve.variableDebtTokenAddress).scaledBalanceOf(user);\\n        liquidityRate = reserve.currentLiquidityRate;\\n        stableBorrowRate = IStableDebtToken(reserve.stableDebtTokenAddress).getUserStableRate(user);\\n        stableRateLastUpdated = IStableDebtToken(reserve.stableDebtTokenAddress).getUserLastUpdated(\\n        user\\n        );\\n    }\\n    \\n    function getATokenWithToken(address add_)public view  returns(address){\\n        // Get the aUSDT token instance from the lending pool\\n        return ILendingPool(aave).getReserveData(add_).aTokenAddress;\\n    }\\n\\n    function getOracle(uint16 remoteChainId) external view returns (address _oracle) {\\n        bytes memory bytesOracle = lzEndpoint.getConfig(lzEndpoint.getSendVersion(address(this)), remoteChainId, address(this), 6);\\n        assembly {\\n            _oracle := mload(add(bytesOracle, 32))\\n        }\\n    }\\n    \\n    function getSize(address user_) public view returns( bytes memory encoded ){\\n        encoded =  abi.encode(user_,0, 0,10000,0,10,getTotalValue(usdt),1000000);\\n    }\\n    \\n    function estimateFee(address user_)public view returns (uint nativeFee, uint zroFee) {\\n        (uint native, uint zro) =lzEndpoint.estimateFees(dstChainId, address(this), getSize(user_), false, adapterParams);\\n        return (native,zro);\\n    }\\n \\n    function setIsOpen(bool re_)onlyOwner public{\\n        isOpen = re_;\\n    }\\n\\n    function _sentToL1(uint16 _dstChainId,bytes memory _data,uint256 value)private {\\n         _lzSend(_dstChainId, _data, payable(msg.sender), address(0x0), adapterParams,value);\\n    }\\n\\n    function _depositToAAVE(address type_,uint256 amount_) private{\\n        IERC20(type_).approve(aave,amount_);\\n        require(IERC20(type_).allowance(address(this),aave) >= amount_,\\\"No authorization\\\");\\n        ILendingPool(aave).deposit(type_, amount_,address(this),0);\\n    }\\n\\n    function _withdrawFromAAVE(address type_,uint256 amount_,address receiver_) private returns(uint256){\\n        return ILendingPool(aave).withdraw(type_, amount_,receiver_);\\n    }\\n\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n           \\n        }\\n    }\\n\\n    function setDeCoinList(address [] memory coin_,bool re_) external onlyOwner  {\\n        for(uint256 i= 0; i<coin_.length; i++){\\n            deCoinList[coin_[i]] = re_;\\n        }\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view  returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n    \\n    function _nonblockingLzReceive(uint16, bytes memory, uint64 nonce, bytes memory encoded_) internal override {\\n        uint256 usdtFee; \\n        (InData memory data, uint256 interestBalance,bool type_ ,address[] memory  addFee_,uint256[] memory totalFee_) = abi.decode(encoded_,(InData, uint256,bool,address[],uint256[]));\\n        bytes memory encodedData = abi.encodePacked(\\n            data.user,\\n            data.capitalMerkleRoot,\\n            abi.encodePacked(data.coinList),\\n            abi.encodePacked(data.withdrawnValues),\\n            data.nativeFee,\\n            data.checkOutType\\n        );\\n\\n        if(type_){\\n            require(hasRole(NODE_ROLE, verifyEcrecover(data.messageHash, data.signature)) == true,\\\"The signer is not a node\\\");\\n            bytes32 newMessageHash = keccak256(encodedData);\\n            require(newMessageHash  == data.messageHash ,\\\"Incorrect data\\\"); \\n        }\\n\\n        Account storage myAccount = accounts[data.user];\\n        myAccount.user = data.user;\\n        myAccount.capitalMerkleRoot =  data.capitalMerkleRoot;\\n        myAccount.nativeFee = data.nativeFee;\\n      \\n          //\\u624b\\u7eed\\u8d39\\n        for(uint256 i=0; i< addFee_.length; i++){\\n            totalFee[addFee_[i]] = totalFee_[i];\\n            if(isSupDe[addFee_[i]]){\\n                if(totalFee_[i] > 0){\\n                  usdtFee =  totalFee_[i];\\n                }\\n            }\\n        }\\n\\n        bool flag = false;\\n        for(uint256 i =0 ; i < data.coinList.length; i++){\\n            isCoinList(data.coinList[i]);\\n            myAccount.capitalBalance[data.coinList[i]] += data.withdrawnValues[i];\\n            // \\u662fUSDT  aave\\u63d0\\u53d6\\u7684\\u503c = \\u5229\\u606f+\\u672c\\u91d1\\n            if(isSupDe[data.coinList[i]]){\\n                flag = true;\\n                if(interestBalance + data.withdrawnValues[i] > 0){\\n                    interestAmount[data.user] += interestBalance;\\n                    _withdrawFromAAVE(data.coinList[i], interestBalance + data.withdrawnValues[i]+usdtFee, address(this));\\n                }\\n            }\\n        }\\n\\n        if(!flag && interestBalance > 0){\\n            interestAmount[data.user] += interestBalance;\\n            _withdrawFromAAVE(usdt, interestBalance + usdtFee, address(this));\\n        }\\n\\n        emit eventReceive(data.user,data.coinList,data.withdrawnValues,data.checkOutType);   \\n\\n    }\\n\\n    function setOracle(uint16 dstChainId, address oracle) external onlyOwner {\\n        uint TYPE_ORACLE = 6;\\n        // set the Oracle\\n        lzEndpoint.setConfig(lzEndpoint.getSendVersion(address(this)), dstChainId, TYPE_ORACLE, abi.encode(oracle));\\n    }\\n    \\n    function hashMessage(bytes32  message) public pure returns (bytes32 messageHash) {\\n        messageHash = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\n        return messageHash;\\n    }\\n\\n    function isCoinList(address goodsAddress) private{\\n        if(isTrueForCoin[goodsAddress] == false){\\n            isTrueForCoin[goodsAddress] = true;\\n            coinList.push(goodsAddress);\\n        }\\n    }\\n\\n    function withdrawFee(address add_, uint256 amount_) external onlyOwner{\\n        require(totalFee[add_] >= amount_,\\\"Not sufficient funds\\\");\\n        require(hasRole(FEE_ROLE,msg.sender)==true,\\\"Permission Denied\\\");\\n        totalFee[add_]  -= amount_;\\n        IERC20(add_).transfer(msg.sender ,amount_);\\n    }\\n\\n    function getAllFee()external returns(address[] memory coin,uint256[] memory amount){\\n        uint256 count = 0;\\n\\n        for(uint256 i =0; i<coinList.length; i++){\\n            if(totalFee[coinList[i]] > 0){\\n                 count++;\\n            }\\n        }\\n\\n        address[] memory coin = new address[](count);\\n        uint256[] memory amount = new uint256[](count); \\n\\n        for(uint256 i =0; i<coinList.length; i++){\\n            if(totalFee[coinList[i]] > 0){\\n                 coin[i] = coinList[i];\\n                 amount[i] = totalFee[coinList[i]];\\n            }\\n        }\\n      \\n    }\\n\\n    function getTotalValue(address asset)    \\n        public\\n        view\\n        returns (\\n            uint256 currentATokenBalance\\n        )\\n    {\\n        DataTypes.ReserveData memory reserve =\\n        ILendingPool(aave).getReserveData(asset);\\n        currentATokenBalance = IERC20Metadata(reserve.aTokenAddress).balanceOf(address(this));\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb137ad5afc4f656afff63c6575d00195e7c9e49a7d3d2a149f608d668754e819\",\"license\":\"MIT\"},\"contracts/L1/data/VaultData.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VaultData {\\n\\n    enum OperateType{\\n        NONE,\\n        DEPOSIT, // \\u5145\\u503c\\n        DEPOSITETH, // \\u5145\\u503cETH\\n        WITHDRAW, // \\u63d0\\u73b0\\n        WITHDRAWINTEREST // \\u63d0\\u5229\\u606f\\n    }\\n    \\n    bytes32 public constant OWENER_ROLE = keccak256(\\\"OWENER_ROLE\\\");\\n    bytes32 public constant NODE_ROLE = keccak256(\\\"NODE_ROLE\\\");\\n    bytes32 public constant FEE_ROLE = keccak256(\\\"FEE_ROLE\\\");\\n\\n    uint16 public dstChainId;\\n    address public interest;\\n    address public aave;\\n    bytes public adapterParams;\\n   \\n    struct Account {\\n      address user;\\n      bytes32 capitalMerkleRoot;\\n      mapping(address => uint256) capitalBalance;\\n      uint256 capitalNonce;\\n      bytes32 tradingMerkleRoot;\\n      mapping(address => uint256) tradingBalance;\\n      uint256 tradingNonce;\\n      uint nativeFee;\\n    }\\n\\n   mapping(address => Account) public accounts;\\n   \\n   mapping(address => bool) public isSupDe;\\n   \\n   mapping(address => uint256)private latestShare;\\n   \\n   bool public isOpen;\\n\\n   struct InData{\\n        address user; \\n        bytes32 capitalMerkleRoot; \\n        address [] coinList; \\n        uint256 [] withdrawnValues;\\n        uint256 nativeFee;\\n        uint8 checkOutType; // 1 \\u63d0\\u5e01 2 \\u5229\\u606f\\n        bytes32 messageHash; \\n        bytes signature;\\n    }\\n\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) public _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    address[] coinList;\\n\\n    mapping(address => bool) public isTrueForCoin;\\n    \\n    address public usdt;\\n}\\n\",\"keccak256\":\"0xfff9780848d05a9eb0660adaab36551a349a387e977e77aa09aac428f31314f5\",\"license\":\"MIT\"},\"contracts/L1/interface/IVault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IVault {\\n    function deposit(address type_, uint256 amount_)payable external;\\n\\n    function depositETH(uint256 amount_) payable external;\\n    \\n    function withdraw(uint256 [] memory amount_,address [] memory coin_) external;\\n\\n    event eventWithdraw(address[]type_, uint256 [] amount_,address sender_);\\n\\n    event eventDepositETH(uint256 amount_,address sender_);\\n\\n    event eventDeposit(address type_,uint256 amount_,address sender_);\\n\\n    event eventCheckOutInterest (address user_,address coin_,uint256 interest_);\\n\\n    event eventReceive(address user ,address[] coinAdd_, uint256[] capitalValues_, uint8 checkOutType);\\n\\n    event eventWithdrawInterest(address user, address coinType, uint256 interestBalance);\\n\\n    event eventSetWhilLlist(address user_,bool re_ );\\n}\\n\",\"keccak256\":\"0x6443b2cb95eeb8048dcf4e2d1bfbf66dcc830b164a8c01a99617f4d15b1c9ac5\",\"license\":\"MIT\"},\"contracts/LayerZero/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable2Step.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"./util/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable2Step, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(_srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote), \\\"LzApp: invalid source sending contract\\\");\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function _lzSend(uint16 _dstChainId, bytes memory _payload, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams, uint _nativeFee) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(uint16 _dstChainId, uint16 _type, bytes memory _adapterParams, uint _extraGas) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type] + _extraGas;\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(uint16 _version, uint16 _chainId, address, uint _configType) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external   {\\n        lzEndpoint.retryPayload(_srcChainId,_srcAddress, _payload);\\n    }\\n\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external   {\\n        lzEndpoint.hasStoredPayload(_srcChainId,_srcAddress);\\n    }\\n    \\n     function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _srcChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_srcChainId] = _path;\\n        emit SetTrustedRemote(_srcChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(uint16 _dstChainId, uint16 _packetType, uint _minGas) external onlyOwner {\\n        require(_minGas > 0, \\\"LzApp: invalid minGas\\\");\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x250a898d17fa851914bb836743ea506a384fa35d110cde26247be3e6c8f2f29c\",\"license\":\"MIT\"},\"contracts/LayerZero/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"./util/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(gasleft(), 150, abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload));\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload, bytes memory _reason) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function retryMessage(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x37cff8f389b0de9111f4f950252217993a78c12dfb071d09d9fbe217e4d394d4\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xe9617a9f6db351b6ac4c9d5b1097798af59ad7f813e370e8cf69bb44addd8548\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n}\\n\",\"keccak256\":\"0x909bf72002c91806f39a64172c12b4188219e8649deefbe8d862604d4f9d3faf\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xe3e50134e39aa3c0f916447d36367970c6e4df972d488b794227e0b052ce80d5\",\"license\":\"MIT\"},\"contracts/LayerZero/util/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\n\\nlibrary BytesLib {\\n    function concat(\\n        bytes memory _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n        // Get a location of some free memory and store it in tempBytes as\\n        // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n        // Store the length of the first bytes array at the beginning of\\n        // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n        // Maintain a memory counter for the current write location in the\\n        // temp bytes array by adding the 32 bytes for the array length to\\n        // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n        // Stop copying when the memory counter reaches the length of the\\n        // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n            // Initialize a copy counter to the start of the _preBytes data,\\n            // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n            // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n            // Write the _preBytes data into the tempBytes memory 32 bytes\\n            // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Add the length of _postBytes to the current length of tempBytes\\n        // and store it as the new length in the first 32 bytes of the\\n        // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n        // Move the memory counter back from a multiple of 0x20 to the\\n        // actual end of the _preBytes data.\\n            mc := end\\n        // Stop copying when the memory counter reaches the new combined\\n        // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Update the free-memory pointer by padding our last write location\\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n        // next 32 byte block, then round down to the nearest multiple of\\n        // 32. If the sum of the length of the two arrays is zero then add\\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(0x40, and(\\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n            not(31) // Round down to the nearest 32 bytes.\\n            ))\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n        // Read the first 32 bytes of _preBytes storage, which is the length\\n        // of the array. (We don't need to use the offset into the slot\\n        // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n        // Arrays of 31 bytes or less have an even value in their slot,\\n        // while longer arrays have an odd value. The actual length is\\n        // the slot divided by two for odd values, and the lowest order\\n        // byte divided by two for even values.\\n        // If the slot is even, bitwise and the slot with 255 and divide by\\n        // two to get the length. If the slot is odd, bitwise and the slot\\n        // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n        // slength can contain both the length and contents of the array\\n        // if length < 32 bytes so let's prepare for that\\n        // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n            // Since the new array still fits in the slot, we just need to\\n            // update the contents of the slot.\\n            // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                _preBytes.slot,\\n                // all the modifications to the slot are inside this\\n                // next block\\n                add(\\n                // we can just add to the slot contents because the\\n                // bytes we want to change are the LSBs\\n                fslot,\\n                add(\\n                mul(\\n                div(\\n                // load the bytes from memory\\n                mload(add(_postBytes, 0x20)),\\n                // zero all bytes to the right\\n                exp(0x100, sub(32, mlength))\\n                ),\\n                // and now shift left the number of bytes to\\n                // leave space for the length in the slot\\n                exp(0x100, sub(32, newlength))\\n                ),\\n                // increase length by the double of the memory\\n                // bytes length\\n                mul(mlength, 2)\\n                )\\n                )\\n                )\\n            }\\n            case 1 {\\n            // The stored value fits in the slot, but the combined value\\n            // will exceed it.\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // The contents of the _postBytes array start 32 bytes into\\n            // the structure. Our first read should obtain the `submod`\\n            // bytes that can fit into the unused space in the last word\\n            // of the stored array. To get this, we read 32 bytes starting\\n            // from `submod`, so the data we read overlaps with the array\\n            // contents by `submod` bytes. Masking the lowest-order\\n            // `submod` bytes allows us to add that value directly to the\\n            // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(\\n                sc,\\n                add(\\n                and(\\n                fslot,\\n                0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\\n                ),\\n                and(mload(mc), mask)\\n                )\\n                )\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n            // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // Copy over the first `submod` bytes of the new data as in\\n            // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint256 _start,\\n        uint256 _length\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n            // The first word of the slice result is potentially a partial\\n            // word read from the original array. To read it, we calculate\\n            // the length of that partial word and start copying that many\\n            // bytes into the array. The first word we copy will start with\\n            // data we don't care about, but the last `lengthmod` bytes will\\n            // land at the beginning of the contents of the new array. When\\n            // we're done copying, we overwrite the full first word with\\n            // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n            // The multiplication in the next line is necessary\\n            // because when slicing multiples of 32 bytes (lengthmod == 0)\\n            // the following copy loop was copying the origin's length\\n            // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                // The multiplication in the next line has the same exact purpose\\n                // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n            //update free-memory pointer\\n            //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n            //zero out the 32 bytes slice we are about to return\\n            //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1 , \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint256 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n            // cb is a circuit breaker in the for loop since there's\\n            //  no said feature for inline assembly loops\\n            // cb = 1 - don't breaker\\n            // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                // the next line is the loop condition:\\n                // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                    // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(\\n        bytes storage _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    view\\n    returns (bool)\\n    {\\n        bool success = true;\\n\\n        assembly {\\n        // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n        // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                    // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                        // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                    // cb is a circuit breaker in the for loop since there's\\n                    //  no said feature for inline assembly loops\\n                    // cb = 1 - don't breaker\\n                    // cb = 0 - break\\n                        let cb := 1\\n\\n                    // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                        for {} eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                            // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x2255aadad70e87ed42b158776330175644b07fbbc7e77ed32cd6330974abbcee\",\"license\":\"Unlicense\"},\"contracts/LayerZero/util/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint256 constant LOW_28_MASK =\\n    0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint256 _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n            _gas, // gas\\n            _target, // recipient\\n            0, // ether value\\n            add(_calldata, 0x20), // inloc\\n            mload(_calldata), // inlen\\n            0, // outloc\\n            0 // outlen\\n            )\\n        // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n        // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n        // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint256 _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n            _gas, // gas\\n            _target, // recipient\\n            add(_calldata, 0x20), // inloc\\n            mload(_calldata), // inlen\\n            0, // outloc\\n            0 // outlen\\n            )\\n        // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n        // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n        // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf)\\n    internal\\n    pure\\n    {\\n        require(_buf.length >= 4);\\n        uint256 _mask = LOW_28_MASK;\\n        assembly {\\n        // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n        // mask out the top 4 bytes\\n        // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x23942250ddd277c443fa27c6b4ab51e6b3b5e654548b6b9e8d785a88ebec4dfe\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2881,"contract":"contracts/L1/Vault.sol:Vault","label":"dstChainId","offset":0,"slot":"0","type":"t_uint16"},{"astId":2883,"contract":"contracts/L1/Vault.sol:Vault","label":"interest","offset":2,"slot":"0","type":"t_address"},{"astId":2885,"contract":"contracts/L1/Vault.sol:Vault","label":"aave","offset":0,"slot":"1","type":"t_address"},{"astId":2887,"contract":"contracts/L1/Vault.sol:Vault","label":"adapterParams","offset":0,"slot":"2","type":"t_bytes_storage"},{"astId":2913,"contract":"contracts/L1/Vault.sol:Vault","label":"accounts","offset":0,"slot":"3","type":"t_mapping(t_address,t_struct(Account)2908_storage)"},{"astId":2917,"contract":"contracts/L1/Vault.sol:Vault","label":"isSupDe","offset":0,"slot":"4","type":"t_mapping(t_address,t_bool)"},{"astId":2921,"contract":"contracts/L1/Vault.sol:Vault","label":"latestShare","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2923,"contract":"contracts/L1/Vault.sol:Vault","label":"isOpen","offset":0,"slot":"6","type":"t_bool"},{"astId":2954,"contract":"contracts/L1/Vault.sol:Vault","label":"_roles","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_struct(RoleData)2949_storage)"},{"astId":2960,"contract":"contracts/L1/Vault.sol:Vault","label":"coinList","offset":0,"slot":"8","type":"t_array(t_address)dyn_storage"},{"astId":2964,"contract":"contracts/L1/Vault.sol:Vault","label":"isTrueForCoin","offset":0,"slot":"9","type":"t_mapping(t_address,t_bool)"},{"astId":2966,"contract":"contracts/L1/Vault.sol:Vault","label":"usdt","offset":0,"slot":"10","type":"t_address"},{"astId":7,"contract":"contracts/L1/Vault.sol:Vault","label":"_owner","offset":0,"slot":"11","type":"t_address"},{"astId":120,"contract":"contracts/L1/Vault.sol:Vault","label":"_pendingOwner","offset":0,"slot":"12","type":"t_address"},{"astId":3072,"contract":"contracts/L1/Vault.sol:Vault","label":"trustedRemoteLookup","offset":0,"slot":"13","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":3078,"contract":"contracts/L1/Vault.sol:Vault","label":"minDstGasLookup","offset":0,"slot":"14","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":3080,"contract":"contracts/L1/Vault.sol:Vault","label":"precrime","offset":0,"slot":"15","type":"t_address"},{"astId":3598,"contract":"contracts/L1/Vault.sol:Vault","label":"failedMessages","offset":0,"slot":"16","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"},{"astId":1105,"contract":"contracts/L1/Vault.sol:Vault","label":"interestAmount","offset":0,"slot":"17","type":"t_mapping(t_address,t_uint256)"},{"astId":1109,"contract":"contracts/L1/Vault.sol:Vault","label":"deCoinList","offset":0,"slot":"18","type":"t_mapping(t_address,t_bool)"},{"astId":1113,"contract":"contracts/L1/Vault.sol:Vault","label":"totalFee","offset":0,"slot":"19","type":"t_mapping(t_address,t_uint256)"},{"astId":1117,"contract":"contracts/L1/Vault.sol:Vault","label":"whlieList","offset":0,"slot":"20","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Account)2908_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct VaultData.Account)","numberOfBytes":"32","value":"t_struct(Account)2908_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)2949_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct VaultData.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)2949_storage"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_struct(Account)2908_storage":{"encoding":"inplace","label":"struct VaultData.Account","members":[{"astId":2889,"contract":"contracts/L1/Vault.sol:Vault","label":"user","offset":0,"slot":"0","type":"t_address"},{"astId":2891,"contract":"contracts/L1/Vault.sol:Vault","label":"capitalMerkleRoot","offset":0,"slot":"1","type":"t_bytes32"},{"astId":2895,"contract":"contracts/L1/Vault.sol:Vault","label":"capitalBalance","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":2897,"contract":"contracts/L1/Vault.sol:Vault","label":"capitalNonce","offset":0,"slot":"3","type":"t_uint256"},{"astId":2899,"contract":"contracts/L1/Vault.sol:Vault","label":"tradingMerkleRoot","offset":0,"slot":"4","type":"t_bytes32"},{"astId":2903,"contract":"contracts/L1/Vault.sol:Vault","label":"tradingBalance","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2905,"contract":"contracts/L1/Vault.sol:Vault","label":"tradingNonce","offset":0,"slot":"6","type":"t_uint256"},{"astId":2907,"contract":"contracts/L1/Vault.sol:Vault","label":"nativeFee","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_struct(RoleData)2949_storage":{"encoding":"inplace","label":"struct VaultData.RoleData","members":[{"astId":2946,"contract":"contracts/L1/Vault.sol:Vault","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":2948,"contract":"contracts/L1/Vault.sol:Vault","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/L1/data/VaultData.sol":{"VaultData":{"abi":[{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NODE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWENER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"_roles","outputs":[{"internalType":"bytes32","name":"adminRole","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aave","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"accounts","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes32","name":"capitalMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"capitalNonce","type":"uint256"},{"internalType":"bytes32","name":"tradingMerkleRoot","type":"bytes32"},{"internalType":"uint256","name":"tradingNonce","type":"uint256"},{"internalType":"uint256","name":"nativeFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adapterParams","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dstChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"interest","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isSupDe","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isTrueForCoin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdt","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610481806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c8063083118d5146100bf57806319fc2e61146100dd5780632a0276f8146101125780632f48ab7d1461013957806330c593f71461016457806347535d7b146101855780634893c26a146101a25780635e5c06e2146101c5578063819faf7b1461024b578063a217fddf1461025e578063bd99d7e114610266578063c392f76614610289578063fb895733146102a2578063ff464d3f146102c9575b600080fd5b6100c76102ec565b6040516100d4919061037a565b60405180910390f35b6101047f52941335797217779ab62cf10a3ae2b6d453b5f3a1285e7a816eb9f63a58d66981565b6040519081526020016100d4565b6101047ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df1581565b600a5461014c906001600160a01b031681565b6040516001600160a01b0390911681526020016100d4565b6000546101729061ffff1681565b60405161ffff90911681526020016100d4565b6006546101929060ff1681565b60405190151581526020016100d4565b6101926101b03660046103c8565b60096020526000908152604090205460ff1681565b6102146101d33660046103c8565b60036020819052600091825260409091208054600182015492820154600483015460068401546007909401546001600160a01b039093169493919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c0016100d4565b60015461014c906001600160a01b031681565b610104600081565b6101046102743660046103f8565b60076020526000908152604090206001015481565b60005461014c906201000090046001600160a01b031681565b6101047f57c872046f094b8a493ec5eb6ea374eafbc3c05951e40de3c4302a41f3f127ba81565b6101926102d73660046103c8565b60046020526000908152604090205460ff1681565b600280546102f990610411565b80601f016020809104026020016040519081016040528092919081815260200182805461032590610411565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505081565b600060208083528351808285015260005b818110156103a75785810183015185820160400152820161038b565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103da57600080fd5b81356001600160a01b03811681146103f157600080fd5b9392505050565b60006020828403121561040a57600080fd5b5035919050565b600181811c9082168061042557607f821691505b60208210810361044557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207f5fa9aa55092db5e5088d38054b612d7ba96e5737c81714a749f8002d02073b64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x481 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83118D5 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x19FC2E61 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x2A0276F8 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x30C593F7 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x4893C26A EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x5E5C06E2 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x819FAF7B EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xBD99D7E1 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC392F766 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xFB895733 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xFF464D3F EQ PUSH2 0x2C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH32 0x52941335797217779AB62CF10A3AE2B6D453B5F3A1285E7A816EB9F63A58D669 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x104 PUSH32 0xF33FE78EB7C840E8BF68670029904B6F0DA8E79346941C278A4E7676D473DF15 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x14C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x172 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x192 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x14C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH32 0x57C872046F094B8A493EC5EB6EA374EAFBC3C05951E40DE3C4302A41F3F127BA DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x411 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x411 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x38B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x425 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x445 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x5FA9AA55092DB5E5088D38054B612D7BA96E5737C81714A749F8002D02073B64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"56:1572:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_2957":{"entryPoint":null,"id":2957,"parameterSlots":0,"returnSlots":0},"@FEE_ROLE_2879":{"entryPoint":null,"id":2879,"parameterSlots":0,"returnSlots":0},"@NODE_ROLE_2874":{"entryPoint":null,"id":2874,"parameterSlots":0,"returnSlots":0},"@OWENER_ROLE_2869":{"entryPoint":null,"id":2869,"parameterSlots":0,"returnSlots":0},"@_roles_2954":{"entryPoint":null,"id":2954,"parameterSlots":0,"returnSlots":0},"@aave_2885":{"entryPoint":null,"id":2885,"parameterSlots":0,"returnSlots":0},"@accounts_2913":{"entryPoint":null,"id":2913,"parameterSlots":0,"returnSlots":0},"@adapterParams_2887":{"entryPoint":748,"id":2887,"parameterSlots":0,"returnSlots":0},"@dstChainId_2881":{"entryPoint":null,"id":2881,"parameterSlots":0,"returnSlots":0},"@interest_2883":{"entryPoint":null,"id":2883,"parameterSlots":0,"returnSlots":0},"@isOpen_2923":{"entryPoint":null,"id":2923,"parameterSlots":0,"returnSlots":0},"@isSupDe_2917":{"entryPoint":null,"id":2917,"parameterSlots":0,"returnSlots":0},"@isTrueForCoin_2964":{"entryPoint":null,"id":2964,"parameterSlots":0,"returnSlots":0},"@usdt_2966":{"entryPoint":null,"id":2966,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":1016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__to_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1041,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2764:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"133:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"143:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"153:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"147:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"171:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"182:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"164:6:21"},"nodeType":"YulFunctionCall","src":"164:21:21"},"nodeType":"YulExpressionStatement","src":"164:21:21"},{"nodeType":"YulVariableDeclaration","src":"194:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"214:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"208:5:21"},"nodeType":"YulFunctionCall","src":"208:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"198:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"241:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"252:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:21"},"nodeType":"YulFunctionCall","src":"237:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"257:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"230:6:21"},"nodeType":"YulFunctionCall","src":"230:34:21"},"nodeType":"YulExpressionStatement","src":"230:34:21"},{"nodeType":"YulVariableDeclaration","src":"273:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"282:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"277:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"342:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"371:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"382:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"367:3:21"},"nodeType":"YulFunctionCall","src":"367:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"363:3:21"},"nodeType":"YulFunctionCall","src":"363:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"405:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"413:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"401:3:21"},"nodeType":"YulFunctionCall","src":"401:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"417:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"397:3:21"},"nodeType":"YulFunctionCall","src":"397:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"391:5:21"},"nodeType":"YulFunctionCall","src":"391:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"356:6:21"},"nodeType":"YulFunctionCall","src":"356:66:21"},"nodeType":"YulExpressionStatement","src":"356:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"303:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"306:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"300:2:21"},"nodeType":"YulFunctionCall","src":"300:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"314:19:21","statements":[{"nodeType":"YulAssignment","src":"316:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"325:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"328:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"321:3:21"},"nodeType":"YulFunctionCall","src":"321:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"316:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"296:3:21","statements":[]},"src":"292:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"456:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"467:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"452:3:21"},"nodeType":"YulFunctionCall","src":"452:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"476:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"448:3:21"},"nodeType":"YulFunctionCall","src":"448:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"481:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"441:6:21"},"nodeType":"YulFunctionCall","src":"441:42:21"},"nodeType":"YulExpressionStatement","src":"441:42:21"},{"nodeType":"YulAssignment","src":"492:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"508:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"527:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"535:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"523:3:21"},"nodeType":"YulFunctionCall","src":"523:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"544:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"540:3:21"},"nodeType":"YulFunctionCall","src":"540:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"519:3:21"},"nodeType":"YulFunctionCall","src":"519:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"504:3:21"},"nodeType":"YulFunctionCall","src":"504:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"551:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"500:3:21"},"nodeType":"YulFunctionCall","src":"500:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"492:4:21"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"102:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"113:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"124:4:21","type":""}],"src":"14:546:21"},{"body":{"nodeType":"YulBlock","src":"666:76:21","statements":[{"nodeType":"YulAssignment","src":"676:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"688:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"699:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:21"},"nodeType":"YulFunctionCall","src":"684:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"676:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"729:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"711:6:21"},"nodeType":"YulFunctionCall","src":"711:25:21"},"nodeType":"YulExpressionStatement","src":"711:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"635:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"646:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"657:4:21","type":""}],"src":"565:177:21"},{"body":{"nodeType":"YulBlock","src":"848:102:21","statements":[{"nodeType":"YulAssignment","src":"858:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"870:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"881:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"866:3:21"},"nodeType":"YulFunctionCall","src":"866:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"858:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"915:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"931:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"936:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"927:3:21"},"nodeType":"YulFunctionCall","src":"927:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"940:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"923:3:21"},"nodeType":"YulFunctionCall","src":"923:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"911:3:21"},"nodeType":"YulFunctionCall","src":"911:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"893:6:21"},"nodeType":"YulFunctionCall","src":"893:51:21"},"nodeType":"YulExpressionStatement","src":"893:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"817:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"828:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"839:4:21","type":""}],"src":"747:203:21"},{"body":{"nodeType":"YulBlock","src":"1054:89:21","statements":[{"nodeType":"YulAssignment","src":"1064:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1076:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1087:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:21"},"nodeType":"YulFunctionCall","src":"1072:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1064:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1106:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1121:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1129:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1099:6:21"},"nodeType":"YulFunctionCall","src":"1099:38:21"},"nodeType":"YulExpressionStatement","src":"1099:38:21"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1023:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1034:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1045:4:21","type":""}],"src":"955:188:21"},{"body":{"nodeType":"YulBlock","src":"1243:92:21","statements":[{"nodeType":"YulAssignment","src":"1253:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1265:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1276:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1261:3:21"},"nodeType":"YulFunctionCall","src":"1261:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1253:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1295:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1320:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1313:6:21"},"nodeType":"YulFunctionCall","src":"1313:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1306:6:21"},"nodeType":"YulFunctionCall","src":"1306:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1288:6:21"},"nodeType":"YulFunctionCall","src":"1288:41:21"},"nodeType":"YulExpressionStatement","src":"1288:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1212:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1223:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1234:4:21","type":""}],"src":"1148:187:21"},{"body":{"nodeType":"YulBlock","src":"1410:216:21","statements":[{"body":{"nodeType":"YulBlock","src":"1456:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1465:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1468:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1458:6:21"},"nodeType":"YulFunctionCall","src":"1458:12:21"},"nodeType":"YulExpressionStatement","src":"1458:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1431:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1440:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1427:3:21"},"nodeType":"YulFunctionCall","src":"1427:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1452:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1423:3:21"},"nodeType":"YulFunctionCall","src":"1423:32:21"},"nodeType":"YulIf","src":"1420:52:21"},{"nodeType":"YulVariableDeclaration","src":"1481:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1507:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1494:12:21"},"nodeType":"YulFunctionCall","src":"1494:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1580:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1592:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1582:6:21"},"nodeType":"YulFunctionCall","src":"1582:12:21"},"nodeType":"YulExpressionStatement","src":"1582:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1539:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1550:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1565:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1570:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1561:3:21"},"nodeType":"YulFunctionCall","src":"1561:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"1574:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1557:3:21"},"nodeType":"YulFunctionCall","src":"1557:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1546:3:21"},"nodeType":"YulFunctionCall","src":"1546:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1536:2:21"},"nodeType":"YulFunctionCall","src":"1536:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1529:6:21"},"nodeType":"YulFunctionCall","src":"1529:50:21"},"nodeType":"YulIf","src":"1526:70:21"},{"nodeType":"YulAssignment","src":"1605:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1615:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1605:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1376:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1387:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1399:6:21","type":""}],"src":"1340:286:21"},{"body":{"nodeType":"YulBlock","src":"1872:320:21","statements":[{"nodeType":"YulAssignment","src":"1882:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1894:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1905:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1890:3:21"},"nodeType":"YulFunctionCall","src":"1890:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1882:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1925:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1940:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1956:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1961:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1952:3:21"},"nodeType":"YulFunctionCall","src":"1952:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"1965:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1948:3:21"},"nodeType":"YulFunctionCall","src":"1948:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1936:3:21"},"nodeType":"YulFunctionCall","src":"1936:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1918:6:21"},"nodeType":"YulFunctionCall","src":"1918:51:21"},"nodeType":"YulExpressionStatement","src":"1918:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1989:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2000:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1985:3:21"},"nodeType":"YulFunctionCall","src":"1985:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"2005:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1978:6:21"},"nodeType":"YulFunctionCall","src":"1978:34:21"},"nodeType":"YulExpressionStatement","src":"1978:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2032:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2043:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2028:3:21"},"nodeType":"YulFunctionCall","src":"2028:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"2048:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2021:6:21"},"nodeType":"YulFunctionCall","src":"2021:34:21"},"nodeType":"YulExpressionStatement","src":"2021:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2075:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2086:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2071:3:21"},"nodeType":"YulFunctionCall","src":"2071:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"2091:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2064:6:21"},"nodeType":"YulFunctionCall","src":"2064:34:21"},"nodeType":"YulExpressionStatement","src":"2064:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2118:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2129:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2114:3:21"},"nodeType":"YulFunctionCall","src":"2114:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"2135:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2107:6:21"},"nodeType":"YulFunctionCall","src":"2107:35:21"},"nodeType":"YulExpressionStatement","src":"2107:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2162:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2173:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2158:3:21"},"nodeType":"YulFunctionCall","src":"2158:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"2179:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2151:6:21"},"nodeType":"YulFunctionCall","src":"2151:35:21"},"nodeType":"YulExpressionStatement","src":"2151:35:21"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__to_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1801:9:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1812:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1820:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1828:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1836:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1844:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1852:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1863:4:21","type":""}],"src":"1631:561:21"},{"body":{"nodeType":"YulBlock","src":"2267:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"2313:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2322:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2325:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2315:6:21"},"nodeType":"YulFunctionCall","src":"2315:12:21"},"nodeType":"YulExpressionStatement","src":"2315:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2288:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2284:3:21"},"nodeType":"YulFunctionCall","src":"2284:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2309:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2280:3:21"},"nodeType":"YulFunctionCall","src":"2280:32:21"},"nodeType":"YulIf","src":"2277:52:21"},{"nodeType":"YulAssignment","src":"2338:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2361:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2348:12:21"},"nodeType":"YulFunctionCall","src":"2348:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2338:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2233:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2244:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2256:6:21","type":""}],"src":"2197:180:21"},{"body":{"nodeType":"YulBlock","src":"2437:325:21","statements":[{"nodeType":"YulAssignment","src":"2447:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2461:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2464:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2457:3:21"},"nodeType":"YulFunctionCall","src":"2457:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2447:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2478:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2508:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2514:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2504:3:21"},"nodeType":"YulFunctionCall","src":"2504:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2482:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2555:31:21","statements":[{"nodeType":"YulAssignment","src":"2557:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2571:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2579:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2567:3:21"},"nodeType":"YulFunctionCall","src":"2567:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2557:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2535:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2528:6:21"},"nodeType":"YulFunctionCall","src":"2528:26:21"},"nodeType":"YulIf","src":"2525:61:21"},{"body":{"nodeType":"YulBlock","src":"2645:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2666:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2673:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2678:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2669:3:21"},"nodeType":"YulFunctionCall","src":"2669:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2659:6:21"},"nodeType":"YulFunctionCall","src":"2659:31:21"},"nodeType":"YulExpressionStatement","src":"2659:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2710:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2713:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2703:6:21"},"nodeType":"YulFunctionCall","src":"2703:15:21"},"nodeType":"YulExpressionStatement","src":"2703:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2738:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2741:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2731:6:21"},"nodeType":"YulFunctionCall","src":"2731:15:21"},"nodeType":"YulExpressionStatement","src":"2731:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2601:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2624:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2632:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2621:2:21"},"nodeType":"YulFunctionCall","src":"2621:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2598:2:21"},"nodeType":"YulFunctionCall","src":"2598:38:21"},"nodeType":"YulIf","src":"2595:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2417:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2426:6:21","type":""}],"src":"2382:380:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__to_t_address_t_bytes32_t_uint256_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ba5760003560e01c8063083118d5146100bf57806319fc2e61146100dd5780632a0276f8146101125780632f48ab7d1461013957806330c593f71461016457806347535d7b146101855780634893c26a146101a25780635e5c06e2146101c5578063819faf7b1461024b578063a217fddf1461025e578063bd99d7e114610266578063c392f76614610289578063fb895733146102a2578063ff464d3f146102c9575b600080fd5b6100c76102ec565b6040516100d4919061037a565b60405180910390f35b6101047f52941335797217779ab62cf10a3ae2b6d453b5f3a1285e7a816eb9f63a58d66981565b6040519081526020016100d4565b6101047ff33fe78eb7c840e8bf68670029904b6f0da8e79346941c278a4e7676d473df1581565b600a5461014c906001600160a01b031681565b6040516001600160a01b0390911681526020016100d4565b6000546101729061ffff1681565b60405161ffff90911681526020016100d4565b6006546101929060ff1681565b60405190151581526020016100d4565b6101926101b03660046103c8565b60096020526000908152604090205460ff1681565b6102146101d33660046103c8565b60036020819052600091825260409091208054600182015492820154600483015460068401546007909401546001600160a01b039093169493919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c0016100d4565b60015461014c906001600160a01b031681565b610104600081565b6101046102743660046103f8565b60076020526000908152604090206001015481565b60005461014c906201000090046001600160a01b031681565b6101047f57c872046f094b8a493ec5eb6ea374eafbc3c05951e40de3c4302a41f3f127ba81565b6101926102d73660046103c8565b60046020526000908152604090205460ff1681565b600280546102f990610411565b80601f016020809104026020016040519081016040528092919081815260200182805461032590610411565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b505050505081565b600060208083528351808285015260005b818110156103a75785810183015185820160400152820161038b565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103da57600080fd5b81356001600160a01b03811681146103f157600080fd5b9392505050565b60006020828403121561040a57600080fd5b5035919050565b600181811c9082168061042557607f821691505b60208210810361044557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207f5fa9aa55092db5e5088d38054b612d7ba96e5737c81714a749f8002d02073b64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83118D5 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x19FC2E61 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x2A0276F8 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x30C593F7 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x47535D7B EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x4893C26A EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x5E5C06E2 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x819FAF7B EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xBD99D7E1 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xC392F766 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xFB895733 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xFF464D3F EQ PUSH2 0x2C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH32 0x52941335797217779AB62CF10A3AE2B6D453B5F3A1285E7A816EB9F63A58D669 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x104 PUSH32 0xF33FE78EB7C840E8BF68670029904B6F0DA8E79346941C278A4E7676D473DF15 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x14C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x172 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x192 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x14C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH32 0x57C872046F094B8A493EC5EB6EA374EAFBC3C05951E40DE3C4302A41F3F127BA DUP2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x411 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x411 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x38B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x425 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x445 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x5FA9AA55092DB5E5088D38054B612D7BA96E5737C81714A749F8002D02073B64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"56:1572:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;255:62;;293:24;255:62;;;;;711:25:21;;;699:2;684:18;255:62:12;565:177:21;387:56:12;;422:21;387:56;;1606:19;;;;;-1:-1:-1;;;;;1606:19:12;;;;;;-1:-1:-1;;;;;911:32:21;;;893:51;;881:2;866:18;1606:19:12;747:203:21;450:24:12;;;;;;;;;;;;1129:6:21;1117:19;;;1099:38;;1087:2;1072:18;450:24:12;955:188:21;1016:18:12;;;;;;;;;;;;1313:14:21;;1306:22;1288:41;;1276:2;1261:18;1016::12;1148:187:21;1550:45:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;861:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:43:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1936:32:21;;;1918:51;;2000:2;1985:18;;1978:34;;;;2028:18;;;2021:34;;;;2086:2;2071:18;;2064:34;2129:3;2114:19;;2107:35;1956:3;2158:19;;2151:35;1905:3;1890:19;861:43:12;1631:561:21;509:19:12;;;;;-1:-1:-1;;;;;509:19:12;;;1469:49;;1514:4;1469:49;;1420:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;480:23;;;;;;;;-1:-1:-1;;;;;480:23:12;;;323:58;;359:22;323:58;;913:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;534:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:546:21:-;124:4;153:2;182;171:9;164:21;214:6;208:13;257:6;252:2;241:9;237:18;230:34;282:1;292:140;306:6;303:1;300:13;292:140;;;401:14;;;397:23;;391:30;367:17;;;386:2;363:26;356:66;321:10;;292:140;;;296:3;481:1;476:2;467:6;456:9;452:22;448:31;441:42;551:2;544;540:7;535:2;527:6;523:15;519:29;508:9;504:45;500:54;492:62;;;;14:546;;;;:::o;1340:286::-;1399:6;1452:2;1440:9;1431:7;1427:23;1423:32;1420:52;;;1468:1;1465;1458:12;1420:52;1494:23;;-1:-1:-1;;;;;1546:31:21;;1536:42;;1526:70;;1592:1;1589;1582:12;1526:70;1615:5;1340:286;-1:-1:-1;;;1340:286:21:o;2197:180::-;2256:6;2309:2;2297:9;2288:7;2284:23;2280:32;2277:52;;;2325:1;2322;2315:12;2277:52;-1:-1:-1;2348:23:21;;2197:180;-1:-1:-1;2197:180:21:o;2382:380::-;2461:1;2457:12;;;;2504;;;2525:61;;2579:4;2571:6;2567:17;2557:27;;2525:61;2632:2;2624:6;2621:14;2601:18;2598:38;2595:161;;2678:10;2673:3;2669:20;2666:1;2659:31;2713:4;2710:1;2703:15;2741:4;2738:1;2731:15;2595:161;;2382:380;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"230600","executionCost":"275","totalCost":"230875"},"external":{"DEFAULT_ADMIN_ROLE()":"371","FEE_ROLE()":"217","NODE_ROLE()":"437","OWENER_ROLE()":"195","_roles(bytes32)":"1342","aave()":"1191","accounts(address)":"5538","adapterParams()":"infinite","dstChainId()":"1079","interest()":"1268","isOpen()":"1098","isSupDe(address)":"1460","isTrueForCoin(address)":"1306","usdt()":"1081"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","FEE_ROLE()":"2a0276f8","NODE_ROLE()":"fb895733","OWENER_ROLE()":"19fc2e61","_roles(bytes32)":"bd99d7e1","aave()":"819faf7b","accounts(address)":"5e5c06e2","adapterParams()":"083118d5","dstChainId()":"30c593f7","interest()":"c392f766","isOpen()":"47535d7b","isSupDe(address)":"ff464d3f","isTrueForCoin(address)":"4893c26a","usdt()":"2f48ab7d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NODE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWENER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aave\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"capitalMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"capitalNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tradingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tradingNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adapterParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dstChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSupDe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrueForCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/data/VaultData.sol\":\"VaultData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/L1/data/VaultData.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VaultData {\\n\\n    enum OperateType{\\n        NONE,\\n        DEPOSIT, // \\u5145\\u503c\\n        DEPOSITETH, // \\u5145\\u503cETH\\n        WITHDRAW, // \\u63d0\\u73b0\\n        WITHDRAWINTEREST // \\u63d0\\u5229\\u606f\\n    }\\n    \\n    bytes32 public constant OWENER_ROLE = keccak256(\\\"OWENER_ROLE\\\");\\n    bytes32 public constant NODE_ROLE = keccak256(\\\"NODE_ROLE\\\");\\n    bytes32 public constant FEE_ROLE = keccak256(\\\"FEE_ROLE\\\");\\n\\n    uint16 public dstChainId;\\n    address public interest;\\n    address public aave;\\n    bytes public adapterParams;\\n   \\n    struct Account {\\n      address user;\\n      bytes32 capitalMerkleRoot;\\n      mapping(address => uint256) capitalBalance;\\n      uint256 capitalNonce;\\n      bytes32 tradingMerkleRoot;\\n      mapping(address => uint256) tradingBalance;\\n      uint256 tradingNonce;\\n      uint nativeFee;\\n    }\\n\\n   mapping(address => Account) public accounts;\\n   \\n   mapping(address => bool) public isSupDe;\\n   \\n   mapping(address => uint256)private latestShare;\\n   \\n   bool public isOpen;\\n\\n   struct InData{\\n        address user; \\n        bytes32 capitalMerkleRoot; \\n        address [] coinList; \\n        uint256 [] withdrawnValues;\\n        uint256 nativeFee;\\n        uint8 checkOutType; // 1 \\u63d0\\u5e01 2 \\u5229\\u606f\\n        bytes32 messageHash; \\n        bytes signature;\\n    }\\n\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) public _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    address[] coinList;\\n\\n    mapping(address => bool) public isTrueForCoin;\\n    \\n    address public usdt;\\n}\\n\",\"keccak256\":\"0xfff9780848d05a9eb0660adaab36551a349a387e977e77aa09aac428f31314f5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2881,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"dstChainId","offset":0,"slot":"0","type":"t_uint16"},{"astId":2883,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"interest","offset":2,"slot":"0","type":"t_address"},{"astId":2885,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"aave","offset":0,"slot":"1","type":"t_address"},{"astId":2887,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"adapterParams","offset":0,"slot":"2","type":"t_bytes_storage"},{"astId":2913,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"accounts","offset":0,"slot":"3","type":"t_mapping(t_address,t_struct(Account)2908_storage)"},{"astId":2917,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"isSupDe","offset":0,"slot":"4","type":"t_mapping(t_address,t_bool)"},{"astId":2921,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"latestShare","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2923,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"isOpen","offset":0,"slot":"6","type":"t_bool"},{"astId":2954,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"_roles","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_struct(RoleData)2949_storage)"},{"astId":2960,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"coinList","offset":0,"slot":"8","type":"t_array(t_address)dyn_storage"},{"astId":2964,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"isTrueForCoin","offset":0,"slot":"9","type":"t_mapping(t_address,t_bool)"},{"astId":2966,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"usdt","offset":0,"slot":"10","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Account)2908_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct VaultData.Account)","numberOfBytes":"32","value":"t_struct(Account)2908_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)2949_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct VaultData.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)2949_storage"},"t_struct(Account)2908_storage":{"encoding":"inplace","label":"struct VaultData.Account","members":[{"astId":2889,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"user","offset":0,"slot":"0","type":"t_address"},{"astId":2891,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"capitalMerkleRoot","offset":0,"slot":"1","type":"t_bytes32"},{"astId":2895,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"capitalBalance","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":2897,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"capitalNonce","offset":0,"slot":"3","type":"t_uint256"},{"astId":2899,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"tradingMerkleRoot","offset":0,"slot":"4","type":"t_bytes32"},{"astId":2903,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"tradingBalance","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2905,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"tradingNonce","offset":0,"slot":"6","type":"t_uint256"},{"astId":2907,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"nativeFee","offset":0,"slot":"7","type":"t_uint256"}],"numberOfBytes":"256"},"t_struct(RoleData)2949_storage":{"encoding":"inplace","label":"struct VaultData.RoleData","members":[{"astId":2946,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":2948,"contract":"contracts/L1/data/VaultData.sol:VaultData","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/L1/interface/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user_","type":"address"},{"indexed":false,"internalType":"address","name":"coin_","type":"address"},{"indexed":false,"internalType":"uint256","name":"interest_","type":"uint256"}],"name":"eventCheckOutInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"type_","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"},{"indexed":false,"internalType":"address","name":"sender_","type":"address"}],"name":"eventDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount_","type":"uint256"},{"indexed":false,"internalType":"address","name":"sender_","type":"address"}],"name":"eventDepositETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address[]","name":"coinAdd_","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"capitalValues_","type":"uint256[]"},{"indexed":false,"internalType":"uint8","name":"checkOutType","type":"uint8"}],"name":"eventReceive","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user_","type":"address"},{"indexed":false,"internalType":"bool","name":"re_","type":"bool"}],"name":"eventSetWhilLlist","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"type_","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amount_","type":"uint256[]"},{"indexed":false,"internalType":"address","name":"sender_","type":"address"}],"name":"eventWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"address","name":"coinType","type":"address"},{"indexed":false,"internalType":"uint256","name":"interestBalance","type":"uint256"}],"name":"eventWithdrawInterest","type":"event"},{"inputs":[{"internalType":"address","name":"type_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amount_","type":"uint256[]"},{"internalType":"address[]","name":"coin_","type":"address[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deposit(address,uint256)":"47e7ef24","depositETH(uint256)":"5358fbda","withdraw(uint256[],address[])":"16e57652"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"coin_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interest_\",\"type\":\"uint256\"}],\"name\":\"eventCheckOutInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"type_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"eventDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"eventDepositETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"coinAdd_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"capitalValues_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"checkOutType\",\"type\":\"uint8\"}],\"name\":\"eventReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"re_\",\"type\":\"bool\"}],\"name\":\"eventSetWhilLlist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"type_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"eventWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"coinType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestBalance\",\"type\":\"uint256\"}],\"name\":\"eventWithdrawInterest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"type_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amount_\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"coin_\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1/interface/IVault.sol\":\"IVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/L1/interface/IVault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IVault {\\n    function deposit(address type_, uint256 amount_)payable external;\\n\\n    function depositETH(uint256 amount_) payable external;\\n    \\n    function withdraw(uint256 [] memory amount_,address [] memory coin_) external;\\n\\n    event eventWithdraw(address[]type_, uint256 [] amount_,address sender_);\\n\\n    event eventDepositETH(uint256 amount_,address sender_);\\n\\n    event eventDeposit(address type_,uint256 amount_,address sender_);\\n\\n    event eventCheckOutInterest (address user_,address coin_,uint256 interest_);\\n\\n    event eventReceive(address user ,address[] coinAdd_, uint256[] capitalValues_, uint8 checkOutType);\\n\\n    event eventWithdrawInterest(address user, address coinType, uint256 interestBalance);\\n\\n    event eventSetWhilLlist(address user_,bool re_ );\\n}\\n\",\"keccak256\":\"0x6443b2cb95eeb8048dcf4e2d1bfbf66dcc830b164a8c01a99617f4d15b1c9ac5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/LzApp.sol":{"LzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","owner()":"8da5cb5b","pendingOwner()":"e30c3978","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryPayload(uint16,bytes,bytes)":"aaff5f16","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/LzApp.sol\":\"LzApp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() external {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/LayerZero/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable2Step.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"./util/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable2Step, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(_srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote), \\\"LzApp: invalid source sending contract\\\");\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function _lzSend(uint16 _dstChainId, bytes memory _payload, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams, uint _nativeFee) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(uint16 _dstChainId, uint16 _type, bytes memory _adapterParams, uint _extraGas) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type] + _extraGas;\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(uint16 _version, uint16 _chainId, address, uint _configType) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external   {\\n        lzEndpoint.retryPayload(_srcChainId,_srcAddress, _payload);\\n    }\\n\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external   {\\n        lzEndpoint.hasStoredPayload(_srcChainId,_srcAddress);\\n    }\\n    \\n     function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _srcChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_srcChainId] = _path;\\n        emit SetTrustedRemote(_srcChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(uint16 _dstChainId, uint16 _packetType, uint _minGas) external onlyOwner {\\n        require(_minGas > 0, \\\"LzApp: invalid minGas\\\");\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x250a898d17fa851914bb836743ea506a384fa35d110cde26247be3e6c8f2f29c\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xe9617a9f6db351b6ac4c9d5b1097798af59ad7f813e370e8cf69bb44addd8548\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n}\\n\",\"keccak256\":\"0x909bf72002c91806f39a64172c12b4188219e8649deefbe8d862604d4f9d3faf\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xe3e50134e39aa3c0f916447d36367970c6e4df972d488b794227e0b052ce80d5\",\"license\":\"MIT\"},\"contracts/LayerZero/util/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\n\\nlibrary BytesLib {\\n    function concat(\\n        bytes memory _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n        // Get a location of some free memory and store it in tempBytes as\\n        // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n        // Store the length of the first bytes array at the beginning of\\n        // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n        // Maintain a memory counter for the current write location in the\\n        // temp bytes array by adding the 32 bytes for the array length to\\n        // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n        // Stop copying when the memory counter reaches the length of the\\n        // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n            // Initialize a copy counter to the start of the _preBytes data,\\n            // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n            // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n            // Write the _preBytes data into the tempBytes memory 32 bytes\\n            // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Add the length of _postBytes to the current length of tempBytes\\n        // and store it as the new length in the first 32 bytes of the\\n        // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n        // Move the memory counter back from a multiple of 0x20 to the\\n        // actual end of the _preBytes data.\\n            mc := end\\n        // Stop copying when the memory counter reaches the new combined\\n        // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Update the free-memory pointer by padding our last write location\\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n        // next 32 byte block, then round down to the nearest multiple of\\n        // 32. If the sum of the length of the two arrays is zero then add\\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(0x40, and(\\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n            not(31) // Round down to the nearest 32 bytes.\\n            ))\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n        // Read the first 32 bytes of _preBytes storage, which is the length\\n        // of the array. (We don't need to use the offset into the slot\\n        // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n        // Arrays of 31 bytes or less have an even value in their slot,\\n        // while longer arrays have an odd value. The actual length is\\n        // the slot divided by two for odd values, and the lowest order\\n        // byte divided by two for even values.\\n        // If the slot is even, bitwise and the slot with 255 and divide by\\n        // two to get the length. If the slot is odd, bitwise and the slot\\n        // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n        // slength can contain both the length and contents of the array\\n        // if length < 32 bytes so let's prepare for that\\n        // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n            // Since the new array still fits in the slot, we just need to\\n            // update the contents of the slot.\\n            // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                _preBytes.slot,\\n                // all the modifications to the slot are inside this\\n                // next block\\n                add(\\n                // we can just add to the slot contents because the\\n                // bytes we want to change are the LSBs\\n                fslot,\\n                add(\\n                mul(\\n                div(\\n                // load the bytes from memory\\n                mload(add(_postBytes, 0x20)),\\n                // zero all bytes to the right\\n                exp(0x100, sub(32, mlength))\\n                ),\\n                // and now shift left the number of bytes to\\n                // leave space for the length in the slot\\n                exp(0x100, sub(32, newlength))\\n                ),\\n                // increase length by the double of the memory\\n                // bytes length\\n                mul(mlength, 2)\\n                )\\n                )\\n                )\\n            }\\n            case 1 {\\n            // The stored value fits in the slot, but the combined value\\n            // will exceed it.\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // The contents of the _postBytes array start 32 bytes into\\n            // the structure. Our first read should obtain the `submod`\\n            // bytes that can fit into the unused space in the last word\\n            // of the stored array. To get this, we read 32 bytes starting\\n            // from `submod`, so the data we read overlaps with the array\\n            // contents by `submod` bytes. Masking the lowest-order\\n            // `submod` bytes allows us to add that value directly to the\\n            // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(\\n                sc,\\n                add(\\n                and(\\n                fslot,\\n                0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\\n                ),\\n                and(mload(mc), mask)\\n                )\\n                )\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n            // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // Copy over the first `submod` bytes of the new data as in\\n            // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint256 _start,\\n        uint256 _length\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n            // The first word of the slice result is potentially a partial\\n            // word read from the original array. To read it, we calculate\\n            // the length of that partial word and start copying that many\\n            // bytes into the array. The first word we copy will start with\\n            // data we don't care about, but the last `lengthmod` bytes will\\n            // land at the beginning of the contents of the new array. When\\n            // we're done copying, we overwrite the full first word with\\n            // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n            // The multiplication in the next line is necessary\\n            // because when slicing multiples of 32 bytes (lengthmod == 0)\\n            // the following copy loop was copying the origin's length\\n            // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                // The multiplication in the next line has the same exact purpose\\n                // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n            //update free-memory pointer\\n            //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n            //zero out the 32 bytes slice we are about to return\\n            //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1 , \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint256 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n            // cb is a circuit breaker in the for loop since there's\\n            //  no said feature for inline assembly loops\\n            // cb = 1 - don't breaker\\n            // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                // the next line is the loop condition:\\n                // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                    // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(\\n        bytes storage _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    view\\n    returns (bool)\\n    {\\n        bool success = true;\\n\\n        assembly {\\n        // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n        // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                    // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                        // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                    // cb is a circuit breaker in the for loop since there's\\n                    //  no said feature for inline assembly loops\\n                    // cb = 1 - don't breaker\\n                    // cb = 0 - break\\n                        let cb := 1\\n\\n                    // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                        for {} eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                            // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x2255aadad70e87ed42b158776330175644b07fbbc7e77ed32cd6330974abbcee\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/LayerZero/LzApp.sol:LzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":120,"contract":"contracts/LayerZero/LzApp.sol:LzApp","label":"_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":3072,"contract":"contracts/LayerZero/LzApp.sol:LzApp","label":"trustedRemoteLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":3078,"contract":"contracts/LayerZero/LzApp.sol:LzApp","label":"minDstGasLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":3080,"contract":"contracts/LayerZero/LzApp.sol:LzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/NonblockingLzApp.sol":{"NonblockingLzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","pendingOwner()":"e30c3978","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","retryPayload(uint16,bytes,bytes)":"aaff5f16","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/NonblockingLzApp.sol\":\"NonblockingLzApp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() external {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0x5c879356795cc563440408404a52eaf672d4547949e0a5920fb17642303d9e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/LayerZero/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable2Step.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"./util/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable2Step, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(_srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote), \\\"LzApp: invalid source sending contract\\\");\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function _lzSend(uint16 _dstChainId, bytes memory _payload, address payable _refundAddress, address _zroPaymentAddress, bytes memory _adapterParams, uint _nativeFee) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(uint16 _dstChainId, uint16 _type, bytes memory _adapterParams, uint _extraGas) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type] + _extraGas;\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(uint16 _version, uint16 _chainId, address, uint _configType) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external   {\\n        lzEndpoint.retryPayload(_srcChainId,_srcAddress, _payload);\\n    }\\n\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external   {\\n        lzEndpoint.hasStoredPayload(_srcChainId,_srcAddress);\\n    }\\n    \\n     function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _srcChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_srcChainId] = _path;\\n        emit SetTrustedRemote(_srcChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(uint16 _dstChainId, uint16 _packetType, uint _minGas) external onlyOwner {\\n        require(_minGas > 0, \\\"LzApp: invalid minGas\\\");\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x250a898d17fa851914bb836743ea506a384fa35d110cde26247be3e6c8f2f29c\",\"license\":\"MIT\"},\"contracts/LayerZero/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"./util/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress)\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32))) public failedMessages;\\n\\n    event MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n    event RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\n    // overriding the virtual function in LzReceiver\\n    function _blockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(gasleft(), 150, abi.encodeWithSelector(this.nonblockingLzReceive.selector, _srcChainId, _srcAddress, _nonce, _payload));\\n        // try-catch all errors/exceptions\\n        if (!success) {\\n            _storeFailedMessage(_srcChainId, _srcAddress, _nonce, _payload, reason);\\n        }\\n    }\\n\\n    function _storeFailedMessage(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload, bytes memory _reason) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public virtual {\\n        // only internal transaction\\n        require(_msgSender() == address(this), \\\"NonblockingLzApp: caller must be LzApp\\\");\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(uint16 _srcChainId, bytes memory _srcAddress, uint64 _nonce, bytes memory _payload) internal virtual;\\n\\n    function retryMessage(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(payloadHash != bytes32(0), \\\"NonblockingLzApp: no stored message\\\");\\n        require(keccak256(_payload) == payloadHash, \\\"NonblockingLzApp: invalid payload\\\");\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x37cff8f389b0de9111f4f950252217993a78c12dfb071d09d9fbe217e4d394d4\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xe9617a9f6db351b6ac4c9d5b1097798af59ad7f813e370e8cf69bb44addd8548\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n}\\n\",\"keccak256\":\"0x909bf72002c91806f39a64172c12b4188219e8649deefbe8d862604d4f9d3faf\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xe3e50134e39aa3c0f916447d36367970c6e4df972d488b794227e0b052ce80d5\",\"license\":\"MIT\"},\"contracts/LayerZero/util/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\n\\nlibrary BytesLib {\\n    function concat(\\n        bytes memory _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n        // Get a location of some free memory and store it in tempBytes as\\n        // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n        // Store the length of the first bytes array at the beginning of\\n        // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n        // Maintain a memory counter for the current write location in the\\n        // temp bytes array by adding the 32 bytes for the array length to\\n        // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n        // Stop copying when the memory counter reaches the length of the\\n        // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n            // Initialize a copy counter to the start of the _preBytes data,\\n            // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n            // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n            // Write the _preBytes data into the tempBytes memory 32 bytes\\n            // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Add the length of _postBytes to the current length of tempBytes\\n        // and store it as the new length in the first 32 bytes of the\\n        // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n        // Move the memory counter back from a multiple of 0x20 to the\\n        // actual end of the _preBytes data.\\n            mc := end\\n        // Stop copying when the memory counter reaches the new combined\\n        // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Update the free-memory pointer by padding our last write location\\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n        // next 32 byte block, then round down to the nearest multiple of\\n        // 32. If the sum of the length of the two arrays is zero then add\\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(0x40, and(\\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n            not(31) // Round down to the nearest 32 bytes.\\n            ))\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n        // Read the first 32 bytes of _preBytes storage, which is the length\\n        // of the array. (We don't need to use the offset into the slot\\n        // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n        // Arrays of 31 bytes or less have an even value in their slot,\\n        // while longer arrays have an odd value. The actual length is\\n        // the slot divided by two for odd values, and the lowest order\\n        // byte divided by two for even values.\\n        // If the slot is even, bitwise and the slot with 255 and divide by\\n        // two to get the length. If the slot is odd, bitwise and the slot\\n        // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n        // slength can contain both the length and contents of the array\\n        // if length < 32 bytes so let's prepare for that\\n        // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n            // Since the new array still fits in the slot, we just need to\\n            // update the contents of the slot.\\n            // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                _preBytes.slot,\\n                // all the modifications to the slot are inside this\\n                // next block\\n                add(\\n                // we can just add to the slot contents because the\\n                // bytes we want to change are the LSBs\\n                fslot,\\n                add(\\n                mul(\\n                div(\\n                // load the bytes from memory\\n                mload(add(_postBytes, 0x20)),\\n                // zero all bytes to the right\\n                exp(0x100, sub(32, mlength))\\n                ),\\n                // and now shift left the number of bytes to\\n                // leave space for the length in the slot\\n                exp(0x100, sub(32, newlength))\\n                ),\\n                // increase length by the double of the memory\\n                // bytes length\\n                mul(mlength, 2)\\n                )\\n                )\\n                )\\n            }\\n            case 1 {\\n            // The stored value fits in the slot, but the combined value\\n            // will exceed it.\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // The contents of the _postBytes array start 32 bytes into\\n            // the structure. Our first read should obtain the `submod`\\n            // bytes that can fit into the unused space in the last word\\n            // of the stored array. To get this, we read 32 bytes starting\\n            // from `submod`, so the data we read overlaps with the array\\n            // contents by `submod` bytes. Masking the lowest-order\\n            // `submod` bytes allows us to add that value directly to the\\n            // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(\\n                sc,\\n                add(\\n                and(\\n                fslot,\\n                0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\\n                ),\\n                and(mload(mc), mask)\\n                )\\n                )\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n            // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // Copy over the first `submod` bytes of the new data as in\\n            // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint256 _start,\\n        uint256 _length\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n            // The first word of the slice result is potentially a partial\\n            // word read from the original array. To read it, we calculate\\n            // the length of that partial word and start copying that many\\n            // bytes into the array. The first word we copy will start with\\n            // data we don't care about, but the last `lengthmod` bytes will\\n            // land at the beginning of the contents of the new array. When\\n            // we're done copying, we overwrite the full first word with\\n            // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n            // The multiplication in the next line is necessary\\n            // because when slicing multiples of 32 bytes (lengthmod == 0)\\n            // the following copy loop was copying the origin's length\\n            // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                // The multiplication in the next line has the same exact purpose\\n                // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n            //update free-memory pointer\\n            //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n            //zero out the 32 bytes slice we are about to return\\n            //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1 , \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint256 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n            // cb is a circuit breaker in the for loop since there's\\n            //  no said feature for inline assembly loops\\n            // cb = 1 - don't breaker\\n            // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                // the next line is the loop condition:\\n                // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                    // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(\\n        bytes storage _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    view\\n    returns (bool)\\n    {\\n        bool success = true;\\n\\n        assembly {\\n        // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n        // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                    // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                        // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                    // cb is a circuit breaker in the for loop since there's\\n                    //  no said feature for inline assembly loops\\n                    // cb = 1 - don't breaker\\n                    // cb = 0 - break\\n                        let cb := 1\\n\\n                    // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                        for {} eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                            // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x2255aadad70e87ed42b158776330175644b07fbbc7e77ed32cd6330974abbcee\",\"license\":\"Unlicense\"},\"contracts/LayerZero/util/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint256 constant LOW_28_MASK =\\n    0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint256 _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n            _gas, // gas\\n            _target, // recipient\\n            0, // ether value\\n            add(_calldata, 0x20), // inloc\\n            mload(_calldata), // inlen\\n            0, // outloc\\n            0 // outlen\\n            )\\n        // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n        // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n        // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint256 _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n            _gas, // gas\\n            _target, // recipient\\n            add(_calldata, 0x20), // inloc\\n            mload(_calldata), // inlen\\n            0, // outloc\\n            0 // outlen\\n            )\\n        // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n        // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n        // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf)\\n    internal\\n    pure\\n    {\\n        require(_buf.length >= 4);\\n        uint256 _mask = LOW_28_MASK;\\n        assembly {\\n        // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n        // mask out the top 4 bytes\\n        // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x23942250ddd277c443fa27c6b4ab51e6b3b5e654548b6b9e8d785a88ebec4dfe\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/LayerZero/NonblockingLzApp.sol:NonblockingLzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":120,"contract":"contracts/LayerZero/NonblockingLzApp.sol:NonblockingLzApp","label":"_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":3072,"contract":"contracts/LayerZero/NonblockingLzApp.sol:NonblockingLzApp","label":"trustedRemoteLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":3078,"contract":"contracts/LayerZero/NonblockingLzApp.sol:NonblockingLzApp","label":"minDstGasLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":3080,"contract":"contracts/LayerZero/NonblockingLzApp.sol:NonblockingLzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":3598,"contract":"contracts/LayerZero/NonblockingLzApp.sol:NonblockingLzApp","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/LayerZero/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(uint16 _dstChainId, bytes calldata _destination, bytes calldata _payload, address payable _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(uint16 _srcChainId, bytes calldata _srcAddress, address _dstAddress, uint64 _nonce, uint _gasLimit, bytes calldata _payload) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(uint16 _dstChainId, address _userApplication, bytes calldata _payload, bool _payInZRO, bytes calldata _adapterParam) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(uint16 _srcChainId, bytes calldata _srcAddress, bytes calldata _payload) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint _configType) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xe9617a9f6db351b6ac4c9d5b1097798af59ad7f813e370e8cf69bb44addd8548\",\"license\":\"MIT\"},\"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xe3e50134e39aa3c0f916447d36367970c6e4df972d488b794227e0b052ce80d5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzReceive(uint16,bytes,uint64,bytes)":"001d3567"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/LayerZero/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n}\\n\",\"keccak256\":\"0x909bf72002c91806f39a64172c12b4188219e8649deefbe8d862604d4f9d3faf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol":{"ILayerZeroUserApplicationConfig":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"forceResumeReceive(uint16,bytes)":"42d65a8d","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol\":\"ILayerZeroUserApplicationConfig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/LayerZero/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(uint16 _version, uint16 _chainId, uint _configType, bytes calldata _config) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xe3e50134e39aa3c0f916447d36367970c6e4df972d488b794227e0b052ce80d5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/util/BytesLib.sol":{"BytesLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220736def51438e1b55c82d49d92dd2a631979dda657925891731906ba9849f8b4d64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x6DEF51438E1B55C82D49D92DD2A631979DDA6579 0x25 DUP10 OR BALANCE SWAP1 PUSH12 0xA9849F8B4D64736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"370:18108:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:18108:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220736def51438e1b55c82d49d92dd2a631979dda657925891731906ba9849f8b4d64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x6DEF51438E1B55C82D49D92DD2A631979DDA6579 0x25 DUP10 OR BALANCE SWAP1 PUSH12 0xA9849F8B4D64736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"370:18108:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"concat(bytes memory,bytes memory)":"infinite","concatStorage(bytes storage pointer,bytes memory)":"infinite","equal(bytes memory,bytes memory)":"infinite","equalStorage(bytes storage pointer,bytes memory)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","toAddress(bytes memory,uint256)":"infinite","toBytes32(bytes memory,uint256)":"infinite","toUint128(bytes memory,uint256)":"infinite","toUint16(bytes memory,uint256)":"infinite","toUint256(bytes memory,uint256)":"infinite","toUint32(bytes memory,uint256)":"infinite","toUint64(bytes memory,uint256)":"infinite","toUint8(bytes memory,uint256)":"infinite","toUint96(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/util/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/LayerZero/util/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\n\\nlibrary BytesLib {\\n    function concat(\\n        bytes memory _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n        // Get a location of some free memory and store it in tempBytes as\\n        // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n        // Store the length of the first bytes array at the beginning of\\n        // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n        // Maintain a memory counter for the current write location in the\\n        // temp bytes array by adding the 32 bytes for the array length to\\n        // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n        // Stop copying when the memory counter reaches the length of the\\n        // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n            // Initialize a copy counter to the start of the _preBytes data,\\n            // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n            // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n            // Write the _preBytes data into the tempBytes memory 32 bytes\\n            // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Add the length of _postBytes to the current length of tempBytes\\n        // and store it as the new length in the first 32 bytes of the\\n        // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n        // Move the memory counter back from a multiple of 0x20 to the\\n        // actual end of the _preBytes data.\\n            mc := end\\n        // Stop copying when the memory counter reaches the new combined\\n        // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n        // Update the free-memory pointer by padding our last write location\\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n        // next 32 byte block, then round down to the nearest multiple of\\n        // 32. If the sum of the length of the two arrays is zero then add\\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(0x40, and(\\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n            not(31) // Round down to the nearest 32 bytes.\\n            ))\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n        // Read the first 32 bytes of _preBytes storage, which is the length\\n        // of the array. (We don't need to use the offset into the slot\\n        // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n        // Arrays of 31 bytes or less have an even value in their slot,\\n        // while longer arrays have an odd value. The actual length is\\n        // the slot divided by two for odd values, and the lowest order\\n        // byte divided by two for even values.\\n        // If the slot is even, bitwise and the slot with 255 and divide by\\n        // two to get the length. If the slot is odd, bitwise and the slot\\n        // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n        // slength can contain both the length and contents of the array\\n        // if length < 32 bytes so let's prepare for that\\n        // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n            // Since the new array still fits in the slot, we just need to\\n            // update the contents of the slot.\\n            // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                _preBytes.slot,\\n                // all the modifications to the slot are inside this\\n                // next block\\n                add(\\n                // we can just add to the slot contents because the\\n                // bytes we want to change are the LSBs\\n                fslot,\\n                add(\\n                mul(\\n                div(\\n                // load the bytes from memory\\n                mload(add(_postBytes, 0x20)),\\n                // zero all bytes to the right\\n                exp(0x100, sub(32, mlength))\\n                ),\\n                // and now shift left the number of bytes to\\n                // leave space for the length in the slot\\n                exp(0x100, sub(32, newlength))\\n                ),\\n                // increase length by the double of the memory\\n                // bytes length\\n                mul(mlength, 2)\\n                )\\n                )\\n                )\\n            }\\n            case 1 {\\n            // The stored value fits in the slot, but the combined value\\n            // will exceed it.\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // The contents of the _postBytes array start 32 bytes into\\n            // the structure. Our first read should obtain the `submod`\\n            // bytes that can fit into the unused space in the last word\\n            // of the stored array. To get this, we read 32 bytes starting\\n            // from `submod`, so the data we read overlaps with the array\\n            // contents by `submod` bytes. Masking the lowest-order\\n            // `submod` bytes allows us to add that value directly to the\\n            // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(\\n                sc,\\n                add(\\n                and(\\n                fslot,\\n                0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\\n                ),\\n                and(mload(mc), mask)\\n                )\\n                )\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n            // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n            // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n            // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n            // Copy over the first `submod` bytes of the new data as in\\n            // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint256 _start,\\n        uint256 _length\\n    )\\n    internal\\n    pure\\n    returns (bytes memory)\\n    {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n            // The first word of the slice result is potentially a partial\\n            // word read from the original array. To read it, we calculate\\n            // the length of that partial word and start copying that many\\n            // bytes into the array. The first word we copy will start with\\n            // data we don't care about, but the last `lengthmod` bytes will\\n            // land at the beginning of the contents of the new array. When\\n            // we're done copying, we overwrite the full first word with\\n            // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n            // The multiplication in the next line is necessary\\n            // because when slicing multiples of 32 bytes (lengthmod == 0)\\n            // the following copy loop was copying the origin's length\\n            // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                // The multiplication in the next line has the same exact purpose\\n                // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n            //update free-memory pointer\\n            //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n            //zero out the 32 bytes slice we are about to return\\n            //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1 , \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint256 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n            // cb is a circuit breaker in the for loop since there's\\n            //  no said feature for inline assembly loops\\n            // cb = 1 - don't breaker\\n            // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                // the next line is the loop condition:\\n                // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                    // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(\\n        bytes storage _preBytes,\\n        bytes memory _postBytes\\n    )\\n    internal\\n    view\\n    returns (bool)\\n    {\\n        bool success = true;\\n\\n        assembly {\\n        // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n        // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n        // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                    // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                        // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                    // cb is a circuit breaker in the for loop since there's\\n                    //  no said feature for inline assembly loops\\n                    // cb = 1 - don't breaker\\n                    // cb = 0 - break\\n                        let cb := 1\\n\\n                    // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                        for {} eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                            // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n            // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x2255aadad70e87ed42b158776330175644b07fbbc7e77ed32cd6330974abbcee\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LayerZero/util/ExcessivelySafeCall.sol":{"ExcessivelySafeCall":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c819bc91f8a8d70838f96e4325a84e0766fe24348decd942417e88cc7f8935264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 DUP2 SWAP12 0xC9 0x1F DUP11 DUP14 PUSH17 0x838F96E4325A84E0766FE24348DECD9424 OR 0xE8 DUP13 0xC7 0xF8 SWAP4 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"72:5333:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:5333:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c819bc91f8a8d70838f96e4325a84e0766fe24348decd942417e88cc7f8935264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 DUP2 SWAP12 0xC9 0x1F DUP11 DUP14 PUSH17 0x838F96E4325A84E0766FE24348DECD9424 OR 0xE8 DUP13 0xC7 0xF8 SWAP4 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"72:5333:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"excessivelySafeCall(address,uint256,uint16,bytes memory)":"infinite","excessivelySafeStaticCall(address,uint256,uint16,bytes memory)":"infinite","swapSelector(bytes4,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LayerZero/util/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/LayerZero/util/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint256 constant LOW_28_MASK =\\n    0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint256 _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n            _gas, // gas\\n            _target, // recipient\\n            0, // ether value\\n            add(_calldata, 0x20), // inloc\\n            mload(_calldata), // inlen\\n            0, // outloc\\n            0 // outlen\\n            )\\n        // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n        // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n        // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint256 _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint256 _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n            _gas, // gas\\n            _target, // recipient\\n            add(_calldata, 0x20), // inloc\\n            mload(_calldata), // inlen\\n            0, // outloc\\n            0 // outlen\\n            )\\n        // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n        // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n        // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf)\\n    internal\\n    pure\\n    {\\n        require(_buf.length >= 4);\\n        uint256 _mask = LOW_28_MASK;\\n        assembly {\\n        // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n        // mask out the top 4 bytes\\n        // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x23942250ddd277c443fa27c6b4ab51e6b3b5e654548b6b9e8d785a88ebec4dfe\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}